@model SFA.Apprenticeships.Web.Candidate.ViewModels.Applications.ApplicationViewModel

@{
    ViewBag.Title = "SFA Apprenticeships - Apply for Vacancy";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1 class="heading-xlarge">Apply for vacancy</h1>
<section class="section-border">
    <div class="text">
        <div class="hgroup-medium">
            <h3 class="heading-medium" id="vacancy-title">@Model.VacancyDetail.Title</h3>
            <span class="subtitle" id="vacancy-employer">@Model.VacancyDetail.EmployerName</span>
        </div>
        <p id="vacancy-summary">@Model.VacancyDetail.Description</p>
        <p>
            <a href="@Url.Action("Details", "VacancySearch", new { @id = Model.VacancyDetail.Id })">View apprenticeship</a>
        </p>
    </div>
</section>

@using (Html.BeginForm("Apply", "Application", new { id = Model.VacancyDetail.Id }, FormMethod.Post))
{
    @Html.Partial("ValidationSummary", ViewData.ModelState)

    @Html.DisplayFor(m => m.Candidate)
    @Html.EditorFor(m => m.Candidate.Education)

    <div data-bind="visible: selectedSection() === 'applyQualifications', stopBinding:true">

        <fieldset class="fieldset-with-border" id="applyQualifications">
            <legend class="heading-large">Qualifications</legend>
            <p class="form-label">Do you have any qualifications?</p>
            <div class="form-group form-group-compound inline clearfix">
                <label data-target="qualifications-panel" for="qualifications-yes" class="block-label">
                    <input name="quals" type="radio" id="qualifications-yes" value="yes" data-bind="checked: hasQualifications">Yes
                </label>
                <label for="qualifications-no" class="block-label">
                    <input name="quals" type="radio" id="qualifications-no" value="no" data-bind="checked: hasQualifications">No
                </label>
            </div>
            <div id="qualifications-panel" class="toggle-content">
                <div class="clearfix">
                    <div class="inline-fixed">
                        <div class="form-group">
                            <label for="qual-type" class="form-label">Type of qualification</label>
                            <select id="qual-type" data-bind="value: selectedQualification">
                                <option value="">Select from list</option>
                                <option value="GCSE">GCSE</option>
                                <option value="AS Level">AS Level</option>
                                <option value="A Level">A Level</option>
                                <option value="BTEC">BTEC</option>
                                <option value="NVQ or SVQ Level 1">NVQ or SVQ Level 1</option>
                                <option value="NVQ or SVQ Level 2">NVQ or SVQ Level 2</option>
                                <option value="NVQ or SVQ Level 3">NVQ or SVQ Level 3</option>
                                <option id="otherQualOption" value="Other">Other</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="subject-year" class="form-label">Year</label>
                            <input maxlength="4" type="tel" class="form-control form-control-small" pattern="[0-9]*"
                                   id="subject-year" data-bind="value: year">
                        </div>
                    </div>
                    <div class="form-group toggle-content">
                        <label for="other-qual" class="form-label">Name of other qualification</label>
                        <input type="text" class="form-control" id="other-qual" data-bind="value: otherQualification">
                    </div>
                    <div class="form-group form-group-compound">
                        <label for="subject-name" class="form-label">Subject</label>
                        <input type="text" class="form-control" id="subject-name" data-bind="value: subject">
                    </div>
                    <div class="inline-fixed">
                        <div class="form-group">
                            <label for="subject-grade" class="form-label">Grade</label>
                            <input type="text" class="form-control form-control-medium" id="subject-grade" data-bind="value: grade">
                        </div>
                        <div class="form-group">
                            <input id="qual-predicted" type="checkbox" data-bind="checked: predicted">
                            <label for="qual-predicted">Predicted?</label>
                        </div>
                    </div>
                    <div class="form-group">
                        <button class="button" id="saveQualification" data-bind="click: addQualification">Add qualification</button>
                    </div>
                </div>
                <div>
                    <div class="hgroup-small">
                        <h3 class="heading-small"></h3>
                    </div>
                    <table class="grid-3-4">
                        <colgroup>
                            <col class="t40">
                            <col class="t25">
                            <col class="t15">
                            <col class="t10">
                            <col class="t10">
                            <col>
                        </colgroup>
                        <thead>
                            <tr>
                                <th>
                                    <span class="heading-span">Subject</span>
                                </th>
                                <th>
                                    <span class="heading-span">Grade</span>
                                </th>
                                <th>
                                    <span class="heading-span">Year</span>
                                </th>
                                <th></th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody data-bind="foreach: qualifications">
                            <tr>
                                <td>
                                    <input class="form-control qual-input-edit" type="text" data-bind="value: qualificationSubject, enable: editMode">
                                </td>
                                <td>
                                    <input class="form-control qual-input-edit" type="text" data-bind="value: qualificationGrade, enable: editMode">
                                </td>
                                <td>
                                    <input class="form-control qual-input-edit" type="text" data-bind="value: qualificationYear, enable: editMode">
                                </td>
                                <td class="ta-center">
                                    <span class="fake-link cell-span" data-bind='click: $root.editQualification'>Edit</span>
                                </td>
                                <td class="ta-center">
                                    <i class="cell-span"><i class="ir icon-remove" data-bind='click: $root.removeQualification'>Remove</i></i>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group text">
                <details>
                    <summary role="button">Yet to sit your exams?</summary>
                    <p class="panel-indent">
                        If you haven’t taken your exams yet, or are still awaiting for your
                        results, enter the grades you're predicted to get. If you’re unsure
                        where to find these, contact your school or college.
                    </p>
                </details>
            </div>
        </fieldset>


    </div>

    <fieldset id="applyWorkExperience" class="fieldset-with-border">
        <legend class="heading-large">Work experience</legend>
        @foreach (var experience in Model.Candidate.WorkExperience)
        {
            <div class="work-history-wrapper grid-3-4">
                <div class="grid-wrapper work-history-item">
                    <div class="work-controls">
                        <div class="work-edit ta-center">
                            <span class="cell-span fake-link">Edit</span>
                        </div>
                        <div class="work-delete ta-center">
                            <span class="cell-span">
                                <i class="ir icon-remove">Remove</i>
                            </span>
                        </div>
                    </div>
                    <div class="grid grid-1-2">
                        <table class="table-no-btm-border table-compound">
                            <colgroup>
                                <col class="t100">
                                <col>
                            </colgroup>
                            <thead>
                                <tr>
                                    <th>
                                        <span class="heading-span">Work experience</span>
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>
                                        <input type="text" class="form-control toggle-content inline width-all-49 editable-work-input"
                                               value="@experience.Employer">
                                        <span class="cell-span editable-work">@experience.Employer</span>
                                        <span class="cell-span work-hyphen">-</span>
                                        <input type="text" class="form-control toggle-content inline width-all-49 editable-work-input no-right-margin"
                                               value="@experience.JobTitle">
                                        <span class="cell-span editable-work">@experience.JobTitle</span>
                                        <div></div>
                                        <textarea class="form-control toggle-content editable-work-input">@experience.Description</textarea>
                                        <span class="cell-span editable-work">@experience.Description</span>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <div class="grid grid-1-2">
                        <table class="table-no-btm-border table-compound">
                            <colgroup>
                                <col class="t30">
                                <col class="t30">
                                <col class="t25">
                                <col class="t15">
                                <col>
                            </colgroup>
                            <thead>
                                <tr>
                                    <th>
                                        <span class="heading-span">From</span>
                                    </th>
                                    <th>
                                        <span class="heading-span">To</span>
                                    </th>
                                    <th></th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>
                                        <input type="text" class="form-control toggle-content editable-work-input" value="@experience.FromYear">
                                        <span class="cell-span editable-work">@experience.FromYear</span>
                                    </td>
                                    <td>
                                        <input type="text" class="form-control toggle-content editable-work-input" value="@experience.ToYear">
                                        <span class="cell-span editable-work">@experience.ToYear</span>
                                    </td>
                                    <td></td>
                                    <td></td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        }

    </fieldset>

    @Html.EditorFor(m => m.Candidate.AboutYou)
    @Html.EditorFor(m => m.Candidate.EmployerQuestionAnswers)

    @Html.HiddenFor(m => m.ApplicationViewId)
    
    <div class="form-group">
        @*The buttons below need the values so the controller knows what action to perform if restyling*@
        <button id="apply-button" type="submit" name="ApplicationAction" class="button" value="Preview">Preview application</button>
        <p id="saveApplication">
            <button id="save-button" type="submit" name="ApplicationAction" class="button-link cancel" value="Save">Save draft</button>
        </p>
        @if (Model.DateUpdated.HasValue)
        {
            <p id="applicationSaved">Saved at @Html.DisplayFor(m => Model.DateUpdated) to <a href="@Url.Action("Index", "MyApplications")" title="My Applications">my applications</a></p>
        }
    </div>    
    
}

@section scripts{
    
    <script type="text/javascript">

        var QualificationItemModel = function(qualType,qualOtherType, qualYear, qualSubject, qualGrade, qualPredicted) {

            var self = this;

            self.qualificationType = ko.observable(qualType).extend({ required: true });
            self.otherQualificationType = ko.observable(qualOtherType);
            self.qualificationYear = ko.observable(qualYear).extend({ required: true, min: 1914 });
            self.qualificationSubject = ko.observable(qualSubject).extend({ required: true });
            self.qualificationGrade = ko.observable(qualGrade).extend({ required: true });
            self.qualificationPredicted = ko.observable(qualPredicted);
            self.editMode = ko.observable(false);
        };

        var QualificationModel = function() {

            var self = this;

            self.hasQualifications = ko.observable("no");
            self.selectedQualification = ko.observable("").extend({ required: true });
            self.otherQualification = ko.observable("");
            self.year = ko.observable(0).extend({ required: true, min: 1914 });
            self.subject = ko.observable("").extend({ required: true });
            self.grade = ko.observable("").extend({ required: true });
            self.predicted = ko.observable(false);

            self.qualifications = ko.observableArray();

            self.errors = ko.validation.group(self);

        };

        QualificationModel.prototype = {

            addQualification: function() {

                var self = this;

                if (self.errors().length == 0) {
                    var qual = new QualificationItemModel(self.selectedQualification(),self.otherQualification(), self.year(), self.subject(), self.grade(), self.predicted());
                    self.qualifications.push(qual);
                }
            },
            removeQualification: function(qualification) {

                var self = this;

                self.qualifications.remove(qualification);

            },
            editQualification: function (qualification) {
                qualification.editMode(true);
            },
            getqualifications:function(data) {

                alert(JSON.stringify(data));
                var self = this;

                $(data).each(function(index, item) {

                    var mappedQual = new QualificationItemModel(item.QualificationType, "", item.Year,item.Subject, item.Grade, item.IsPredicted); 
                    self.qualifications.push(mappedQual);
                });

            }
        };

        var qualificationData = null;

        $(function() {
            qualificationData = @Html.Raw(Json.Encode(Model.Candidate.Qualifications));

            var qualModel = new QualificationModel();
            qualModel.getqualifications(qualificationData);
            ko.applyBindings(qualModel, document.getElementById('applyQualifications'));

        });

    </script>

    @*<script src="~/Content/_assets/js/vendor/knockout-3.1.0.js"></script>
    <script src="~/Content/_assets/js/vendor/knockout.validation.js"></script>*@
    @*<script src="~/Content/_assets/js/nas/applicationform.js"></script>*@
}
