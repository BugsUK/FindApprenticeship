@model TraineeshipSearchResponseViewModel

@{
    ViewBag.Title = "Apprenticeships - Results";
    Layout = "~/Views/Shared/_TraineeshipLayout.cshtml";
}

@section metatags
{
    @*Used by analytics to track succesful/unsuccessful searches*@
    <meta name="WT.oss_r" content="@Model.TotalHits" />
}

<div class="search-results-wrapper grid-wrapper">
    <div class="hgroup">
        <h1 class="heading-xlarge">Search results</h1>
        <div id="vacancy-result-summary">
            <p class="small-btm-margin">We've found <b class="bold-medium">@Model.TotalHits</b> traineeships in your selected area.</p>
        </div>
    </div>

    @using (Html.BeginRouteForm(CandidateRouteNames.TraineeshipResults, FormMethod.Get))
    {
        Html.Partial("ValidationSummary", ViewData.ModelState);
        Html.RenderPartial("_searchUpdate", Model.VacancySearch);
        <section class="grid grid-2-3">
            @{
                if (Model.TotalHits == 0)
                {
                    <p id="search-no-results-title">There are currently no traineeships that match your search.</p>
                    <p>Try editing your search:</p>
                    <ul>
                        <li>expanding your search location</li>
                        <li>making sure all words are spelt correctly</li>
                    </ul>
                }
                else
                {
                    <div id="pagedList">
                        @{ Html.RenderPartial("_searchResults", Model); }
                    </div>
                }
            }
        </section>
    }
</div>

@section scripts
{
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js"></script>

    @Scripts.Render("~/bundles/nas/locationsearch")
    <script type="text/javascript">

        $(function () {

            $("#Location").locationMatch({
                url: '@Url.Action("location", "Location")',
                longitude: '#Longitude',
                latitude: '#Latitude',
                latlonhash: '#Hash'
            });

            $('#sort-results').change(function () {

                $('#SearchAction').val("Sort");
                $("form").submit();
            });

            $('#results-per-page').change(function () {
                $('#SearchAction').val("Sort");
                $("form").submit();
            });

            $('#search-button').click(function() {
                $('#LocationType').val("NonNational");
            });

            /*Show map with radius in results*/

            var apprLatitude = Number($('#Latitude').val()),
                apprLongitude = Number($('#Longitude').val()),
                apprMiles = Number($('#loc-within').val()),
                apprZoom = 9,
                radiusCircle;

            if (apprMiles <= 40) {
                apprZoom = 7
            }

            if (apprMiles <= 30) {
                apprZoom = 8
            }

            if (apprMiles < 20) {
                apprZoom = 9
            }

            if (apprMiles < 10) {
                apprZoom = 10
            }

            if (apprMiles < 5) {
                apprZoom = 11
            }

            if (apprLatitude == 0 || apprLongitude == 0) {
                $('#map-canvas').parent().hide();
            }

            function initialize() {

                var mapOptions = {
                    center: { lat: apprLatitude, lng: apprLongitude },
                    zoom: apprZoom,
                    panControl: false,
                    zoomControl: true,
                    mapTypeControl: false,
                    scaleControl: false,
                    streetViewControl: false,
                    overviewMapControl: false,
                    scrollwheel: false
                };

                var map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);

                var distanceCircle = {
                    strokeColor: '#005ea5',
                    strokeOpacity: 0.8,
                    strokeWeight: 2,
                    fillColor: '#005ea5',
                    fillOpacity: 0.25,
                    map: map,
                    center: mapOptions.center,
                    radius: apprMiles * 1609.344
                }

                radiusCircle = new google.maps.Circle(distanceCircle);

            }
            google.maps.event.addDomListener(window, 'load', initialize);

            $('#editSearchToggle').on('click', function () {
                initialize();
            });

            $(window).resize( function () {
                initialize();
            });
        });

</script>
}