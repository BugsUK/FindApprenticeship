@model TraineeshipSearchViewModel

<section class="column-one-third">
        <fieldset class="search-filter">
            <legend class="heading-medium sfa-mob-collpanel-trigger" id="editSearchToggle">Edit search</legend>
            <div class="sfa-mob-collpanel toggle-content--mob" id="editSearchPanel">

                
                    @Html.FormTextFor(m=>m.ReferenceNumber, "Reference number", controlHtmlAttributes: new { @class = "form-control-4-4" })
                    @Html.FormTextFor(m => m.Location, hintText: "", containerHtmlAttributes: new { @class = "form-group-compound" }, controlHtmlAttributes: new { @class = "form-control-4-4" })
                    <div class="form-group">
                        <a href="#" class="geolocater hide-nojs " id="getLocation">Use current location</a>
                    </div>
                @{
                    var open = Model.LocationSearches.Any() ? "open " : "";
                    var hidden = Model.LocationSearches.Any() ? "" : "hidden ";
                }
                <details @(open) class="@(open)@(hidden)form-group" id="locationSuggestions">
                    <summary tabindex="0" aria-describedby="locSuggestionsAria"><span class="summary">Did you mean:</span></summary>
                    <p class="visuallyhidden" aria-live="polite" id="locSuggestionsAria"></p>
                    <div class="panel panel-border-narrow sfa-scrollable">
                        <ul id="location-suggestions" class="list">
                            @foreach (var locationSearch in Model.LocationSearches)
                            {
                                <li><a href="@Url.RouteUrl(CandidateRouteNames.TraineeshipResults, locationSearch)">@locationSearch.Location</a></li>
                            }
                        </ul>
                    </div>
                </details>

                <div class="form-group">
                    <label for="loc-within" class="form-label-bold">Within</label>
                    @Html.DropDownListFor(m => m.WithinDistance, Model.Distances, new { @id = "loc-within", @name = "WithinDistance", @class = "form-control form-control-auto" })
                </div>
                <div class="form-group">
                    <button class="button" id="search-button" name="SearchAction" value="Search">Update results</button>
                </div>
                <div class="form-group map-container hide-nojs">
                    <div id="map-canvas" style="width: 100%; height: 250px"></div>
                </div>

                @Html.HiddenFor(m => m.Latitude)
                @Html.HiddenFor(m => m.Longitude)
                @* This is declared explicitly because we want the value from the model NOT from the URL and the view engine will favour the (potentially incorrect) one from the URL *@
                <input id="Hash" name="Hash" type="hidden" value="@Model.LatLonLocHash()" />

            </div>
        </fieldset>
</section>