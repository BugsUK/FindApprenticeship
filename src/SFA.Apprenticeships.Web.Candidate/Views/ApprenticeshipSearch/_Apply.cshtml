@using SFA.Apprenticeships.Domain.Entities.Applications
@using SFA.Apprenticeships.Domain.Entities.Vacancies

@model ApprenticeshipVacancyDetailViewModel

@{
    var AnalyticsTag = "onclick=\"Webtrends.multiTrack({{ element: this, argsa: ['DCS.dcsuri', '{0}" + Model.Id + "', 'WT.dl', '99', 'WT.ti', '{1}', 'DCSext.buttonPos', '{2}'] }});\"";
}

@if (@Model.ApplyViaEmployerWebsite)
{
    <p class="sfa-no-bottom-margin">This apprenticeship requires you to apply through the employer's website.</p>

    if (Model.IsWellFormedVacancyUrl)
    {
        <a  id="external-employer-website" class="button sfa-button-secondary" rel="external"  target = "_blank" href="@Url.RouteUrl(CandidateRouteNames.RedirectToExternalWebsite, new {id = Model.Id})" @Html.Raw(string.Format(AnalyticsTag, "/apprenticeship/apply/offline/", "Apprenticeship – Apply Offline", ViewData["AnalyticsButtonPosition"]))>Apply now</a>
    }
    else
    {
        <p id="external-employer-raw-vacancy-url">@Model.VacancyUrl</p>
    }
}
else if (Request.IsAuthenticated)
{
    if (Model.CandidateApplicationStatus.HasValue && Model.CandidateApplicationStatus.Value != ApplicationStatuses.Saved)
    {
        // Candidate has applied for this vacancy.
        if (Model.CandidateApplicationStatus.Value == ApplicationStatuses.Draft)
        {
            if (Model.VacancyStatus == VacancyStatuses.Live)
            {
                <a role="button" id="apply-button" class="button" title="Resume application"
                   href="@Url.RouteUrl(CandidateRouteNames.ApprenticeshipApply, new {id = Model.Id})" 
                   @Html.Raw(string.Format(AnalyticsTag, "/apprenticeship/apply/resume/", "Apprenticeship – Resume Application", 
                  ViewData["AnalyticsButtonPosition"]))>Resume application</a>
            }
        }
        else
        {
            if (Model.DateApplied.HasValue)
            {
                <p id="date-applied" class="sfa-no-bottom-margin">You applied on @Html.DisplayFor(m => m.DateApplied, "Date").</p>
                <p>@Html.RouteLink("View application", CandidateRouteNames.ApprenticeshipView, new { id = Model.Id }, new { id = "view-application-link" })</p>
            }

            if (Model.VacancyStatus == VacancyStatuses.Live)
            {
                <a id="track-application-status" class="button sfa-button-secondary" href="@Url.RouteUrl(CandidateRouteNames.ApprenticeshipTrack, new { id = Model.Id })">Track application status</a>
            }
            else
            {
                <a id="return-to-my-applications" class="button sfa-button-secondary" href="@Url.RouteUrl(CandidateRouteNames.MyApplications)">Return to my applications</a>
            }
        }
    }
    else if (Model.VacancyStatus == VacancyStatuses.Live)
    {
        <a role="button" id="apply-button" class="button button-with-hint" title="Apply for apprenticeship" href="@Url.RouteUrl(CandidateRouteNames.ApprenticeshipApply, new { @id = Model.Id })" @Html.Raw(string.Format(AnalyticsTag, "/apprenticeship/apply/signedin/", "Apprenticeship – Signed In Apply", ViewData["AnalyticsButtonPosition"]))>Apply for apprenticeship</a>
    }
}
else if (Model.VacancyStatus == VacancyStatuses.Live)
{
    <a role="button" id="apply-button" class="button button-with-hint" title="Sign in to apply" href="@Url.RouteUrl(CandidateRouteNames.ApprenticeshipApply, new { @id = Model.Id })" @Html.Raw(string.Format(AnalyticsTag, "/apprenticeship/apply/signin/", "Apprenticeship – Sign In to Apply", ViewData["AnalyticsButtonPosition"]))>Sign in to apply</a>
}

@if (Model.VacancyStatus == VacancyStatuses.Live)
{
    <p id="vacancy-closing-date" class="font-xsmall">Closing date: @Model.ClosingDate.ToFriendlyClosingToday()</p>
}
