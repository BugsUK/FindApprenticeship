@using SFA.Apprenticeships.Domain.Entities.Vacancies

@model ApprenticeshipSearchResponseViewModel

@if (Model.TotalLocalHits == 0 && Model.TotalNationalHits == 0)
{
    <p id="search-no-results-title">There are currently no apprenticeships that match your search.</p>
    <p>Try editing your search:</p>
    <ul id="search-no-results" class="list list-bullet">
        @if (Model.VacancySearch.SearchMode == ApprenticeshipSearchMode.Keyword)
        {
            if (VacancyHelper.IsVacancyReference(Model.VacancySearch.Keywords))
            {
                <li id="search-no-results-reference-number">try a different reference number</li>
            }
            else
            {
                <li id="search-no-results-keywords">using different keywords</li>
            }

        }
        @if (Model.VacancySearch.SearchMode == ApprenticeshipSearchMode.Category)
        {
            if (Model.VacancySearch.SubCategories == null || Model.VacancySearch.SubCategories.Length == 0)
            {
                <li id="search-no-results-category">try a different category</li>
            }
            else
            {
                <li id="search-no-results-sub-category">select a different sub-category or sub-categories</li>
            }
        }
        <li>expanding your search location</li>
        @if (Model.VacancySearch.ApprenticeshipLevel != "All")
        {
            <li id="search-no-results-apprenticeship-levels">using a different level, or change to all levels</li>
        }
    </ul>
    <div>
        @if (Model.VacancySearch.SearchMode == ApprenticeshipSearchMode.Keyword)
        {
            <p id="search-no-results-trybrowse">Alternatively, try <a href="@Url.RouteUrl(CandidateRouteNames.ApprenticeshipSearch, new { searchMode = ApprenticeshipSearchMode.Category })">browsing by category</a> to find an apprenticeship.</p>
        }
    </div>
}
else
{
    <fieldset>
        <legend class="visuallyhidden">Search items</legend>
        <div class="grid-row">
            <div class="column-one-third">
                <div class="width-all-1-3 hide-js inl-block"></div>
                <div class="hide-nojs form-group">
                    <details class="sfa-no-bottom-margin sfa-small-top-padding">
                        <summary><span class="summary">More/less detail</span></summary>
                        <div class="panel panel-border-narrow" id="chooseDetails">
                            <ul class="list list-checkradio font-xsmall">
                                @if (Model.VacancySearch.SearchMode == ApprenticeshipSearchMode.Category)
                                {
                                    <li>
                                        <input @{if (Model.VacancySearch.DisplaySubCategory) { <text> checked="checked" </text>     }} type="checkbox" id="DisplaySubCategory">
                                        <label for="DisplaySubCategory">Sub-category</label>
                                    </li>
    }
                                <li>
                                    <input @{if (Model.VacancySearch.DisplayDescription) { <text> checked="checked" </text>     }} type="checkbox" id="DisplayDescription">
                                    <label for="DisplayDescription">Description</label>
                                </li>
                                @if (Model.VacancySearch.LocationType == VacancyLocationType.NonNational)
                                {
                                    <li>
                                        <input @{if (Model.VacancySearch.DisplayDistance) { <text> checked="checked" </text>     }} type="checkbox" id="DisplayDistance">
                                        <label for="DisplayDistance">Distance</label>
                                    </li>
    }
                                <li>
                                    <input @{if (Model.VacancySearch.DisplayClosingDate) { <text> checked="checked" </text>     }} type="checkbox" id="DisplayClosingDate">
                                    <label for="DisplayClosingDate">Closing date</label>
                                </li>
                                <li>
                                    <input @{if (Model.VacancySearch.DisplayStartDate) { <text> checked="checked" </text>     }} type="checkbox" id="DisplayStartDate">
                                    <label for="DisplayStartDate">Possible start date</label>
                                </li>
                                <li>
                                    <input @{if (Model.VacancySearch.DisplayApprenticeshipLevel) { <text> checked="checked" </text>     }} type="checkbox" id="DisplayApprenticeshipLevel">
                                    <label for="DisplayApprenticeshipLevel">Apprenticeship level</label>
                                </li>
                                <li>
                                    <input @{if (Model.VacancySearch.DisplayWage) { <text> checked="checked" </text>     }} type="checkbox" id="DisplayWage">
                                    <label for="DisplayWage">Wage</label>
                                </li>
                            </ul>
                        </div>
                    </details>
                </div>
            </div>
            <div class="column-two-thirds sfa-align-right-tablet">
                <div class="form-group">
                    <label for="sort-results" class="heading-medium sfa-medium-right-margin">Sort results</label>
                    @Html.DropDownList("sortType", Model.SortTypes, new { @id = "sort-results", @class = "form-control form-control-auto" })
                    <noscript>
                        <button style="float: right; margin-left: 5px;" class="button show-nojs" name="SearchAction" value="Sort">Sort</button>
                    </noscript>
                    <input id="SearchAction" name="SearchAction" value="Search" type="hidden" />
                </div>
            </div>
        </div>
    </fieldset>

    <ul class="search-results">
        @if (Model.Vacancies != null)
        {
            var itemPosition = 1 + (Model.PageSize * Model.PrevPage);
            foreach (var vacancy in Model.Vacancies)
            {
                var webTrendItemPositionTracker = "Webtrends.multiTrack({ element: this, argsa: ['DCS.dcsuri', '/apprenticeships/results/itemposition/" + vacancy.Id + "', 'WT.dl', '99', 'WT.ti', 'Apprenticeships Search – Item Position Clicked', 'DCSext.ipos', '" + itemPosition + "'] })";
                <li class="search-result sfa-section-bordered">
                    <h2 class="heading-medium sfa-no-margins">
                        @(vacancy.VacancyLocationType == VacancyLocationType.NonNational ?
                                Html.ActionLink(@vacancy.Title, "DetailsWithDistance", new { id = vacancy.Id, distance = vacancy.DistanceAsString }, new { @class = "vacancy-link", data_vacancy_id = vacancy.Id, onclick = webTrendItemPositionTracker, data_lat = vacancy.Location.Latitude, data_lon = vacancy.Location.Longitude, data_is_employer_anonymous = vacancy.IsEmployerAnonymous }) :
                                Html.ActionLink(@vacancy.Title, "DetailsWithDistance", new { id = vacancy.Id, distance = vacancy.DistanceAsString }, new { @class = "vacancy-link", data_vacancy_id = vacancy.Id, onclick = webTrendItemPositionTracker }))
                    </h2>
                    <ul class="list">
                        @if (Model.VacancySearch.SearchMode == ApprenticeshipSearchMode.Category)
                        {
                            <li>@FullNameFormatter.Format(vacancy.SubCategory)</li>
                        }
                        <li class="secondary-text">@vacancy.EmployerName</li>
                        <li class="font-xsmall secondary-text">
                            @if (vacancy.VacancyLocationType == VacancyLocationType.NonNational)
                            {
                                <span id="posted-date-@vacancy.Id">(Added @vacancy.PostedDate.ToFriendlyDaysAgo()</span>
                                <span id="number-of-positions-@vacancy.Id">
                                    @if (vacancy.NumberOfPositions == 1)
                                    {
                                        <text>- 1 position available)</text>
                                    }
                                    else
                                    {
                                        <text>- @vacancy.NumberOfPositions positions available)</text>
                                    }
                                </span>
                            }
                            else
                            {
                                <text>(Added @vacancy.PostedDate.ToFriendlyDaysAgo())</text>
                            }

                        </li>
                    </ul>
                    <p data-show="DisplayDescription" class="@(!Model.VacancySearch.DisplayDescription ? "toggle-content" : "")">
                        @vacancy.Description
                    </p>
                    <div class="grid-row">
                        <div class="column-two-thirds">
                            <ul class="list sfa-no-margins vacancy-details-list @(!Model.VacancySearch.DisplayDistance ? "toggle-content" : "")">
                                @if (vacancy.VacancyLocationType == VacancyLocationType.NonNational)
                                {
                                    <li data-show="DisplayDistance">
                                        <span class="bold-small">Distance:</span> <span id="distance-value">@vacancy.DistanceAsString</span> miles

                                        <a href="#" class="summary-style hide-nojs journey-trigger">Journey time</a>
                                        <div class="detail-content toggle-content hide-nojs">
                                            <select class="form-control valid select-mode" name="" aria-invalid="false">
                                                <option value="DRIVING" aria-live="polite">Driving</option>
                                                <option value="TRANSIT" aria-live="polite">Bus/Train</option>
                                                <option value="WALKING" aria-live="polite">Walking</option>
                                                <option value="BICYCLING" aria-live="polite">Cycling</option>
                                            </select>

                                            <span class="journey-time" aria-live="polite"></span>
                                        </div>
                                    </li>
                                }
                                <li data-show="DisplayClosingDate">
                                    <span class="bold-small @(!Model.VacancySearch.DisplayClosingDate ? "toggle-content" : "")">Closing date:</span> <span id="closing-date-value" data-date="@vacancy.ClosingDate.ToString("u")">@vacancy.ClosingDate.ToFriendlyClosingWeek()</span>
</li>
                                <li data-show="DisplayStartDate">
                                    <span class="bold-small @(!Model.VacancySearch.DisplayStartDate ? "toggle-content" : "")">Possible start date:</span> <span id="start-date-value">@Html.DisplayFor(m => vacancy.StartDate, "Date")</span>
                                </li>
                                <li data-show="DisplayApprenticeshipLevel" class="@(!Model.VacancySearch.DisplayApprenticeshipLevel ? "toggle-content" : "")">
                                    <span class="bold-small">Apprenticeship level:</span> @vacancy.ApprenticeshipLevel
                                </li>
                                <li data-show="DisplayWage" class="@(!Model.VacancySearch.DisplayWage ? "toggle-content" : "")">
                                    <span class="bold-small">Wage:</span> @WagePresenter.GetDisplayAmountWithFrequencyPostfix(vacancy.Wage.Type, vacancy.Wage.Amount, vacancy.Wage.AmountLowerBound, vacancy.Wage.AmountUpperBound, vacancy.Wage.Text, vacancy.Wage.Unit, vacancy.Wage.HoursPerWeek, vacancy.StartDate)
                                </li>

                                @if (vacancy.IsPositiveAboutDisability)
                                {
                                    <li>
                                        <a id="positive-about-disabled-@vacancy.Id" href="https://www.gov.uk/looking-for-work-if-disabled" target="_blank">
                                            <img src="@Url.CdnImage("logo-ticks-small-2x.png")" height="30" width="38" alt="Two ticks logo - Positive about disabled people">
                                        </a>
                                    </li>
                                }
                                @if (vacancy.VacancyLocationType == VacancyLocationType.NonNational)
                                {
                                    <li class="sfa-hide-tablet hide-nojs">
                                        <a href="#1" class="mob-map-trigger summary-style map-closed">Show/hide map</a>
                                    </li>
                                }

                                @if (vacancy.VacancyLocationType == VacancyLocationType.National)
                                {
                                    <li id="multiple-positions-nationwide">
                                        This apprenticeship has multiple positions across England.
                                    </li>
                                }
                            </ul>
                        </div>
                        @if (vacancy.VacancyLocationType == VacancyLocationType.NonNational)
                        {
                            <div class="column-one-third map-container hide-nojs sfa-small-bottom-margin toggle-content--mob">
                                <a href="https://www.google.com/maps/dir/LocationLatLon/'@vacancy.Location.Latitude,@vacancy.Location.Longitude'" target="_blank" rel="external" class="map-links fake-link font-xxsmall view-googlemaps">Open map</a>
                                <div class="map-placeholder"></div>
                                <img class="static-map" src="@vacancy.GoogleStaticMapsUrl"/>
                            </div>
                        }
                    </div>

                    @if (ViewBag.IsCandidateActivated != null && ViewBag.IsCandidateActivated)
                        {
                            var applicationStatus = vacancy.CandidateApplicationStatus.HasValue
                                ? vacancy.CandidateApplicationStatus.ToString()
                                : "Unsaved";

                        <div class="save-vacancy">
                            <a href="#" id="save-vacancy-link-@vacancy.Id" class="hidden fake-link link-unimp save-vacancy-link" data-vacancy-id="@vacancy.Id" data-application-status="@applicationStatus"><i class="fa"></i></a>
                            @Html.ActionLink("Resume", "Resume", "ApprenticeshipApplication", new { id = vacancy.Id }, new { @class = "hidden resume-link", @id = "resume-link-" + @vacancy.Id })
                            <p id="applied-label-@vacancy.Id" class="hidden applied-label">
                                <i class="fa fa-check"></i>Applied
                            </p>
                        </div>
                    }
                </li>
                itemPosition++;
            }
        }
    </ul>

    Html.RenderPartial("_pagination", Model);

    if (Model.TotalLocalHits > 5 || Model.TotalNationalHits > 5)
    {
        <div class="form-group sfa-medium-top-margin">
            <label for="results-per-page" class="heading-small inline">Display results</label>
            @Html.DropDownList("resultsPerPage", Model.ResultsPerPageSelectList, new { @id = "results-per-page", @class = "form-control form-control-auto" })
            <noscript>
                <button class="button show-nojs" name="ChangeResultsPerPageAction" value="ResultsPerPage">View</button>
            </noscript>
        </div>
        }
    }


@if (Request.IsAjaxRequest())
{
    <script>
        initSavedVacancies({
            saveUrl: '@Url.RouteUrl(CandidateRouteNames.ApprenticeshipSaveVacancy)',
            deleteUrl: '@Url.RouteUrl(CandidateRouteNames.ApprenticeshipDeleteSavedVacancy)',
            title: true
        });
    </script>
}