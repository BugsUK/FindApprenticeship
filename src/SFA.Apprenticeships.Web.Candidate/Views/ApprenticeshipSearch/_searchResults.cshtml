@using SFA.Apprenticeships.Domain.Entities.Vacancies.Apprenticeships
@model ApprenticeshipSearchResponseViewModel

@if (Model.TotalLocalHits > 0 || Model.TotalNationalHits > 0)
{
    <fieldset>
        <legend class="visuallyhidden">Search items</legend>
        <div class="float-right-wrap">
            <div class="form-group form-group-compound">
                <label for="sort-results" class="heading-medium inline">Sort results</label>
                @Html.DropDownList("sortType", Model.SortTypes, new { @id = "sort-results" })
                <noscript>
                    <button class="button show-nojs" name="SearchAction" value="Sort">Sort</button>
                </noscript>
                <input id="SearchAction" name="SearchAction" value="Search" type="hidden" />
            </div>
        </div>
    </fieldset>
}
<ul class="search-results">
    @if (Model.Vacancies != null)
    {
        var itemPosition = 1 + (Model.PageSize * Model.PrevPage);
        foreach (var vacancy in Model.Vacancies)
        {
            var webTrendItemPositionTracker = "Webtrends.multiTrack({ element: this, argsa: ['DCS.dcsuri', '/apprenticeships/results/itemposition/" + vacancy.Id + "', 'WT.dl', '99', 'WT.ti', 'Apprenticeships Search – Item Position Clicked', 'DCSext.ipos', '" + itemPosition + "'] })";
            <li class="search-results__item section-border">
                <div class="hgroup-medium top-align width-all-3-4">
                    <h2 class="heading-medium vacancy-title-link">
                        @(vacancy.VacancyLocationType == ApprenticeshipLocationType.NonNational ? 
                            Html.ActionLink(@vacancy.Title, "DetailsWithDistance", new {id = vacancy.Id, distance = vacancy.DistanceAsString}, new {@class = "vacancy-link", data_vacancy_id = vacancy.Id, onclick = webTrendItemPositionTracker, data_lat = vacancy.Location.Latitude, data_lon = vacancy.Location.Longitude}) : 
                            Html.ActionLink(@vacancy.Title, "DetailsWithDistance", new {id = vacancy.Id, distance = vacancy.DistanceAsString}, new {@class = "vacancy-link", data_vacancy_id = vacancy.Id, onclick = webTrendItemPositionTracker})
                        )
                    </h2>
                    <p class="subtitle">@vacancy.EmployerName</p>
                </div>
                @if (Request.IsAuthenticated)
                {
                    <div class="top-align ta-right width-all-1-4">
                        <a title="Add to saved" href="#" class="hidden fake-link link-unimp save-vacancy-link" data-vacancy-id="@vacancy.Id" data-vacancy-status="@vacancy.SavedVacancyStatus"><i class="fa fa-star-o"></i></a>
                        @Html.ActionLink("Resume", "Resume", "ApprenticeshipApplication", new { id = vacancy.Id }, new { @class = "hidden resume-link" })
                        <p class="hidden applied-label"><i class="fa fa-check"></i>Applied</p>
                    </div>
                }
                <p>@vacancy.Description</p>
                <div class="grid-wrapper">
                    <div class="@(vacancy.VacancyLocationType == ApprenticeshipLocationType.NonNational ? "grid grid-2-3" : "")">
                        <ul class="list-text no-btm-margin inner-block-padr">

                            @if (vacancy.VacancyLocationType == ApprenticeshipLocationType.NonNational)
                            {
                                <li>
                                    <b>Distance:</b> <span class="distance-value">@vacancy.DistanceAsString</span> miles<span class="summary-style fake-link hide-nojs">Journey time</span>
                                    <div class="detail-content toggle-content hide-nojs">
                                        <select class="select-mode" name="">
                                            <option value="DRIVING">Driving</option>
                                            <option value="TRANSIT">Bus/Train</option>
                                            <option value="WALKING">Walking</option>
                                            <option value="BICYCLING">Cycling</option>
                                        </select>

                                        <span class="journey-time"></span>
                                    </div>
                                </li>
                            }

                            <li><b>Closing date:</b> <span class="closing-date-value" data-date="@vacancy.ClosingDate.ToString("u")">@vacancy.ClosingDate.ToFriendlyClosingWeek()</span></li>

                            <li><b>Possible start date:</b> <span class="start-date-value">@Html.DisplayFor(m => vacancy.StartDate, "Date")</span></li>

                            @if (vacancy.VacancyLocationType == ApprenticeshipLocationType.National)
                            {
                                <li>This apprenticeship has multiple positions nationwide.</li>
                            }

                        </ul>
                    </div>
                    @if (vacancy.VacancyLocationType == ApprenticeshipLocationType.NonNational)
                    {
                        <div class="grid grid-1-3 map-container hide-nojs small-btm-margin">
                            <a href="https://www.google.com/maps/dir/LocationLatLon/'@vacancy.Location.Latitude,@vacancy.Location.Longitude'" target="_blank" rel="external" class="map-links fake-link font-xxsmall view-googlemaps">Open map</a>
                            <div class="map"></div>
                        </div>
                    }
                </div>
                
            </li>
            itemPosition++;
        }
    }
</ul>

@{ Html.RenderPartial("_pagination", Model); }

@if (Model.TotalLocalHits > 5 || Model.TotalNationalHits > 5)
{
<div class="form-group">
    <label for="results-per-page" class="heading-small inline">Display results</label>
    @Html.DropDownList("resultsPerPage", Model.ResultsPerPageSelectList, new { @id = "results-per-page" })
    <noscript>
        <button class="button show-nojs" name="ChangeResultsPerPageAction" value="ResultsPerPage">View</button>
    </noscript>
</div>
}
