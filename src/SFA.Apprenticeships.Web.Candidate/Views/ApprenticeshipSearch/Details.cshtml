@using SFA.Apprenticeships.Domain.Entities.Vacancies.Apprenticeships
@using TrainingType = SFA.Apprenticeships.Domain.Entities.Vacancies.TrainingType

@model ApprenticeshipVacancyDetailViewModel

@{
    ViewBag.Title = Model.Title + " - Find an apprenticeship";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section metatags
{
    <meta name="DCSext.Days2Close" content="@((DateTime.SpecifyKind(Model.ClosingDate, DateTimeKind.Utc).Date - DateTime.UtcNow.Date).Days)" />
}

<div itemscope itemtype="http://schema.org/JobPosting">
    <div class="grid-row">
        <div class="column-two-thirds">
            <div class="hgroup text">
                <h1 class="heading-xlarge" id="vacancy-title" itemprop="title">@HtmlExtensions.EscapeHtmlEncoding(Html, Model.Title)</h1>
                <p class="subtitle" id="vacancy-subtitle-employer-name" itemprop="hiringOrganization">@Model.EmployerName</p>
            </div>
        </div>
        <div class="column-one-third">
            @if (ViewBag.SearchReturnUrl != null)
            {
                <a href="@ViewBag.SearchReturnUrl" title="Return to search results" class="page-link" id="lnk-return-search-results">Return to search results</a>
            }
            else
            {
                @Html.RouteLink("Find an apprenticeship", CandidateRouteNames.ApprenticeshipSearch, null, new { @id="lnk-find-apprenticeship", @class = "page-link" })
            }

            @{
                var applicationStatus = Model.CandidateApplicationStatus.HasValue
                    ? Model.CandidateApplicationStatus.ToString()
                    : "Unsaved";
            }

            @if (ViewBag.IsCandidateActivated != null && ViewBag.IsCandidateActivated)
            {
                <a title="" href="#" id="save-vacancy-link" class="hidden fake-link page-link save-vacancy-link" data-vacancy-id="@Model.Id" data-application-status="@applicationStatus"><i class="fa"></i><span class="save-vacancy-link-text"></span></a>
            }
            <p class="page-link hide-nojs">
                <a class="print-trigger" href=""><i class="fa fa-print"></i>Print this page</a>
            </p>
        </div>
    </div>

    @if (!Model.HasError())
    {
        <section class="grid-row">
            <div class="column-two-thirds">
                <div class="inner-block-padr">
                    <div class="text" itemprop="description">
                        <p id="vacancy-description" class="@Model.Description.GetPreserveFormattingCssClass()">@Model.Description</p>
                    </div>
                </div>
            </div>
            <div class="column-one-third">
                @Html.Partial("_Apply", Model, new ViewDataDictionary {new KeyValuePair<string, object>("AnalyticsButtonPosition", "Top")})
            </div>
        </section>
        <section class="section-border grid-row" id="vacancy-info">
            <h2 class="column-full heading-large">Apprenticeship summary</h2>
            <div class="column-one-third">
                <div class="inner-block-padr">

                    @Html.Partial("_wage", Model)

                    @{
                        var className = Model.HoursPerWeek.HasValue ? "small-btm-margin" : "";
                    }

                    <h3 class="bold-small">Working week</h3>
                    <p id="vacancy-working-week" itemprop="workHours" class="@className">@HtmlExtensions.EscapeHtmlEncoding(Html, Model.WorkingWeek)</p>
                    @if (Model.HoursPerWeek.HasValue)
                    {
                        <p id="total-hours-per-week">Total hours per week: @Model.HoursPerWeek</p>
                        if (Model.HoursPerWeek > 40)
                        {
                            <p>(the hours are based on the candidate being over 18)</p>
                        }
                    }

                    <h3 class="bold-small">Apprenticeship duration</h3>
                    <p id="vacancy-expected-duration">@(string.IsNullOrWhiteSpace(@Model.ExpectedDuration) ? "Not specified" : @Model.ExpectedDuration)</p>

                    <h3 class="bold-small">Possible start date</h3>
                    <p id="vacancy-start-date">@Html.DisplayFor(m => Model.StartDate)</p>

                    <h3 class="bold-small">Date posted</h3>
                    <p id="vacancy-posted-date">@Model.PostedDate.ToFriendlyDaysAgo()</p>

                    @if (Model.VacancyLocationType != ApprenticeshipLocationType.National && Model.Distance != null)
                    {
                        <h3 class="bold-small">Distance</h3>
                        <p id="vacancy-distance">@Model.Distance miles</p>
                    }
                    <h3 class="bold-small">Apprenticeship level</h3>
                    <p id="vacancy-type" itemprop="employmentType">@Model.ApprenticeshipLevel Level Apprenticeship</p>

                    <h3 class="bold-small">Reference number</h3>
                    <p id="vacancy-reference-id">@Model.VacancyReference</p>

                    @if (Model.VacancyLocationType != ApprenticeshipLocationType.National)
                    {
                        <h3 class="bold-small">Positions</h3>
                        <p id="number-of-positions">@Model.NumberOfPositions available</p>
                    }                    
                </div>
            </div>
            <div class="column-two-thirds">
                <div class="text" itemprop="responsibilities">
                    <p id="vacancy-full-descrpition" class="@Model.FullDescription.GetPreserveFormattingCssClass()">@HtmlExtensions.EscapeHtmlEncoding(Html, Model.FullDescription)</p>
                </div>
            </div>

        </section>
        if (!string.IsNullOrWhiteSpace(Model.SkillsRequired)
            || !string.IsNullOrWhiteSpace(Model.PersonalQualities)
            || !string.IsNullOrWhiteSpace(Model.QualificationRequired)
            || !string.IsNullOrWhiteSpace(Model.FutureProspects)
            || !string.IsNullOrWhiteSpace(Model.RealityCheck))
        {
            <section class="section-border grid-row" id="course-info">
                <h2 class="heading-large">Requirements and prospects</h2>
                <div class="column-one-half">
                    <div class="inner-block-padr">
                        <div class="text">
                            @if (!string.IsNullOrWhiteSpace(Model.SkillsRequired))
                            {
                                <h3 class="heading-small">Desired skills</h3>
                                <p id="vacancy-skills-required" class="@Model.SkillsRequired.GetPreserveFormattingCssClass()" itemprop="skills">@HtmlExtensions.EscapeHtmlEncoding(Html, Model.SkillsRequired)</p>
                            }
                            @if (!string.IsNullOrWhiteSpace(Model.PersonalQualities))
                            {
                                <h3 class="heading-small">Personal qualities</h3>
                                <p id="vacancy-qualities-required" class="@Model.PersonalQualities.GetPreserveFormattingCssClass()" itemprop="qualities">@HtmlExtensions.EscapeHtmlEncoding(Html, Model.PersonalQualities)</p>
                            }
                            @if (!string.IsNullOrWhiteSpace(Model.QualificationRequired))
                            {
                                <h3 class="heading-small">Qualifications required</h3>
                                <p id="vacancy-qualifications-required" class="@Model.QualificationRequired.GetPreserveFormattingCssClass()" itemprop="qualifications">@HtmlExtensions.EscapeHtmlEncoding(Html, Model.QualificationRequired)</p>
                            }

                        </div>
                    </div>
                </div>
                <div class="column-one-half">
                    <div class="text">
                        @if (!string.IsNullOrWhiteSpace(Model.FutureProspects))
                        {
                            <h3 class="heading-small">Future prospects</h3>
                            <p id="vacancy-future-prospects" class="@Model.FutureProspects.GetPreserveFormattingCssClass()" itemprop="incentives">@HtmlExtensions.EscapeHtmlEncoding(Html, Model.FutureProspects)</p>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.RealityCheck))
                        {
                            <h3 class="heading-small">Things to consider</h3>
                            <p id="vacancy-reality-check" class="@Model.RealityCheck.GetPreserveFormattingCssClass()" itemprop="incentives">@HtmlExtensions.EscapeHtmlEncoding(Html, Model.RealityCheck)</p>
                        }
                    </div>
                </div>
            </section>
        }
        <section class="section-border" id="employer-info">
            <h2 class="heading-large">About the employer</h2>
            <div class="grid-row">
                <div class="column-two-thirds">
                    <div class="inner-block-padr">
                        <div class="text">
                            @if (Model.IsEmployerAnonymous)
                            {
                                <p id="vacancy-employer-description" class="@Model.EmployerDescription.GetPreserveFormattingCssClass()">
                                    @HtmlExtensions.EscapeHtmlEncoding(Html, Model.EmployerDescription)
                                </p>
                            }
                            else
                            {
                                <p id="vacancy-employer-description" class="@Model.EmployerDescription.GetPreserveFormattingCssClass()">
                                    @HtmlExtensions.EscapeHtmlEncoding(Html, Model.EmployerDescription)
                                </p>
                            }
                        </div>
                    </div>
                </div>
                @if (Model.IsPositiveAboutDisability)
                {
                    <div class="column-one-third">
                        <p>
                            <a class="inl-block" href="https://www.gov.uk/looking-for-work-if-disabled" target="_blank">
                                <img src="@Url.CdnImage("logo-ticks-2x.png")" height="120" width="151" alt="Two ticks logo - Positive about disabled people">
                            </a>
                        </p>
                    </div>
                }
            </div>
            <div class="grid-row">
                <div class="column-one-half">
                    <div class="inner-block-padr">
                        <div class="text">
                            <h3 class="bold-small">Employer</h3>
                            <p id="vacancy-employer-name" class="@(Model.IsWellFormedEmployerWebsiteUrl ? "sfa-no-bottom-margin" : "")">@Model.EmployerName</p>
                            @if (Model.IsEmployerAnonymous)
                            {
                                if (Model.VacancyLocationType != ApprenticeshipLocationType.National)
                                {
                                    <div id="vacancy-address" itemscope itemtype="http://schema.org/PostalAddress">
                                        <h3 class="bold-small">Address</h3>
                                        <div itemprop="address">
                                            <p class="small-btm-margin" itemprop="addressLocality" id="anonymous-town">@Model.VacancyAddress.Town</p>
                                        </div>
                                    </div>
                                }
                            }
                            else
                            {
                                if (Model.IsWellFormedEmployerWebsiteUrl)
                                {
                                    <p>
                                        <a itemprop="url" href="@Model.EmployerWebsite"
                                           id="vacancy-employer-website"
                                           target="_blank"
                                           title="@Model.EmployerName Website" rel="external">@Model.EmployerWebsite</a>
                                    </p>
                                }
                                else
                                {
                                    <p>@Model.EmployerWebsite</p>
                                }
                                if (Model.VacancyLocationType != ApprenticeshipLocationType.National)
                                {
                                    <div id="vacancy-address" itemscope itemtype="http://schema.org/PostalAddress">
                                        <h3 class="bold-small">Address</h3>
                                        <div itemprop="address">
                                            <p class="small-btm-margin" itemprop="streetAddress">@Model.VacancyAddress.AddressLine1</p>
                                            <p class="small-btm-margin" itemprop="streetAddress">@Model.VacancyAddress.AddressLine2</p>
                                            <p class="small-btm-margin" itemprop="streetAddress">@Model.VacancyAddress.AddressLine3</p>
                                            <p class="small-btm-margin" itemprop="addressLocality">@Model.VacancyAddress.Town</p>
                                            <p class="small-btm-margin" itemprop="addressRegion">@Model.VacancyAddress.County</p>
                                            <p class="small-btm-margin" itemprop="postalCode">@Model.VacancyAddress.Postcode</p>
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                </div>
                <div class="column-one-half hide-print">
                    @if (Model.VacancyLocationType != ApprenticeshipLocationType.National)
                    {
                        <div id="vacancy-map" class="ad-details__map">
                            <div class="map-overlay" onclick=" style.pointerEvents = 'none' "></div>
                            @if (Model.IsEmployerAnonymous)
                            {
                                <div id="anonymous-map">
                                    <iframe width="700" height="250" title="Map of location" style="border: 0" src="https://www.google.com/maps/embed/v1/view?center=@Model.VacancyAddress.GeoPoint.Latitude,@Model.VacancyAddress.GeoPoint.Longitude&amp;zoom=9&amp;key=AIzaSyCusA_0x4bJEjU-_gLOFiXMSBXKZYtvHz8"></iframe>
                                </div>
                            }
                            else
                            {
                                <iframe width="700" height="250" title="Map of location" style="border: 0" src="https://www.google.com/maps/embed/v1/place?q=@Html.Raw(Model.VacancyAddress.Postcode),+United+Kingdom&amp;key=AIzaSyCusA_0x4bJEjU-_gLOFiXMSBXKZYtvHz8"></iframe>
                            }                            
                            <p class="nojs-notice">You must have JavaScript enabled to view a map of the location</p>
                        </div>
                    }
                </div>

                @if (!string.IsNullOrWhiteSpace(Model.AdditionalLocationInformation))
                {
                    <div class="grid-rowtext">
                        <p></p>
                        <h3 class="bold-small">
                            Additional location information
                        </h3>
                        <p>@HtmlExtensions.EscapeHtmlEncoding(Html, Model.AdditionalLocationInformation)</p>
                    </div>
                }
            </div>
        </section>
        <section class="section-border grid-row" id="provider-info">
            <div class="column-full">
        <h2 class="heading-large">Training provider</h2>
            </div>
            @if (Model.IsNasProvider)
            {
                <p id="vacancy-nas-provider">Training provider selection is currently in progress</p>
            }
            else
            {
                <div class="column-two-thirds">
                    <div class="inner-block-padr">
                        <div class="text">
                            @if (!string.IsNullOrWhiteSpace(Model.TrainingToBeProvided))
                            {
                                <p id="vacancy-training-to-be-provided" class="@Model.TrainingToBeProvided.GetPreserveFormattingCssClass()">@HtmlExtensions.EscapeHtmlEncoding(Html, Model.TrainingToBeProvided)</p>
                            }
                            @if (Model.TrainingType == TrainingType.Standards)
                            {
                                <h3 class="heading-small">Apprenticeship standard</h3>
                            }
                            else
                            {
                                <h3 class="heading-small">Apprenticeship framework</h3>
                            }
                            <p id="vacancy-framework">@Html.Raw(Model.SubCategory)</p>
                        </div>
                    </div>
                </div>
                <div class="column-one-third">
                    <div class="text">
                        <h3 class="bold-small">Training provider</h3>
                        <p id="vacancy-provider-name">@Model.ProviderName</p>

                        @if (!Model.IsRecruitmentAgencyAnonymous && !string.IsNullOrWhiteSpace(Model.RecruitmentAgency))
                        {
                            <p id="recruitment-agency-name">Applications for this apprenticeship are being processed by @Model.RecruitmentAgency</p>
                        }
                    </div>

                    @if (!string.IsNullOrWhiteSpace(Model.Contact))
                    {
                        <div class="text">
                            <h3 class="bold-small">Contact</h3>
                            <p id="vacancy-provider-contact" class="@Model.Contact.GetPreserveFormattingCssClass()">@Model.Contact</p>
                        </div>
                    }
                </div>
            }
        </section>
        if (!string.IsNullOrWhiteSpace(Model.OtherInformation))
        {
            <section id="other-information" class="section-border">
                <div class="text">
                    <h2 class="heading-large collpanel-trigger">Other information</h2>
                    <div class="collpanel toggle-content">
                        <p class="@Model.OtherInformation.GetPreserveFormattingCssClass()">@HtmlExtensions.EscapeHtmlEncoding(Html, Model.OtherInformation)</p>
                    </div>
                </div>
            </section>
        }
        if (Model.ApplyViaEmployerWebsite && !string.IsNullOrWhiteSpace(Model.ApplicationInstructions))
        {
            <section id="application-instructions-container" class="section-border">
                <h2 class="heading-large">Employer's Application Instructions</h2>
                <div class="text">
                    <p id="application-instructions" class="@Model.ApplicationInstructions.GetPreserveFormattingCssClass()">@Model.ApplicationInstructions</p>
                </div>
            </section>
        }
        if (!Model.ApplyViaEmployerWebsite && !Request.IsAuthenticated)
        {
            <section id="before-apply">
                <h2 class="heading-large">Before you apply</h2>
                <div class="text">
                    <p>Before you apply for an apprenticeship you must first create an account. If you already have an account you'll need to sign in.</p>
                </div>
            </section>
        }
        <section>
            <div class="form-group">
                @Html.Partial("_Apply", Model, new ViewDataDictionary() {new KeyValuePair<string, object>("AnalyticsButtonPosition", "Bottom")})
            </div>
        </section>
    }
</div>

@section scripts
{    
    @Scripts.Render("~/bundles/nas/details")

    <script>
        $(function() {
            initSavedVacancies({
                saveUrl: '@Url.RouteUrl(CandidateRouteNames.ApprenticeshipSaveVacancy)',
                deleteUrl: '@Url.RouteUrl(CandidateRouteNames.ApprenticeshipDeleteSavedVacancy)'
            });
        });

    </script>

}