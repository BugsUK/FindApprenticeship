@using SFA.Apprenticeships.Application.Interfaces.Vacancies
@using SFA.Apprenticeships.Domain.Entities.Vacancies
@using SFA.Apprenticeships.Web.Candidate.Extensions

@model ApprenticeshipSearchResponseViewModel

@{
    ViewBag.Title = "Results - Find an apprenticeship";
    Layout = "~/Views/Shared/_Layout.cshtml";

    //Any copy changes here also need reflected in the resultsSearch.js file.
    var locationTypeLink = Model.VacancySearch.LocationType == VacancyLocationType.National 
            ? Url.ApprenticeshipSearchViewModelRouteUrl(CandidateRouteNames.ApprenticeshipResults, new ApprenticeshipSearchViewModel(Model.VacancySearch) {LocationType = VacancyLocationType.NonNational, SearchAction = SearchAction.LocationTypeChanged, PageNumber = 1}) 
            : Url.ApprenticeshipSearchViewModelRouteUrl(CandidateRouteNames.ApprenticeshipResults, new ApprenticeshipSearchViewModel(Model.VacancySearch) {LocationType = VacancyLocationType.National, SearchAction = SearchAction.LocationTypeChanged, SortType = VacancySearchSortType.Distance, PageNumber = 1});

    string resultMessage;
    string nationalResultsMessage = "";

    if (Model.TotalLocalHits == 0)
    {
        resultMessage = "";
    }
    else if (Model.TotalLocalHits == 1)
    {
        if (Model.VacancySearch.LocationType == VacancyLocationType.National)
        {
            resultMessage = "We've found <b class=\"bold-medium\">1</b> <a id='localLocationTypeLink' class='update-results' href=" + locationTypeLink + ">apprenticeship in your selected area</a>.";
        }
        else
        {
            resultMessage = "We've found <b class=\"bold-medium\">1</b> apprenticeship in your selected area.";
        }
    }
    else
    {
        if (Model.VacancySearch.LocationType == VacancyLocationType.National)
        {
            var message = "We've found <b class=\"bold-medium\">{0}</b> <a id='localLocationTypeLink' class='update-results' href=" + locationTypeLink + ">apprenticeships in your selected area</a>.";
            resultMessage = string.Format(message, Model.TotalLocalHits);
        }
        else
        {
            resultMessage = string.Format("We've found <b class=\"bold-medium\">{0}</b> apprenticeships in your selected area.", Model.TotalLocalHits);
        }
    }

    if (Model.TotalNationalHits != 0)
    {
        if (Model.TotalLocalHits == 0)
        {
            resultMessage = "There are currently no matching apprenticeships in your selected area.";
            nationalResultsMessage = string.Format("We've found {0} apprenticeships with positions elsewhere in England.", Model.TotalNationalHits);
        }
        else if (Model.TotalNationalHits == 1)
        {
            if (Model.VacancySearch.LocationType == VacancyLocationType.NonNational)
            {
                nationalResultsMessage = string.Format("We've also found <a id='nationwideLocationTypeLink' class='update-results' href={0}>1 apprenticeship with positions elsewhere in England</a>.", locationTypeLink);
            }
            else
            {
                nationalResultsMessage = "We've also found 1 apprenticeship with positions elsewhere in England.";
            }
        }
        else
        {
            if (Model.VacancySearch.LocationType == VacancyLocationType.NonNational)
            {
                nationalResultsMessage = string.Format("We've also found <a id='nationwideLocationTypeLink' class='update-results' href={1}>{0} apprenticeships with positions elsewhere in England</a>.", Model.TotalNationalHits, locationTypeLink);
            }
            else
            {
                nationalResultsMessage = string.Format("We've also found {0} apprenticeships with positions elsewhere in England.", Model.TotalNationalHits);
            }
        }
    }
}

@section metatags
{
    @*Used by analytics to track succesful/unsuccessful searches*@
    <meta name="WT.oss_r" content="@Model.TotalLocalHits" />
}

<div class="search-results-wrapper grid-row">
    <div class="hgroup column-full">
        <h1 class="heading-xlarge sfa-no-bottom-margin">Search results</h1>
        <div id="vacancy-result-summary">
            <p id="result-message" class="small-btm-margin">@Html.Raw(resultMessage)</p>
            <p id="national-results-message" class="">@Html.Raw(nationalResultsMessage)</p>
            @if (!string.IsNullOrEmpty(Model.VacancySearch.Location))
            {
                <p class="small-btm-margin">
                    <a id="receiveSaveSearchAlert" 
                       href="@Url.ApprenticeshipSearchViewModelRouteUrl(CandidateRouteNames.ApprenticeshipSearchSaveSearch, new ApprenticeshipSearchViewModel(Model.VacancySearch))"
                       onclick="Webtrends.multiTrack({ element: this, argsa: ['DCS.dcsuri', '/apprenticeships/receivealerts', 'WT.dl', '99', 'WT.ti', 'Search Results Receive Alerts'] })"><i class="fa fa-bell-o"></i>Receive alerts for this search</a>
                </p>
            }
        </div>
    </div>

    @using (Html.BeginRouteForm(CandidateRouteNames.ApprenticeshipResults, FormMethod.Get))
    {
        Html.Partial("ValidationSummary", ViewData.ModelState);
        Html.RenderPartial("_searchUpdate", Model.VacancySearch);

        <section class="column-two-thirds">
            <div id="pagedList">
                @{ Html.RenderPartial("_searchResults", Model); }
            </div>
        </section>
    }
</div>

<div class="saving-prompt toggle-content hide-nojs" id="ajaxLoading">
    Loading
</div>

@section scripts
{
    @Scripts.Render("~/bundles/nas/locationsearch")
    @Scripts.Render("~/bundles/nas/geoLocater")
    @Scripts.Render("~/bundles/cookie") 
    <script>
        var searchUrl = '@Url.RouteUrl(CandidateRouteNames.ApprenticeshipResults)';
        var locationUrl = '@Url.RouteUrl(CandidateRouteNames.LocationSearch)';
    </script>
    @Scripts.Render("~/bundles/nas/results")
    <script>
        initSavedVacancies({
            saveUrl:  '@Url.RouteUrl(CandidateRouteNames.ApprenticeshipSaveVacancy)',
            deleteUrl: '@Url.RouteUrl(CandidateRouteNames.ApprenticeshipDeleteSavedVacancy)',
            title: true});
    </script>
}