@using SFA.Apprenticeships.Domain.Entities.Vacancies.Apprenticeships
@model ApprenticeshipSearchViewModel
@{
    ViewBag.Title = "Find an apprenticeship";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="hgroup">
    <h1 class="heading-xlarge">Find an apprenticeship</h1>
    <p class="subtitle">Search and apply for an apprenticeship in England</p>
</div>
<div class="grid-wrapper">
    <div class="grid-wrapper controls-3-4">
        <section class="grid grid-2-3">
            @using (Html.BeginRouteForm(CandidateRouteNames.ApprenticeshipSearchValidation, FormMethod.Get, new { @id = "#searchForm" }))
            {
                @Html.Partial("ValidationSummary", ViewData.ModelState)

                <nav class="tabbed-nav">
                    @{
                        var keywordTabControlClass = Model.SearchMode == ApprenticeshipSearchMode.Keyword ? " active" : "";
                        var categoriesTabControlClass = Model.SearchMode == ApprenticeshipSearchMode.Category ? " active" : "";
                        var savedSearchesTabControlClass = Model.SearchMode == ApprenticeshipSearchMode.SavedSearches ? " active" : "";

                        var anyCategories = Model.Categories != null && Model.Categories.Any();
                        var categoriesElementControlClass = Model.SearchMode == ApprenticeshipSearchMode.Category && anyCategories ? " active" : "";
                        var categoriesTabClass = anyCategories ? " tab2" : "";
                        
                        var anySavedSearches = Model.SavedSearches != null && Model.SavedSearches.Any();
                        var savedSearchesElementControlClass = Model.SearchMode == ApprenticeshipSearchMode.SavedSearches && anySavedSearches ? " active" : "";
                        var savedSearchesTabClass = anySavedSearches ? " tab3" : "";

                        string elementControlClass = string.Empty;

                        switch (Model.SearchMode)
                        {
                            case ApprenticeshipSearchMode.Keyword:
                                elementControlClass = keywordTabControlClass;
                                break;
                            case ApprenticeshipSearchMode.Category:
                                elementControlClass = categoriesElementControlClass;
                                break;
                            case ApprenticeshipSearchMode.SavedSearches:
                                break;
                        }
                    }

                    @Html.RouteLink("Keywords", CandidateRouteNames.ApprenticeshipSearch, new { searchMode = ApprenticeshipSearchMode.Keyword }, new { @id = "keywords-tab-control", @class = "tabbed-tab" + keywordTabControlClass, tab = "#tab1" })
                    @Html.RouteLink("Categories", CandidateRouteNames.ApprenticeshipSearch, new { searchMode = ApprenticeshipSearchMode.Category }, new { @id = "categories-tab-control", @class = "tabbed-tab" + categoriesTabControlClass, tab = "#tab2" })
                    
                    @if (anySavedSearches)
                    {
                        @Html.RouteLink("Saved searches", CandidateRouteNames.ApprenticeshipSearch, new { searchMode = ApprenticeshipSearchMode.SavedSearches }, new { @id = "saved-searches-tab-control", @class = "tabbed-tab" + savedSearchesTabControlClass, tab = "#tab3" })
                    }
                </nav>

                <div class="tabbed-content active">
                    @Html.Partial("_categories", Model)
                    
                    @Html.Partial("_savedSearches", Model)
                    
                    @Html.DropDownListFor(m => m.SearchField, Model.SearchFields, new { @class = "refineSearchOption" })
                    @Html.FormTextFor(m => m.Keywords, controlHtmlAttributes: new { autofocus = "autofocus", aria_describedby = "keywordsHint" }, containerHtmlAttributes: new { @class = "tabbed-element tab1" + keywordTabControlClass }, labelHtmlAttributes: new { id = "keyword-label" }, hintHtmlAttributes: new { id = "keyword-hint" })

                    <p class="visuallyhidden" id="keywordsHint">Try words that describe the type of apprenticeship you want, for example “carpentry” or “mechanics”.</p>
                    
                    @Html.FormTextFor(m => m.Location, containerHtmlAttributes: new { @class = "tabbed-element tab1 " + keywordTabControlClass + categoriesTabClass + elementControlClass }, hintHtmlAttributes: new { id = "geoLocateContainer" })

                    <div class="inline tabbed-element tab1 @keywordTabControlClass @categoriesTabClass @elementControlClass">
                        <div class="form-group">
                            <label for="loc-within" class="form-label">Within</label>
                            @Html.DropDownListFor(m => m.WithinDistance, Model.Distances, new { @id = "loc-within", @name = "WithinDistance" })
                        </div>
                        <div class="form-group">
                            <label for="apprenticeship-level" class="form-label">Apprenticeship level</label>
                            @Html.DropDownListFor(m => m.ApprenticeshipLevel, Model.ApprenticeshipLevels, new { @id = "apprenticeship-level", @name = "ApprenticeshipLevel" })
                        </div>
                    </div>

                    <div class="form-group form-group-compound">
                        <button class="button tabbed-element tab1 @keywordTabControlClass" id="search-button">Search</button>
                        <button class="button tabbed-element @categoriesTabClass @categoriesElementControlClass" id="browse-button">Browse</button>
                        <button class="button tabbed-element @savedSearchesTabClass @savedSearchesElementControlClass" id="run-saved-search-button">Run search</button>
                    </div>

                    <div class="tabbed-element disp-block form-group tab1 @keywordTabControlClass @categoriesTabClass @categoriesTabControlClass">
                        @Html.RouteLink("Reset search options", CandidateRouteNames.ApprenticeshipSearch, null, new { @id = "reset-search-options-link" })
                    </div>

                    @Html.HiddenFor(m => m.Latitude)
                    @Html.HiddenFor(m => m.Longitude)
                    @Html.Hidden("Hash", Model.LatLonLocHash())
                    @Html.HiddenFor(m => m.LocationType)
                    @Html.HiddenFor(m => m.ResultsPerPage)
                    @Html.HiddenFor(m => m.SearchMode)
                </div>
            }
        </section>
        <aside class="grid grid-1-3">
            <div class="inner-block">
                <div class="gov-border">
                    <h2 class="heading-medium">Contact us</h2>
                    <ul class="list-text">
                        <li>0800 015 0400</li>
                        <li><a href='@Url.RouteUrl(CandidateRouteNames.Helpdesk)'>Send us an email</a></li>
                    </ul>
                    <ul class="list-text">
                        <li>
                            <a href="https://www.gov.uk/apprenticeships-guide" target="_blank">About apprenticeships</a>
                        </li>
                    </ul>
                </div>
            </div>
        </aside>
    </div>
</div>

@section scripts
{   
    @Scripts.Render("~/bundles/nas/locationsearch")

    <script>
        $("#Location").locationMatch({
            url: '@Url.Action("location", "Location")',
            longitude: '#@(Html.IdFor(m => m.Longitude))',
            latitude: '#@(Html.IdFor(m => m.Latitude))',
            latlonhash: '#@(Html.IdFor(m => m.Hash))'
        });

        $("#keywords-tab-control").click(function () {
            $("#SearchMode").val("Keyword");
        });

        $("#categories-tab-control").click(function () {
            $("#SearchMode").val("Category");
        });

        $("#saved-searches-tab-control").click(function () {
            $("#SearchMode").val("SavedSearches");
        });
    </script>

    @Scripts.Render("~/bundles/nas/geoLocater")
}
