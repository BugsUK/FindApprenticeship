@using SFA.Apprenticeships.Domain.Entities.Vacancies.Apprenticeships
@model ApprenticeshipSearchViewModel
@{
    ViewBag.Title = "Find an apprenticeship";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="hgroup">
    <h1 class="heading-xlarge">Find an apprenticeship</h1>
    <p class="subtitle">Search and apply for an apprenticeship in England</p>
</div>
<div class="grid-wrapper" id="searchHome">
    <div class="grid-wrapper controls-3-4">
        <section class="grid grid-2-3">
            @using (Html.BeginRouteForm(CandidateRouteNames.ApprenticeshipSearchValidation, FormMethod.Get, new { @id = "#searchForm" }))
            {
                @Html.Partial("ValidationSummary", ViewData.ModelState)

                <nav class="tabbed-nav">
                    @{
                        var keywordTabControlClass = Model.SearchMode == ApprenticeshipSearchMode.Keyword ? " active" : "";
                        var categoriesTabControlClass = Model.SearchMode == ApprenticeshipSearchMode.Category ? " active" : "";
                        var savedSearchesTabControlClass = Model.SearchMode == ApprenticeshipSearchMode.SavedSearches ? " active" : "";

                        var anyCategories = Model.Categories != null && Model.Categories.Any();
                        var categoriesElementControlClass = Model.SearchMode == ApprenticeshipSearchMode.Category && anyCategories ? " active" : "";
                        var categoriesTabClass = anyCategories ? " tab2" : "";

                        var showSavedSearches = Request.IsAuthenticated;
                        var anySavedSearches = Model.SavedSearches != null && Model.SavedSearches.Any();
                        var savedSearchesElementControlClass = Model.SearchMode == ApprenticeshipSearchMode.SavedSearches && showSavedSearches ? " active" : "";
                        var savedSearchesTabClass = showSavedSearches ? " tab3" : "";

                        string elementControlClass = string.Empty;

                        switch (Model.SearchMode)
                        {
                            case ApprenticeshipSearchMode.Keyword:
                                elementControlClass = keywordTabControlClass;
                                break;
                            case ApprenticeshipSearchMode.Category:
                                elementControlClass = categoriesElementControlClass;
                                break;
                            case ApprenticeshipSearchMode.SavedSearches:
                                break;
                        }
                    }

                    @Html.RouteLink("Search", CandidateRouteNames.ApprenticeshipSearch, new { searchMode = ApprenticeshipSearchMode.Keyword }, new { @id = "keywords-tab-control", @class = "tabbed-tab" + keywordTabControlClass, tab = "#tab1" })
                    @Html.RouteLink("Browse", CandidateRouteNames.ApprenticeshipSearch, new { searchMode = ApprenticeshipSearchMode.Category }, new { @id = "categories-tab-control", @class = "tabbed-tab" + categoriesTabControlClass, tab = "#tab2" })
                    
                    @if (showSavedSearches)
                    {
                        @Html.RouteLink("Saved searches", CandidateRouteNames.ApprenticeshipSearch, new { searchMode = ApprenticeshipSearchMode.SavedSearches }, new { @id = "saved-searches-tab-control", @class = "tabbed-tab" + savedSearchesTabControlClass, tab = "#tab3" })
                    }
                </nav>

                <div class="tabbed-content active">
                    @Html.Partial("_categories", Model)
                    
                    @Html.Partial("_savedSearches", Model)
                    
                    @Html.DropDownListFor(m => m.SearchField, Model.SearchFields, new { @class = "refineSearchOption hidden input-withlink__select all-select" })
                    @Html.FormTextFor(m => m.Keywords, controlHtmlAttributes: new { aria_describedby = "keywordsHint" }, containerHtmlAttributes: new { @class = "tabbed-element tab1" + keywordTabControlClass }, labelHtmlAttributes: new { id = "keyword-label" }, hintHtmlAttributes: new { id = "keyword-hint" })

                    <p class="visuallyhidden" id="keywordsHint">Try words that describe the type of apprenticeship you want, for example “carpentry” or “mechanics”.</p>
                    
                    @Html.FormTextFor(m => m.Location, containerHtmlAttributes: new { @class = "tabbed-element tab1 " + keywordTabControlClass + categoriesTabClass + elementControlClass }, hintHtmlAttributes: new { id = "geoLocateContainer" })

                    <div class="inline tabbed-element tab1 @keywordTabControlClass @categoriesTabClass @elementControlClass">
                        <div class="form-group">
                            <label for="loc-within" class="form-label">Within</label>
                            @Html.DropDownListFor(m => m.WithinDistance, Model.Distances, new { @id = "loc-within", @name = "WithinDistance" })
                        </div>
                        <div class="form-group">
                            <label for="apprenticeship-level" class="form-label">Apprenticeship level</label>
                            @Html.DropDownListFor(m => m.ApprenticeshipLevel, Model.ApprenticeshipLevels, new { @id = "apprenticeship-level", @name = "ApprenticeshipLevel" })
                        </div>
                    </div>

                    <div class="form-group form-group-compound">
                        <button class="button tabbed-element tab1 @keywordTabControlClass" id="search-button">Search</button>
                        <button class="button tabbed-element @categoriesTabClass @categoriesElementControlClass" id="browse-button">Browse</button>
                        
                        @if (anySavedSearches)
                        {
                            <button class="button tabbed-element @savedSearchesTabClass @savedSearchesElementControlClass" id="run-saved-search-button">Run search</button>
                        }
                    </div>

                    @if (anySavedSearches)
                    {
                        <p class="tabbed-element @savedSearchesTabClass @savedSearchesElementControlClass">
                            You can edit your saved searches in the
                            @Html.RouteLink("alert settings", CandidateRouteNames.SavedSearchesSettings, null, new {id = "saved-searches-settings-link"})
                            section.
                        </p>
                    }

                    <div class="tabbed-element disp-block form-group tab1 @keywordTabControlClass @categoriesTabClass @categoriesTabControlClass">
                        @Html.RouteLink("Reset search options", CandidateRouteNames.ApprenticeshipSearch, new { reset = true }, new { @id = "reset-search-options-link" })
                    </div>

                    @Html.HiddenFor(m => m.Latitude)
                    @Html.HiddenFor(m => m.Longitude)
                    @* This is declared explicitly because we want the value from the model NOT from the URL and the view engine will favour the (potentially incorrect) one from the URL *@
                    <input id="Hash" name="Hash" type="hidden" value="@Model.LatLonLocHash()" />
                    @Html.HiddenFor(m => m.LocationType)
                    @Html.HiddenFor(m => m.ResultsPerPage)
                    @Html.HiddenFor(m => m.SearchMode)
                </div>
            }
        </section>
        <aside class="grid grid-1-3">
            <div class="inner-block">
                <div class="gov-border">
                    <h2 class="heading-medium">Help</h2>
                    <ul class="list-text">
                        <li class="hide-nojs"><a href="#" id="runSearchHelp"><i class="fa fa-question-circle"></i>How to search for an apprenticeship</a> <span class="inl-block">(interactive walkthrough)</span></li>
                        <li>
                            <a href="https://www.gov.uk/apprenticeships-guide" target="_blank">About apprenticeships</a>
                        </li>
                    </ul>
                    <ul class="list-text">
                        <li>0800 015 0400</li>
                        <li><a href='@Url.RouteUrl(CandidateRouteNames.Helpdesk)'>Contact us</a></li>
                    </ul>
                    
                </div>
            </div>
        </aside>
    </div>
</div>

<ol id="firstSearchTour" class="alwayshidden">
    <li class="startTourGuide" data-id="runSearchHelp" data-button="Start tour">
        <h3 class="heading-small med-btm-margin">Start tour</h3>
        <p aria-live="polite">If you'd like some help on how to use the search to find apprenticeships that are suitable for you, start the tour here.</p>
    </li>
    <li class="startNextTourGuide" data-id="keywords-tab-control">
        <p aria-live="polite">If you know the type of apprenticeship you’re looking for use the keyword search.</p>
    </li>
</ol>

<ol id="searchTour" class="alwayshidden">
    <li data-id="keywords-tab-control">
        <p aria-live="polite">If you know the type of apprenticeship you’re looking for use the keyword search.</p>
    </li>
    <li class="browseHelp" data-id="categories-tab-control">
        <p aria-live="polite">If you want to see what apprenticeships are available in different industries you can search by category (eg construction or retail).</p>
    </li>
    <li class="savedHelp" data-id="saved-searches-tab-control">
        <p aria-live="polite">If you have saved searches you can run them from here. You can save as many different searches as you like.</p>
    </li>
    <li data-id="SearchField">
        <p aria-live="polite">Select this option if you'd like to refine your search by job title, employer or reference number.</p>
    </li>
    <li class="browseHelp" data-id="Keywords">
        <p aria-live="polite">Type your keyword here, alternatively you can leave it blank to look for any apprenticeship in your selected area.</p>
    </li>
    <li data-id="getLocation">
        <p aria-live="polite">If you'd like to use your device's position to get your current post code, click here and then click "Allow" when prompted.</p>
    </li>
    <li data-id="Location">
        <p aria-live="polite">You can search for apprenticeships in any location in England. This can be near your home or where you’d like to work.</p>
    </li>
    <li data-id="loc-within">
        <p aria-live="polite">Choose how far from your location you want to search.</p>
    </li>
    <li data-id="apprenticeship-level">
        <p aria-live="polite">You can also search by level. Intermediate is equivalent to 5 GCSE passes, Advanced is 2 A-level passes and a Higher can lead to a foundation degree.</p>
    </li>
    <li data-id="reset-search-options-link" data-button="Finish">
        <p aria-live="polite">If you want to start with blank fields, you can clear the form with the button.</p>
    </li>

</ol>

<ol id="browseTour" class="alwayshidden">
    <li class="browseHelp" data-id="categories-tab-control">
        <p aria-live="polite">If you want to see what apprenticeships are available in different industries you can search by category (eg construction or retail).</p>
    </li>
    <li data-id="categoryLabelTour">
        <p aria-live="polite">Select a category from this list, once you browse you'll then see a list of sub-categories you can select on the results page.</p>
    </li>
    <li data-id="getLocation">
        <p aria-live="polite">If you'd like to use your device's position to get your current post code, click here and then click "Allow" when prompted.</p>
    </li>
    <li data-id="Location">
        <p aria-live="polite">You can search for apprenticeships in any location in England. This can be near your home or where you’d like to work.</p>
    </li>
    <li data-id="loc-within">
        <p aria-live="polite">Choose how far from your location you want to search.</p>
    </li>
    <li data-id="apprenticeship-level">
        <p aria-live="polite">You can also search by level. Intermediate is equivalent to 5 GCSE passes, Advanced is 2 A-level passes and a Higher can lead to a foundation degree.</p>
    </li>
    <li data-id="reset-search-options-link" data-button="Finish">
        <p aria-live="polite">If you want to start with blank fields, you can clear the form with the button.</p>
    </li>
</ol>

<ol id="savedSearchTour" class="alwayshidden">
    <li class="savedHelp" data-id="saved-searches-tab-control">
        <p aria-live="polite">If you have saved searches you can run them from here. You can save as many different searches as you like.</p>
    </li>
    <li data-id="saved-searches-list" data-button="Finish">
        <p aria-live="polite">Select one of your saved searches and then run your saved search.</p>
    </li>
</ol>

@section scripts
{   
    @Scripts.Render("~/bundles/nas/locationsearch")

    <script>
        $("#Location").locationMatch({
            url: '@Url.Action("location", "Location")',
            longitude: '#@(Html.IdFor(m => m.Longitude))',
            latitude: '#@(Html.IdFor(m => m.Latitude))',
            latlonhash: '#@(Html.IdFor(m => m.Hash))'
        });

        $("#keywords-tab-control").click(function () {
            $("#SearchMode").val("Keyword");
        });

        $("#categories-tab-control").click(function () {
            $("#SearchMode").val("Category");
        });

        $("#saved-searches-tab-control").click(function () {
            $("#SearchMode").val("SavedSearches");
        });
    </script>

    @Scripts.Render("~/bundles/nas/geoLocater")
                                                
    @Scripts.Render("~/bundles/joyride")
    @Scripts.Render("~/bundles/nas/searchTour")

    @if (ViewBag.ShowSearchTour != null && ViewBag.ShowSearchTour)
    {
        <script>
            setTimeout(function () {
                $("#firstSearchTour").joyride({
                    'autoStart': true,
                    'nextButton': true,
                    'tipAnimation': 'pop'
                });
            }, 1000);

            $('html').on('click', '.startNextTourGuide .joyride-next-tip', function () {
                $("#firstSearchTour").joyride('destroy');

                $('#runSearchHelp').click();
            });
        </script>
        
    }
    
}
