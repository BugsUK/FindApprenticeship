@using SFA.Apprenticeships.Domain.Entities.Vacancies
@model ApprenticeshipSearchViewModel
@{
    ViewBag.Title = "Find an apprenticeship";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="hgroup">
    <h1 class="heading-xlarge">
        Find an apprenticeship
        <span class="heading-secondary">Search and apply for an apprenticeship in England</span>
    </h1>
</div>  
<div class="grid-row" id="searchHome">
    <section class="column-two-thirds">
        @using (Html.BeginRouteForm(CandidateRouteNames.ApprenticeshipSearch, FormMethod.Post, new { @id = "#searchForm" }))
            {
            @Html.Partial("ValidationSummary", ViewData.ModelState)

            <nav class="tabbed-nav">
                @{
                    var keywordTabControlClass = Model.SearchMode == ApprenticeshipSearchMode.Keyword ? " active" : "";
                    var categoriesTabControlClass = Model.SearchMode == ApprenticeshipSearchMode.Category ? " active" : "";
                    var savedSearchesTabControlClass = Model.SearchMode == ApprenticeshipSearchMode.SavedSearches ? " active" : "";

                    var anyCategories = Model.Categories != null && Model.Categories.Any();
                    var categoriesElementControlClass = Model.SearchMode == ApprenticeshipSearchMode.Category && anyCategories ? " active" : "";
                    var categoriesTabClass = anyCategories ? " browsetab" : "";

                    var showSavedSearches = Request.IsAuthenticated;
                    var anySavedSearches = Model.SavedSearches != null && Model.SavedSearches.Any();
                    var savedSearchesElementControlClass = Model.SearchMode == ApprenticeshipSearchMode.SavedSearches && showSavedSearches ? " active" : "";
                    var savedSearchesTabClass = showSavedSearches ? " savedsearchtab" : "";

                    string elementControlClass = string.Empty;

                    switch (Model.SearchMode)
                    {
                        case ApprenticeshipSearchMode.Keyword:
                            elementControlClass = keywordTabControlClass;
                            break;
                        case ApprenticeshipSearchMode.Category:
                            elementControlClass = categoriesElementControlClass;
                            break;
                        case ApprenticeshipSearchMode.SavedSearches:
                            break;
                    }
                }

                @Html.RouteLink("Search", CandidateRouteNames.ApprenticeshipSearch, new { searchMode = ApprenticeshipSearchMode.Keyword }, new { @id = "keywords-tab-control", @class = "tabbed-tab" + keywordTabControlClass, tab = "#searchtab" })
                @Html.RouteLink("Browse", CandidateRouteNames.ApprenticeshipSearch, new { searchMode = ApprenticeshipSearchMode.Category }, new { @id = "categories-tab-control", @class = "tabbed-tab" + categoriesTabControlClass, tab = "#browsetab" })

                @if (showSavedSearches)
                {
                    @Html.RouteLink("Saved searches", CandidateRouteNames.ApprenticeshipSearch, new { searchMode = ApprenticeshipSearchMode.SavedSearches }, new { @id = "saved-searches-tab-control", @class = "tabbed-tab" + savedSearchesTabControlClass, tab = "#savedsearchtab" })
                }
            </nav>

            <div class="tabbed-content active">
                @Html.Partial("_categories", Model)

                @Html.Partial("_savedSearches", Model)

                @Html.DropDownListFor(m => m.SearchField, Model.SearchFields, new { @class = "form-control sfa-input-auto-width refineSearchOption" })
                @Html.FormTextFor(m => m.Keywords, controlHtmlAttributes: new { aria_describedby = "keywordsHint" }, containerHtmlAttributes: new { @class = "tabbed-element searchtab" + keywordTabControlClass }, labelHtmlAttributes: new { id = "keyword-label" }, hintHtmlAttributes: new { id = "keyword-hint" })

                <p class="visuallyhidden" id="keywordsHint">Try words that describe the type of apprenticeship you want, for example “carpentry” or “mechanics”.</p>

                @Html.FormTextFor(m => m.Location, containerHtmlAttributes: new { @class = "tabbed-element searchtab " + keywordTabControlClass + categoriesTabClass + elementControlClass }, hintHtmlAttributes: new { id = "geoLocateContainer" })
               
                <div class="form-group tabbed-element searchtab @keywordTabControlClass @categoriesTabClass @elementControlClass">
                    <label for="loc-within" class="form-label-bold">Within</label>
                    @Html.DropDownListFor(m => m.WithinDistance, Model.Distances, new { @id = "loc-within", @name = "WithinDistance", @class = "form-control form-control-auto" })
                </div>

                <div class="form-group tabbed-element searchtab @keywordTabControlClass @categoriesTabClass @elementControlClass">
                    <label for="apprenticeship-level" class="form-label-bold">Apprenticeship level</label>
                    @Html.DropDownListFor(m => m.ApprenticeshipLevel, Model.ApprenticeshipLevels, new { @id = "apprenticeship-level", @name = "ApprenticeshipLevel", @class = "form-control form-control-auto" })
                </div>

                <div class="form-group">
                    <button class="button tabbed-element searchtab @keywordTabControlClass" id="search-button">Search</button>
                    <button class="button tabbed-element @categoriesTabClass @categoriesElementControlClass" id="browse-button">Browse</button>

                    @if (anySavedSearches)
                    {
                        <button class="button tabbed-element @savedSearchesTabClass @savedSearchesElementControlClass" id="run--button">Run search</button>
                    }
                </div>

                @if (anySavedSearches)
                {
                    <p class="tabbed-element @savedSearchesTabClass @savedSearchesElementControlClass">
                        You can edit your saved searches in the
                        @Html.RouteLink("alert settings", CandidateRouteNames.SavedSearchesSettings, null, new { id = "saved-searches-settings-link" })
                        section.
                    </p>
                }

                <div class="tabbed-element disp-block form-group searchtab @keywordTabControlClass @categoriesTabClass @categoriesTabControlClass">
                    @Html.RouteLink("Reset search options", CandidateRouteNames.ApprenticeshipSearch, new { reset = true, Model.SearchMode }, new { @id = "reset-search-options-link" })
                </div>

                @Html.HiddenFor(m => m.Latitude)
                @Html.HiddenFor(m => m.Longitude)
                @* This is declared explicitly because we want the value from the model NOT from the URL and the view engine will favour the (potentially incorrect) one from the URL *@
                <input id="Hash" name="Hash" type="hidden" value="@Model.LatLonLocHash()" />
                @Html.HiddenFor(m => m.LocationType)
                @Html.HiddenFor(m => m.ResultsPerPage)
                @Html.HiddenFor(m => m.SearchMode)
            </div>
                    }
    </section>
    <aside class="column-one-third">
        <div class="govuk-related-items">
            <h2 class="heading-medium">Help</h2>
            <ul class="list">
                <li class="hide-nojs"><a href="#" id="runSearchHelp"><i class="fa fa-question-circle"></i>How to search for an apprenticeship</a> <span class="inl-block">(interactive walkthrough)</span></li>

            </ul>
            <ul class="list">
                <li>0800 015 0400</li>
                <li><a href='@Url.RouteUrl(CandidateRouteNames.Helpdesk)'>Contact us</a></li>
            </ul>
            <ul class="list">
                <li>
                    <a href="https://www.gov.uk/apprenticeships-guide" target="_blank">About apprenticeships</a>
                </li>
                <li>
                    @Html.RouteLink("Find a traineeship", CandidateRouteNames.TraineeshipSearch, null, new { id = "find-traineeship-link" })
                </li>
            </ul>
        </div>
    </aside>
</div>


<ol id="firstSearchTour" class="sfa-hide">
    <li class="startTourGuide" data-id="runSearchHelp" data-button="Start tour">
        <h3 class="heading-small sfa-medium-bottom-margin">Start tour</h3>
        <p aria-live="polite">If you'd like some help on how to use the search to find apprenticeships that are suitable for you, start the tour here.</p>
    </li>
    <li class="startNextTourGuide" data-id="keywords-tab-control">
        <p aria-live="polite">If you know the type of apprenticeship you’re looking for use the keyword search.</p>
    </li>
</ol>

<ol id="searchTour" class="sfa-hide">
    <li data-id="keywords-tab-control">
        <p aria-live="polite">If you know the type of apprenticeship you’re looking for use the keyword search.</p>
    </li>
    <li class="browseHelp" data-id="categories-tab-control">
        <p aria-live="polite">If you want to see what apprenticeships are available in different industries you can search by category (eg construction or retail).</p>
    </li>
    <li class="savedHelp" data-id="saved-searches-tab-control">
        <p aria-live="polite">If you have saved searches you can run them from here. You can save as many different searches as you like.</p>
    </li>
    <li data-id="SearchField">
        <p aria-live="polite">Select this option if you'd like to refine your search by job title, employer or reference number.</p>
    </li>
    <li class="browseHelp" data-id="Keywords">
        <p aria-live="polite">Type your keyword here, alternatively you can leave it blank to look for any apprenticeship in your selected area.</p>
    </li>
    <li data-id="getLocation">
        <p aria-live="polite">If you'd like to use your device's position to get your current post code, click here and then click "Allow" when prompted.</p>
    </li>
    <li data-id="Location">
        <p aria-live="polite">You can search for apprenticeships in any location in England. This can be near your home or where you’d like to work.</p>
    </li>
    <li data-id="loc-within">
        <p aria-live="polite">Choose how far from your location you want to search.</p>
    </li>
    <li data-id="apprenticeship-level">
        <p aria-live="polite">You can also search by level. Intermediate is equivalent to 5 GCSE passes, Advanced is 2 A-level passes, a Higher can lead to a foundation degree and Degree is equivalent to bachelor's or master's degree.</p>
    </li>
    <li data-id="reset-search-options-link">
        <p aria-live="polite">If you want to start with blank fields, you can clear the form with the button.</p>
    </li>
    <li class="joyride-withborder" data-id="headerLinkFAA" data-button="Finish">
        <p aria-live="polite">At any time, quickly return to the search by clicking this link in the header.</p>
    </li>

</ol>

<ol id="browseTour" class="sfa-hide">
    <li class="browseHelp" data-id="categories-tab-control">
        <p aria-live="polite">If you want to see what apprenticeships are available in different industries you can search by category (eg construction or retail).</p>
    </li>
    <li data-id="categoryLabelTour">
        <p aria-live="polite">Select a category from this list, once you browse you'll then see a list of sub-categories you can select on the results page.</p>
    </li>
    <li data-id="getLocation">
        <p aria-live="polite">If you'd like to use your device's position to get your current post code, click here and then click "Allow" when prompted.</p>
    </li>
    <li data-id="Location">
        <p aria-live="polite">You can search for apprenticeships in any location in England. This can be near your home or where you’d like to work.</p>
    </li>
    <li data-id="loc-within">
        <p aria-live="polite">Choose how far from your location you want to search.</p>
    </li>
    <li data-id="apprenticeship-level">
        <p aria-live="polite">You can also search by level. Intermediate is equivalent to 5 GCSE passes, Advanced is 2 A-level passes, a Higher can lead to a foundation degree and Degree is equivalent to bachelor's or master's degree.</p>
    </li>
    <li data-id="reset-search-options-link" data-button="Finish">
        <p aria-live="polite">If you want to start with blank fields, you can clear the form with the button.</p>
    </li>
</ol>

<ol id="savedSearchTour" class="sfa-hide">
    <li class="savedHelp" data-id="saved-searches-tab-control">
        <p aria-live="polite">If you have saved searches you can run them from here. You can save as many different searches as you like.</p>
    </li>
    <li data-id="saved-searches-list" data-button="Finish">
        <p aria-live="polite">Select one of your saved searches and then run your saved search.</p>
    </li>
</ol>

@section scripts
{
    @Scripts.Render("~/bundles/nas/locationsearch")

    <script>
        $("#Location").locationMatch({
            url: '@Url.RouteUrl(CandidateRouteNames.LocationSearch)',
            longitude: '#@(Html.IdFor(m => m.Longitude))',
            latitude: '#@(Html.IdFor(m => m.Latitude))',
            latlonhash: '#@(Html.IdFor(m => m.Hash))'
        });

        $(window).on("tabchanged", function (event, data) {
            switch (data.tab) {
                case "#searchtab":
                    $("#SearchMode").val("Keyword");
                    break;
                case "#browsetab":
                    $("#SearchMode").val("Category");
                    break;
                case "#savedsearchtab":
                    $("#SearchMode").val("SavedSearches");
                    break;
            }
        });
    </script>

    @Scripts.Render("~/bundles/nas/geoLocater")
    @Scripts.Render("~/bundles/joyride")
    @Scripts.Render("~/bundles/nas/search")

    @if (ViewBag.ShowSearchTour != null && ViewBag.ShowSearchTour)
    {
        <script>
            setTimeout(function () {
                $("#firstSearchTour").joyride({
                    'autoStart': true,
                    'nextButton': true,
                    'tipAnimation': 'pop'
                });
            }, 1000);

            $('html').on('click', '.startNextTourGuide .joyride-next-tip', function () {
                $("#firstSearchTour").joyride('destroy');

                $('#runSearchHelp').click();
            });
        </script>
    }
}