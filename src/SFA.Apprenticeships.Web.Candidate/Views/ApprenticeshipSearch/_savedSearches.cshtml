@using SFA.Apprenticeships.Domain.Entities.Vacancies.Apprenticeships

@model ApprenticeshipSearchViewModel

@{
    var divClass = Model.SearchMode == ApprenticeshipSearchMode.SavedSearches ? "active" : "";
}

<div id="saved-searches" class="tabbed-element tab3 @divClass">
    @if (Model.SavedSearches != null && Model.SavedSearches.Any())
    {

        <ul id="saved-searches-list" class="list-text list-checkradio">
            @foreach (var savedSearch in Model.SavedSearches)
            {
                <li>
                    <input type="radio" name="SavedSearchId" id="saved-search-@savedSearch.Id" value="@savedSearch.Id">
                    <div>
                        <label id="saved-search-label-@savedSearch.Id" for="saved-search-@savedSearch.Id">@savedSearch.Name</label>
                        @if (savedSearch.DateProcessed.HasValue)
                        {
                            <span class="inl-block font-xsmall">(New matches: @savedSearch.DateProcessed.Value.ToFriendlyDaysAgo())</span>
                        }
                    </div>
                    
                    @if (savedSearch.ApprenticeshipLevel != "All")
                    {
                        <p class="font-xsmall no-btm-margin">
                            <b>Apprenticeship level:</b> <span id="saved-search-apprenticeship-level-@savedSearch.Id">@savedSearch.ApprenticeshipLevel</span>
                        </p>
                    }
                    
                    @if (!string.IsNullOrWhiteSpace(savedSearch.SubCategoriesFullNames))
                    {
                        <p class="font-xsmall no-btm-margin">
                            <b>Sub-categories:</b> <span id="saved-search-subcategories-@savedSearch.Id">@savedSearch.SubCategoriesFullNames</span>
                        </p>
                    }
                </li>
            }
        </ul>
    }
</div>