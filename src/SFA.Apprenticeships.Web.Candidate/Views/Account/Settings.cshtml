@using SFA.Apprenticeships.Web.Candidate.ViewModels.Account

@model SettingsViewModel

@{
    ViewBag.Title = "Settings - Find an apprenticeship";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="grid-row">
    <div class="column-two-thirds">
        <h1 class="heading-xlarge">Settings</h1>
    </div>
    <div class="column-one-third">
        <ul class="list sfa-align-right-tablet sfa-xlarge-top-margin">
            <li>
                @Html.RouteLink("Find an apprenticeship", CandidateRouteNames.ApprenticeshipSearch, null, new { id = "find-apprenticeship-link" })
            </li>
            @if (Model != null && Model.TraineeshipFeature != null && Model.TraineeshipFeature.ShowTraineeshipsLink)
            {
                <li>
                    @Html.RouteLink("Find a traineeship", CandidateRouteNames.TraineeshipSearch, null, new { id = "find-traineeship-link" })
                </li>
            }
        </ul>
    </div>
</div>

@using (Html.BeginRouteForm(CandidateRouteNames.Settings, FormMethod.Post, new { id = "settings-form" }))
{
    @Html.AntiForgeryToken()
    @Html.Partial("ValidationSummary", ViewData.ModelState)

    <fieldset>

    @{
        var yourAccountTabClass = Model.Mode == SettingsViewModel.SettingsMode.YourAccount ? " active" : "";
        var savedSearchesTabClass = Model.Mode == SettingsViewModel.SettingsMode.SavedSearches ? " active" : "";
        var deleteAccountTabClass = Model.Mode == SettingsViewModel.SettingsMode.DeleteAccount ? " active" : "";
    }

    <nav class="tabbed-nav">
        @Html.RouteLink("Your account", CandidateRouteNames.Settings, null, new { @id = "your-account-tab-control", @class = "tabbed-tab" + yourAccountTabClass, tab = "#tab1" })
        @Html.RouteLink("Saved searches", CandidateRouteNames.SavedSearchesSettings, null, new { @id = "saved-searches-tab-control", @class = "tabbed-tab" + savedSearchesTabClass, tab = "#tab2" })
        @Html.RouteLink("Delete your account", CandidateRouteNames.DeleteAccountSettings, null, new { @id = "delete-account-tab-control", @class = "tabbed-tab" + deleteAccountTabClass, tab = "#tab3" })
    </nav>

    @Html.HiddenFor(m => m.Mode)

    <div class="tabbed-content @yourAccountTabClass">
        <div class="grid-row">
            <div class="column-full">
                <h2 class="heading-large sfa-no-top-margin">Personal details</h2>

                <div class="panel panel-border-wide">
                    <p>Any changes you make will be seen on draft or new applications. Submitted applications will continue to show your old details.</p>
                </div>

                @Html.HiddenFor(m => m.IsJavascript, new {@id = "hidden-flag-javascript"})
                @Html.FormTextFor(m => m.Firstname, containerHtmlAttributes: new {@class = "form-group-compound"}, controlHtmlAttributes: new {type = "text", autocorrect = "off"})
                @Html.FormTextFor(m => m.Lastname, controlHtmlAttributes: new {type = "text", autocorrect = "off"})
                @Html.EditorFor(r => r.DateOfBirth)
                @Html.EditorFor(a => a.Address, new {AnalyticsDSCUri = "/settings/findaddress"})
                @Html.FormTextFor(m => m.PhoneNumber, controlHtmlAttributes: new {@class = "form-control", type = "tel"}, verified: Model.VerifiedMobile)

                <div class="form-group">
                    <dl>
                        <dt class="form-label-bold">Email</dt>
                        <dd class="secondary-text" id="settings-username">@Model.Username <a id="settings-change-username" href="@Url.RouteUrl(RouteNames.UpdateEmail)">Change email address</a></dd>
                    </dl>
                </div>

                @if (!string.IsNullOrWhiteSpace(Model.PendingUsername))
                {
                    <div class="form-group">
                        <p class="form-label-bold">Pending email address</p>
                        <span class="form-prepopped" id="settings-pending-username">@Model.PendingUsername</span>
                        <a id="settings-confirm-username" class="inl-block" href="@Url.RouteUrl(RouteNames.VerifyUpdatedEmail)">Verify email address</a>
                    </div>
                }

                <details>
                    <summary id="equality-diversity-summary-link"><span class="summary">Your equality and diversity information</span></summary>
                    <div class="panel panel-border-narrow">
                        @Html.EditorFor(m => Model.MonitoringInformation, "MonitoringInformation/_gender")
                        @Html.EditorFor(m => Model.MonitoringInformation, "MonitoringInformation/_disability")
                        @Html.EditorFor(m => Model.MonitoringInformation, "MonitoringInformation/_ethnicity")
                        @Html.EditorFor(m => Model.MonitoringInformation, "MonitoringInformation/_why")
                    </div>
                </details>

                <div id="accountSettings2">
                    <h3 class="heading-large">How we contact you</h3>
                    <p>
                        Choose to be notified by <span class="bold-small">email</span> or <span class="bold-small">text</span> when:
                    </p>
                    <div class="form-group">
                        <table class="sfa-table-basic">
                            <thead>
                            <tr>
                                <th scope="col" class="sfa-align-center">
                                    <a href="#" id="emailToggle" title="Email notifications">
                                        <span class="notification-pulltop">Email</span>
                                    </a>
                                </th>
                                <th scope="col" class="sfa-align-center">
                                    <a href="#" id="textToggle" title="Text notifications">
                                        Text
                                    </a>
                                </th>
                                <th scope="col"></th>
                            </tr>
                            </thead>
                            <tbody>
                            <tr>
                                <td class="sfa-align-center">
                                    @Html.FormUnvalidatedCheckBoxFor(m => m.EnableApplicationStatusChangeAlertsViaEmail,
                                        controlHtmlAttributes: new {@class = "sfa-no-margins email-input", aria_labelledby = "appStatusLabel", title = "Email notifications when the status of one of your applications changes"})
                                </td>
                                <td class="sfa-align-center">
                                    @Html.FormUnvalidatedCheckBoxFor(m => m.EnableApplicationStatusChangeAlertsViaText,
                                        controlHtmlAttributes: new {@class = "sfa-no-margins text-input", aria_labelledby = "appStatusLabel", title = "Text notifications when the status of one of your applications changes"})
                                </td>
                                <td id="appStatusLabel">
                                    the status of one of your applications changes
                                </td>
                            </tr>
                            <tr>
                                <td class="sfa-align-center">
                                    @Html.FormUnvalidatedCheckBoxFor(m => m.EnableExpiringApplicationAlertsViaEmail,
                                        controlHtmlAttributes: new {@class = "sfa-no-margins email-input", aria_labelledby = "closingDateStatusLabel", title = "Email notifications when an apprenticeship is approaching its closing date"})
                                </td>
                                <td class="sfa-align-center">
                                    @Html.FormUnvalidatedCheckBoxFor(m => m.EnableExpiringApplicationAlertsViaText,
                                        controlHtmlAttributes: new {@class = "sfa-no-margins text-input", aria_labelledby = "closingDateStatusLabel", title = "Text notifications when an apprenticeship is approaching its closing date"})
                                </td>
                                <td id="closingDateStatusLabel">
                                    an apprenticeship is approaching its closing date
                                </td>
                            </tr>
                            <tr>
                                <td class="sfa-align-center">
                                    @Html.FormUnvalidatedCheckBoxFor(m => m.EnableMarketingViaEmail,
                                        controlHtmlAttributes: new {@class = "sfa-no-margins email-input", aria_labelledby = "marketingUpdatesStatusLabel", title = "Email notifications when we send you updates on news and information"})
                                </td>
                                <td class="sfa-align-center">
                                    @Html.FormUnvalidatedCheckBoxFor(m => m.EnableMarketingViaText,
                                        controlHtmlAttributes: new {@class = "sfa-no-margins text-input", aria_labelledby = "marketingUpdatesStatusLabel", title = "Text notifications when we send you updates on news and information"})
                                </td>
                                <td id="marketingUpdatesStatusLabel">
                                    we send you updates on news and information
                                </td>
                            </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="form-group">
                    <button id="update-details-button" class="button">Save settings</button>
                </div>
            </div>
        </div>
    </div>

    <div class="tabbed-content @savedSearchesTabClass">
        <div class="grid-row">
            <div class="column-full">
                <h2 class="heading-large sfa-no-top-margin" id="savedSearchHeading">Saved searches</h2>
                <div class="form-group">
                    <legned class="form-label-bold sfa-medium-bottom-margin">
                        Receive notifications?
                        <span class="form-hint">If you don't select an option you won't receive notifications</span>
                    </legned>

                    @Html.FormUnvalidatedCheckBoxFor(m => m.EnableSavedSearchAlertsViaEmail, labelHtmlAttributes: new {@class = "block-label selection-button-checkbox allowSavedComms"})
                    @if (Model.SmsEnabled)
                    {
                        @Html.FormUnvalidatedCheckBoxFor(m => m.EnableSavedSearchAlertsViaText, labelHtmlAttributes: new {@class = "block-label selection-button-checkbox allowSavedComms"})
                    }
                </div>

                <div class="form-group" id="savedSearch">
                    @{
                        var noSavedSearchesTextStyle = (Model.SavedSearches != null && Model.SavedSearches.Count > 0) ? "style=\"display: none\"" : "";
                    }

                    <p class="savedInitalText" id="noSavedSearchesText" @Html.Raw(noSavedSearchesTextStyle)>
                        You currently don't have any active saved searches. If you <a href="@Url.RouteUrl(CandidateRouteNames.ApprenticeshipSearch)">set up a saved search</a> we can alert you when we find a suitable apprenticeship.
                    </p>

                    @if (Model.SavedSearches != null)
                    {
                        <div id="savedSearches" class="toggle-content" style="display: block;">
                            @for (var i = 0; i < Model.SavedSearches.Count; i++)
                            {
                                var index = i;
                                var savedSearch = Model.SavedSearches[i];
                                var checkedListItemClass = savedSearch.AlertsEnabled ? "class=\"selected\"" : "";

                                <div class="sfa-saved-search sfa-xlarge-bottom-margin" id="@savedSearch.Id">
                                    <a href="@Html.Raw(savedSearch.SearchUrl.Value)" title="Run search">@savedSearch.Name</a>
                                    @if (savedSearch.DateProcessed.HasValue)
                                    {
                                        <span class="font-xsmall">(Last alert: @savedSearch.DateProcessed.Value.ToFriendlyDaysAgo())</span>
                                    }
                                    <ul class="list-text">
                                        @if (!string.IsNullOrEmpty(savedSearch.SubCategoriesFullNames))
                                        {
                                            <li><b>Sub-categories:</b> @savedSearch.SubCategoriesFullNames</li>
                                        }
                                        @if (savedSearch.ApprenticeshipLevel != "All")
                                        {
                                            <li><b>Apprenticeship level:</b> @savedSearch.ApprenticeshipLevel</li>
                                        }
                                        <li @Html.Raw(checkedListItemClass)>
                                            @Html.HiddenFor(m => m.SavedSearches[index].Id)
                                            @Html.FormUnvalidatedCheckBoxFor(m => m.SavedSearches[index].AlertsEnabled, controlHtmlAttributes: new {@class = "sfa-no-left-margin"})
                                        </li>
                                        <li>
                                            <a href="@Url.RouteUrl(CandidateRouteNames.DeleteSavedSearch, new {id = savedSearch.Id, isJavascript = false})" id="@savedSearch.Id" class="link-unimp icon-black delete--link">
                                                <i class="fa fa-times-circle"></i>Delete saved search
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                            }
                        </div>
                    }
                </div>
                <div class="form-group">
                    <button id="update-details-button" class="button">Save settings</button>
                </div>
            </div>
        </div>
    </div>

    <div class="tabbed-content @deleteAccountTabClass">
        <div class="grid-row">
            <div class="column-full">
                <h2 class="heading-large sfa-no-top-margin" id="deleteAccountHeading">Delete your account</h2>
                <div class="panel panel-border-wide">
                    <p>If you are no longer interested in applying for apprenticeships or traineeship, you can delete your account here.</p>
                </div>
                @Html.FormTextFor(
                    m => m.EmailAddress,
                    containerHtmlAttributes: new {@class = "form-group-compound"},
                    controlHtmlAttributes: new {@class = "form-control", type = "email", autofocus = "autofocus", spellcheck = "false"})

                <div class="form-group">
                    <a id="password"></a>
                    @Html.LabelFor(m => m.Password, new {@class = "form-label-bold"})
                    @Html.PasswordFor(m => m.Password, new {@class = "form-control"})
                    @Html.ValidationMessageFor(m => m.Password, null)
                </div>

                <div class="form-group">
                    <button class="button" id="delete-account-button">Delete account</button>
                </div>
            </div>
        </div>
    </div>
    </fieldset>
}

@section scripts
{
    @Scripts.Render("~/bundles/nas/account")

    <script>
        $(function () {

            $(".delete--link").on('click', function () {
                var $this = $(this),
                    $href = $this.attr('href').replace("isJavascript=False", "isJavascript=true").replace("isJavascript=false", "isJavascript=true"),
                    $id = $this.attr('id');

                $.ajax({
                    url: $href,
                    complete: function (result) {

                        if (result.status == 200) {
                            $("#" + $id).hide();

                            if ($(".:visible").length == 0) {
                                $("#noSavedSearchesText").show();
                            }
                        }
                    }
                });

                return false;
            });

            $('#emailToggle').on('click', function () {
                var theTable = $(this).closest('table');

                if (theTable.find('.email-input:checked').length == 3) {
                    theTable.find('.email-input:checked').click();
                } else {
                    theTable.find('.email-input:not(:checked)').click();
                }

                $(this).blur();

                return false;

            });

            $('#textToggle').on('click', function () {
                var theTable = $(this).closest('table');

                if (theTable.find('.text-input:checked').length == 3) {
                    theTable.find('.text-input:checked').click();
                } else {
                    theTable.find('.text-input:not(:checked)').click();
                }

                $(this).blur();

                return false;

            });

            if ($('#disability-support-yes').is(':checked')) {
                $('#equality-diversity-summary-link').click();
            }

            document.getElementById("hidden-flag-javascript").value = "True";
        });
    </script>
}