@using SFA.Apprenticeships.Application.Interfaces.Vacancies
@using SFA.Apprenticeships.Domain.Entities.Vacancies
@model VacancySearchResponseViewModel

@{
    ViewBag.Title = "Apprenticeships - Results";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var locationTypeLink = Model.VacancySearch.LocationType == VacancyLocationType.National ? Url.Action("results", new VacancySearchViewModel(Model.VacancySearch) { LocationType = VacancyLocationType.NonNational, SearchAction = SearchAction.Sort, PageNumber = 1 }) : Url.Action("results", new VacancySearchViewModel(Model.VacancySearch) { LocationType = VacancyLocationType.National, SearchAction = SearchAction.Sort, SortType = VacancySortType.Distance, PageNumber = 1 });

    string resultMessage;
    string nationalResultsMessage;

    if (Model.TotalLocalHits == 0)
    {
        resultMessage = "";
    }
    else if (Model.TotalLocalHits == 1)
    {

        if (Model.VacancySearch.LocationType == VacancyLocationType.National)
        {
            resultMessage = "We've found <b class=\"bold-medium\">1</b> <a id='localLocationTypeLink' href=" + locationTypeLink + ">apprenticeship in your selected area</a>.";
        }
        else
        {
            resultMessage = "We've found <b class=\"bold-medium\">1</b> apprenticeship in your selected area.";
        }
    }
    else
    {
        if (Model.VacancySearch.LocationType == VacancyLocationType.National)
        {
            var message = "We've found <b class=\"bold-medium\">{0}</b> <a id='localLocationTypeLink' href=" + locationTypeLink + ">apprenticeships in your selected area.</a>";
            resultMessage = string.Format(message, Model.TotalLocalHits);
        }
        else
        {
            resultMessage = string.Format("We've found <b class=\"bold-medium\">{0}</b> apprenticeships in your selected area.", Model.TotalLocalHits);
        }
    }

    if (Model.TotalNationalHits == 0)
    {
        nationalResultsMessage = "";
    }
    else if (Model.TotalNationalHits == 1)
    {

        if (Model.VacancySearch.LocationType == VacancyLocationType.NonNational)
        {
            nationalResultsMessage = "We've also found <a id='nationwideLocationTypeLink' href=" + locationTypeLink + ">1 apprenticeship nationwide.</a>";
        }
        else
        {
            nationalResultsMessage = "We've also found 1 apprenticeship nationwide.";
        }
    }
    else
    {
        if (Model.VacancySearch.LocationType == VacancyLocationType.NonNational)
        {
            var nationalMessage = "We've also found <a id='nationwideLocationTypeLink' href=" + locationTypeLink + ">{0} apprenticeships nationwide.</a>";
            nationalResultsMessage = string.Format(nationalMessage, Model.TotalNationalHits);
        }
        else
        {
            nationalResultsMessage = string.Format("We've also found {0} apprenticeships nationwide.", Model.TotalNationalHits);
        }
    }
}

@section metatags
{
    @*Used by analytics to track succesful/unsuccessful searches*@
    <meta name="WT.oss_r" content="@Model.TotalLocalHits" />
}

<div class="search-results-wrapper grid-wrapper">
    <div class="hgroup">
        <h1 class="heading-xlarge">Search results</h1>
        <div id="vacancy-result-summary">
            <p class="small-btm-margin">@Html.Raw(resultMessage)</p>
            <p>@Html.Raw(nationalResultsMessage)</p>
        </div>
    </div>

    @using (Html.BeginForm("results", "vacancysearch", FormMethod.Get))
    {
        Html.Partial("ValidationSummary", ViewData.ModelState);
        Html.RenderPartial("_searchUpdate", Model.VacancySearch);
        @(Model.VacancySearch.SearchAction == SearchAction.Search ? Html.Hidden("LocationType", "Local") : Html.Hidden("LocationType", Model.VacancySearch.LocationType))
        <section class="grid grid-2-3">
            @{
                if (Model.TotalLocalHits == 0 && Model.TotalNationalHits == 0)
                {
                    <p id="search-no-results-title">There are currently no apprenticeships that match your search.</p>
                    <p>Try editing your search:</p>
                    <ul>
                        <li>using different keywords</li>
                        <li>expanding your search location</li>
                        <li>making sure all words are spelt correctly</li>
                    </ul>
                }
                else
                {
                    <div id="pagedList">
                        @{ Html.RenderPartial("_searchResults", Model); }
                    </div>
                }
            }
        </section>
    }
</div>

@section scripts
{
    @Scripts.Render("~/bundles/nas/locationsearch")
    <script type="text/javascript">

        $(function () {

            $("#Location").locationMatch({
                url: '@Url.Action("location", "Location")',
                longitude: '#Longitude',
                latitude: '#Latitude',
                latlonhash: '#Hash'
            });

            $('#sort-results').change(function () {

                $('#SearchAction').val("Sort");
                $("form").submit();
            });

            $('#results-per-page').change(function () {
                $('#SearchAction').val("Sort");
                $("form").submit();
            });

            $('#search-button').click(function() {
                $('#LocationType').val("NonNational");
            });

        });

    </script>
}