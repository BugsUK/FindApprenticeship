
@using SFA.Apprenticeships.Web.Common.Framework
@model SFA.Apprenticeships.Web.Candidate.ViewModels.VacancySearch.VacancySearchResponseViewModel

@{
    ViewBag.Title = "SFA Apprenticeships";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string resultMessage;

    if (Model.TotalHits == 0)
    {
        resultMessage = "There are <b class=\"bold-medium\">no</b> Apprenticeships that match your search";
    }
    else if (Model.TotalHits == 1)
    {
        resultMessage = "There is <b class=\"bold-medium\">1</b> Apprenticeship that closely matches your search";
    }
    else
    {
        resultMessage = string.Format("There are <b class=\"bold-medium\">{0}</b> Apprenticeships that closely match your search", Model.TotalHits);
    }
}

<div class="search-results-wrapper grid-wrapper">
    <div class="hgroup">
        <h1 class="heading-xlarge">Search results</h1>
        <p>@Html.Raw(resultMessage)</p>
    </div>

    @using (Html.BeginForm("search", "vacancysearch", FormMethod.Get))
    {                      
        <section class="grid grid-1-3">
            <fieldset class="search-filter">
                @Html.ValidationSummary(false)
                <legend class="heading-medium mob-collpanel-trigger">Filter results</legend>
                <div class="mob-collpanel toggle-content--mob">

                    @Html.FormTextFor(m => m.VacancySearch.Keywords, hintText: "")
                    @Html.FormTextFor(m => m.VacancySearch.Location, hintText: "")
                    
                    @* TODO::Create a form control for this. *@
                    <div class="form-group">
                        <label for="loc-within" class="form-label">Within</label>
                        @Html.DropDownListFor(m => m.VacancySearch.WithinDistance, (SelectList) ViewBag.Distances, new {@id = "loc-within", @name = "WithinDistance"})
                    </div>
                    
                    @Html.HiddenFor(m => m.VacancySearch.Latitude, new { @id = "Latitude" })
                    @Html.HiddenFor(m => m.VacancySearch.Longitude, new { @id = "Longitude" })

                    <div class="form-group">
                        <button class="button">Update results</button>
                    </div>
                </div>
            </fieldset>
        
        </section>
        <section class="grid grid-2-3">
            <fieldset>
                <legend class="visuallyhidden">Search items</legend>
                <div class="float-right-wrap">
                    <div class="form-group form-group-compound">
                        <label for="sort-results" class="heading-medium inline">Sort results</label>
                        @Html.DropDownListFor(m => m.VacancySearch.SortType, (SelectList)ViewBag.SortTypes, new { @id = "sort-results", @name = "sortType", @onchange = "this.form.submit();" })
                    </div>
                </div>
            </fieldset>
            <div id="pagedList">
                @{ Html.RenderPartial("_searchResults", Model); }
            </div>
        </section>
    }
</div>


@section scripts
{
    <script src="~/Content/_assets/js/vendor/jquery-ui-1.10.4.custom.min.js"></script>
    <script src="~/Content/_assets/js/nas/locationAutocomplete.js" type="text/javascript"></script>
    <script>
        $("#VacancySearch_Location").locationMatch({
            url: '@Url.Action("location", "vacancysearch")',
            longitude: '#Longitude',
            latitude: '#Latitude',
        });

        $(document).ready(function () {
            $("form").submit(function () {
                if ($("#VacancySearch_Location").hasClass("input-validation-error")) {
                    $("#VacancySearch_Location").parent().addClass("input-validation-error");
                }
            });
        });
    </script>
}
