
@using SFA.Apprenticeships.Web.Common.Framework
@model VacancySearchResponseViewModel

@{
    ViewBag.Title = "Apprenticeships - Results";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string resultMessage;

    if (Model.TotalHits == 0)
    {
        resultMessage = "";
    }
    else if (Model.TotalHits == 1)
    {
        resultMessage = "There is <b class=\"bold-medium\">1</b> apprenticeship that closely matches your search";
    }
    else
    {
        resultMessage = string.Format("There are <b class=\"bold-medium\">{0}</b> apprenticeships that closely match your search", Model.TotalHits);
    }
}

<div class="search-results-wrapper grid-wrapper">
    <div class="hgroup">
        <h1 class="heading-xlarge">Search results</h1>
        <p id="vacancy-result-summary">@Html.Raw(resultMessage)</p>
    </div>

    @using (Html.BeginForm("search", "vacancysearch", FormMethod.Get))
    {                      
        @Html.Partial("ValidationSummary", ViewData.ModelState)

        <section class="grid grid-1-3">
            <fieldset class="search-filter">
                <legend class="heading-medium mob-collpanel-trigger">Edit search</legend>
                <div class="mob-collpanel toggle-content--mob">

                    @Html.FormTextFor(m => m.VacancySearch.Keywords, hintText: "")
                    @Html.FormTextFor(m => m.VacancySearch.Location, hintText: "")
                    
                    @if (ViewBag.LocationSearches != null && ViewBag.LocationSearches.Length > 0)
                    {
                        <div class="form-group form-group-compound">
                            <ul class="list-text list-max-11">
                                <li>Did you mean: </li>
                                @foreach (var locationSearch in ViewBag.LocationSearches)
                                {
                                    <li><a href="@Url.Action("results", locationSearch)">@locationSearch.Location</a></li>
                                }
                            </ul>
                        </div>
                    }

                    @* TODO::Create a form control for this. *@
                    <div class="form-group">
                        <label for="loc-within" class="form-label">Within</label>
                        @Html.DropDownListFor(m => m.VacancySearch.WithinDistance, (SelectList) ViewBag.Distances, new {@id = "loc-within", @name = "WithinDistance"})
                    </div>
                    
                    @Html.HiddenFor(m => m.VacancySearch.Latitude)
                    @Html.HiddenFor(m => m.VacancySearch.Longitude)
                    @Html.Hidden("VacancySearch.Hash", Model.VacancySearch.LatLonLocHash())

                    <div class="form-group">
                        <button class="button" id="search-button">Update results</button>
                    </div>
                </div>
            </fieldset>
        
        </section>
        <section class="grid grid-2-3">
            @{
                if (Model.TotalHits == 0)
                {
                    <p id="search-no-results-title">There are currently no apprenticeships that match your search.</p>
                    <p>Try editing your search:</p>
                    <ul>
                        <li>using different keywords</li>
                        <li>expanding your search location</li>
                        <li>making sure all words are spelt correctly</li>
                    </ul>
                }
                else
                {
                    <div id="pagedList">
                        @{ Html.RenderPartial("_searchResults", Model); }
                    </div>
                }
            }
            
        </section>
    }
</div>


@section scripts
{
    <script src="~/Content/_assets/js/vendor/jquery-ui-1.10.4.custom.min.js" type="text/javascript"></script>
    <script src="~/Content/_assets/js/nas/locationAutocomplete.js" type="text/javascript"></script>
    <script>
    $("#VacancySearch_Location").locationMatch({
        url: '@Url.Action("location", "Location")',
        longitude: '#@(Html.IdFor(m => m.VacancySearch.Longitude))',
        latitude: '#@(Html.IdFor(m => m.VacancySearch.Latitude))',
        latlonhash: '#@(Html.IdFor(m => m.VacancySearch.Hash))'
    });
    </script>
}
