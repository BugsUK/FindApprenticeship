@using SFA.Apprenticeships.Domain.Entities.Applications
@using SFA.Apprenticeships.Web.Candidate.Constants
@model VacancyDetailViewModel

@if (Request.IsAuthenticated)
{
    if (Model.CandidateApplicationStatus.HasValue)
    {
        // Candidate has applied for this vacancy.
        switch (Model.CandidateApplicationStatus.Value)
        {
            case ApplicationStatuses.Draft:
                <a id="apply-button" class="button button-with-hint" title="Resume application" href="@Url.Action("Apply", "Application", new { @id = Model.Id })">Resume application</a>
                break;

            case ApplicationStatuses.Submitting:
            case ApplicationStatuses.Submitted:
            case ApplicationStatuses.InProgress:
            case ApplicationStatuses.Successful:
            case ApplicationStatuses.Unsuccessful:
                <p class="no-btm-margin">You applied on @Html.DisplayFor(m => m.DateApplied, "Date").</p>
                <a href='@Url.RouteUrl(CandidateRouteNames.MyApplications)'>Track application status</a>    
                break;
        }
    }
    else
    {
        // Candidate has not applied for this vacancy.
        <a id="apply-button" class="button button-with-hint" title="Apply for apprenticeship" href="@Url.Action("Apply", "Application", new { @id = Model.Id })">Apply for apprenticeship</a>
    }
}
else
{
    // Vacancy is not being viewed by a signed-in candidate.
    <a id="apply-button" class="button button-with-hint" title="Sign in to apply" href="@Url.Action("Apply", "Application", new { @id = Model.Id })">Sign in to apply</a>
}
<p class="copy-16">Closing date: @Html.DisplayFor(m => m.ClosingDate, "Date")</p>
