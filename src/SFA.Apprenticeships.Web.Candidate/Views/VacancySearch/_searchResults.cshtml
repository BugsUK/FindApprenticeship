@model VacancySearchResponseViewModel

@if (Model.TotalLocalHits > 0 || Model.TotalNationalHits > 0)
{
    var disableSortDropdownList = string.IsNullOrEmpty(Model.VacancySearch.Keywords) && Model.VacancySearch.LocationType == VacancyLocationType.Nationwide ? true : false;
    <fieldset>
        <legend class="visuallyhidden">Search items</legend>
        <div class="float-right-wrap">
            <div class="form-group form-group-compound">
                <label for="sort-results" class="heading-medium inline">Sort results</label>
                @Html.DropDownList("sortType", (SelectList)ViewBag.SortTypes, disableSortDropdownList ? new { @id = "sort-results", @disabled = "disabled" } as object : new { @id = "sort-results" })
                <noscript>
                    <button class="button show-nojs" name="SearchAction" value="Sort">Sort</button>
                </noscript>
                <input id="SearchAction" name="SearchAction" value="Search" type="hidden" />
            </div>
        </div>
    </fieldset>
}
<ul class="search-results">
    @if (Model.Vacancies != null)
    {
        foreach (var vacancy in Model.Vacancies)
        {
            <li class="search-results__item section-border">
                <div class="hgroup-medium">
                    <h3 class="heading-medium vacancy-title-link">@Html.ActionLink(@vacancy.Title, "DetailsWithDistance", new { id = vacancy.Id, distance = vacancy.DistanceAsString }, new { @class = "vacancy-link", data_vacancy_id = vacancy.Id })</h3>
                    <h4 class="subtitle">@vacancy.EmployerName</h4>
                </div>
                <p class="search-shortdesc">@vacancy.Description</p>
                <p>@Html.ActionLink("Read more", "DetailsWithDistance", new { id = vacancy.Id, distance = vacancy.DistanceAsString })</p>
                <ul class="list-text">

                    @if (vacancy.VacancyLocationType == VacancyLocationType.Local)
                    {
                        <li><b>Distance:</b> <span class="distance-value">@vacancy.DistanceAsString</span> miles</li>
                    }

                    <li><b>Closing date:</b> <span class="closing-date-value">@Html.DisplayFor(m => vacancy.ClosingDate, "Date")</span></li>

                    @if (vacancy.VacancyLocationType == VacancyLocationType.Nationwide)
                    {
                        <li>This apprenticeship has multiple positions nationwide.</li>
                    }

                </ul>
            </li>
        }
    }
</ul>

@{ Html.RenderPartial("_pagination", Model); }

@*TODO: needs Henry work -> put in partial view?*@

<div class="form-group">
    <label for="results-per-page" class="heading-small inline">Display results</label>
    @Html.DropDownList("resultsPerPage", (SelectList)ViewBag.ResultsPerPage, new { @id = "results-per-page" })
    <noscript>
        <button class="button show-nojs" name="ChangeResultsPerPageAction" value="ResultsPerPage">View</button>
    </noscript>
</div>