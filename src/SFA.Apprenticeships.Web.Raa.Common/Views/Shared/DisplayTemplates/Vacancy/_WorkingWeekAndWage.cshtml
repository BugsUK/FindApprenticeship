@using SFA.Apprenticeships.Domain.Entities.Raa.Vacancies
@using SFA.Apprenticeships.Domain.Entities.Vacancies
@using SFA.Apprenticeships.Infrastructure.Presentation.Constants
@using SFA.Apprenticeships.Web.Raa.Common.Extensions
@using SFA.Apprenticeships.Web.Raa.Common.ViewModels.Vacancy
@using HtmlExtensions = SFA.Apprenticeships.Web.Common.Framework.HtmlExtensions
@model VacancyViewModel

@{
    var editableItemClass = ViewData["editableItemClass"];
}

<div class="@editableItemClass">
    <h3 class="bold-small">
        @if (Model.VacancyType == SFA.Apprenticeships.Domain.Entities.Raa.Vacancies.VacancyType.Traineeship)
        {
            <span>Weekly hours</span>
        }
        else
        {
            <span>Working week</span>
            @Html.Partial(ValidationResultViewModel.PartialView, Html.GetValidationResultViewModel(Model, m => m.FurtherVacancyDetailsViewModel.WorkingWeek, ViewData.ModelState, Model.SummaryLink, Model.FurtherVacancyDetailsViewModel.WorkingWeekComment))
        }
    </h3>
    <p id="vacancy-working-week" itemprop="workHours" class="@Model.FurtherVacancyDetailsViewModel.WorkingWeek.GetPreserveFormattingCssClass()">@(SFA.Apprenticeships.Web.Common.Framework.HtmlExtensions.EscapeHtmlEncoding(Html, Model.FurtherVacancyDetailsViewModel.WorkingWeek))</p>
    @if (Model.VacancyType == SFA.Apprenticeships.Domain.Entities.Raa.Vacancies.VacancyType.Apprenticeship && Model.FurtherVacancyDetailsViewModel.Wage.HoursPerWeek.HasValue)
    {
        <a name="furthervacancydetailsviewmodel_hoursperweek"></a>
        <p id="total-hours-per-week">Total hours per week: @Model.FurtherVacancyDetailsViewModel.Wage.HoursPerWeek</p>
        if (Model.FurtherVacancyDetailsViewModel.Wage.HoursPerWeek > 40)
        {
            <p>(the hours are based on the candidate being over 18)</p>
        }
    }
    @Html.Partial(EditLinkViewModel.PartialView, Html.GetEditLinkViewModel(Model, m => m.FurtherVacancyDetailsViewModel.WorkingWeek, Model.SummaryLink, Model.FurtherVacancyDetailsViewModel.WorkingWeekComment))
</div>

@if (Model.VacancyType == SFA.Apprenticeships.Domain.Entities.Raa.Vacancies.VacancyType.Apprenticeship)
{
    <div class="@editableItemClass">
        <h3 class="bold-small">
            @if (Model.FurtherVacancyDetailsViewModel.Wage.Type == WageType.Custom)
            {
                <span id="furthervacancydetailsviewmodel_wage_amount">
                    @Model.FurtherVacancyDetailsViewModel.Wage.Unit.GetHeaderDisplayText()
                    @Html.Partial(ValidationResultViewModel.PartialView, Html.GetValidationResultViewModel(Model, m => m.FurtherVacancyDetailsViewModel.Wage.Type, ViewData.ModelState, Model.SummaryLink, Model.FurtherVacancyDetailsViewModel.WageComment))
                </span>
            }
            else
            {
                <span>
                    Weekly wage
                    @Html.Partial(ValidationResultViewModel.PartialView, Html.GetValidationResultViewModel(Model, m => m.FurtherVacancyDetailsViewModel.Wage.Type, ViewData.ModelState, Model.SummaryLink, Model.FurtherVacancyDetailsViewModel.WageComment))
                </span>
            }
        </h3>
        <p id="vacancy-wage">@WagePresenter.GetDisplayAmount(Model.FurtherVacancyDetailsViewModel.Wage.Type, Model.FurtherVacancyDetailsViewModel.Wage.Amount, Model.FurtherVacancyDetailsViewModel.Wage.Text, Model.FurtherVacancyDetailsViewModel.Wage.HoursPerWeek, Model.FurtherVacancyDetailsViewModel.VacancyDatesViewModel.PossibleStartDate.Date)</p>
        @Html.Partial(EditLinkViewModel.PartialView, Html.GetEditLinkViewModel(Model, m => m.FurtherVacancyDetailsViewModel.Wage.Type, Model.SummaryLink, Model.FurtherVacancyDetailsViewModel.WageComment))
    </div>

    var possibleStartDate = Model.FurtherVacancyDetailsViewModel.VacancyDatesViewModel.PossibleStartDate.Date;

    if (Model.FurtherVacancyDetailsViewModel.Wage.Type == WageType.ApprenticeshipMinimum)
    {
        @Html.Partial("_ApprenticeMinimumWageExplained", possibleStartDate)
    }

    if (Model.FurtherVacancyDetailsViewModel.Wage.Type == WageType.NationalMinimum)
    {
        @Html.Partial("_NationalMinimumWageExplained", possibleStartDate)
    }
}