@model SFA.Apprenticeships.Web.Manage.ViewModels.ReportVacancyExtensionsParameters

@{
    ViewBag.Title = "Vacancy Extensions Csv";
}

<h2>Vacancy Extensions CSV</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.Partial("ValidationSummary", ViewData.ModelState)
        <div class="form-group, inline-fixed">
            @Html.LabelFor(model => model.FromDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FromDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FromDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group, inline-fixed">
            @Html.LabelFor(model => model.ToDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ToDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ToDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UKPRN, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.UKPRN, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.UKPRN, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Status, new SelectList(Model.VacancyStatuses, "Value", "Text"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 inline">
                <button id="btnValidate" type="submit" class="button" name="VacancyExtensionsCsv" value="ValidateVacancyExtensionsCsv">Get CSV Link</button>
                @if (Model.IsValid)
                {
                    <button id="btnReject" type="submit" class="button sfa-button-secondary" name="VacancyExtensionsCsv" value="DownloadVacancyExtensionsCsv">Download CSV</button>
                }
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
