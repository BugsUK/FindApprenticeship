@using System.Web.Mvc.Html
@using SFA.Apprenticeships.Web.Manage.Constants
@using SFA.Apprenticeships.Web.Raa.Common.ViewModels.Candidate
@model CandidateSearchResultsViewModel

@{
    ViewBag.Title = "Search for candidate";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1 class="heading-xlarge">
    Search for a candidate
</h1>

@using (Html.BeginForm(null, "Candidate", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.Partial("ValidationSummary", ViewData.ModelState)

    if (Model.Candidates != null && Model.Candidates.ResultsCount == 0)
    {
        <div class="form-group">
            <p>
                There are currently no candidates that match your search.
            </p>
            <p>
                Try editing your search:
                <ul>
                    <li>check the spelling of first and last names</li>
                    <li>check any postcode used is correct</li>
                    <li>check the candidate's date of birth has been entered correctly</li>
                </ul>
            </p>
        </div>
    }

    <div class="form-group">
        @Html.FormTextFor(
            m => m.SearchViewModel.FirstName,
            controlHtmlAttributes: new { type = "text", autofocus = "autofocus", spellcheck = "false" })

        @Html.FormTextFor(
            m => m.SearchViewModel.LastName,
            controlHtmlAttributes: new { type = "text", spellcheck = "false" })

        @Html.FormTextFor(
            m => m.SearchViewModel.DateOfBirth,
            controlHtmlAttributes: new { type = "text", spellcheck = "false" })

        @Html.FormTextFor(
            m => m.SearchViewModel.Postcode,
            controlHtmlAttributes: new { type = "text", spellcheck = "false" })
    </div>

    <div class="form-group inline">
        <button id="search-candidates-button" type="submit" class="button" name="SearchCandidatesAction" value="SearchCandidates">Search</button>
        @Html.RouteLink("Reset search", ManagementRouteNames.Candidates, new {@class="button sfa-button-secondary" })
    </div>

    if (Model.Candidates != null && Model.Candidates.ResultsCount > 0)
    {
        <div class="grid-row">
            <div class="column-full">
                <p class="candidate-results-count">
                    @if (Model.Candidates.ResultsCount == 1)
                    {
                        <span>Found 1 candidate</span>
                    }
                    else
                    {
                        <span>Found @Model.Candidates.ResultsCount candidates</span>
                    }
                </p>
                <table>
                    <colgroup>
                        <col class="t30">
                        <col class="t30">
                        <col class="t30">
                        <col class="t10">
                    </colgroup>
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Address</th>
                            <th>D.O.B.</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var candidate in Model.Candidates.Page)
                        {
                            <tr>
                                <td class="candidate-name">@candidate.Name</td>
                                <td>
                                    <ul class="candidate-address">
                                        <li>@candidate.Address.AddressLine1</li>
                                        <li>@candidate.Address.AddressLine2</li>
                                        <li>@candidate.Address.AddressLine3</li>
                                        <li>@candidate.Address.AddressLine4</li>
                                        <li>@candidate.Address.Postcode</li>
                                    </ul>
                                </td>
                                <td>@candidate.DateOfBirth.ToDateOfBirthString()</td>
                                <td>
                                    @Html.RouteLink("Select candidate", ManagementRouteNames.ViewCandidate, new { id = candidate.Id })
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="page-navigation">

                @{
                    var currentPage = Model.Candidates.CurrentPage;
                    var totalNumberOfPages = Model.Candidates.TotalNumberOfPages;
                    var prevLink = Url.RouteUrl(ManagementRouteNames.SearchCandidates, new CandidateSearchViewModel(Model.SearchViewModel, currentPage - 1));
                    var nextLink = Url.RouteUrl(ManagementRouteNames.SearchCandidates, new CandidateSearchViewModel(Model.SearchViewModel, currentPage + 1));
                }

                <a href="@prevLink"
                   style="visibility: @(currentPage == 1 ? "hidden" : "visible"); width: 33.333333333%"
                   class="page-navigation__btn previous grid column-one-third">
                    <i class="arrow-button fa fa-angle-left"></i>
                    <span class="description">Previous <span class="sfa-hide-mobile">page</span></span>
                    <span class="counter">@(currentPage - 1) of @totalNumberOfPages</span>
                </a>

                <div id="page-size-container" class="column-one-third page-navigation__btn" style="width: 33.333333333%; text-align: center">
                    <label for="page-size" class="heading-small inline">Display results</label>
                    @Html.DropDownListFor(m => m.SearchViewModel.PageSize, Model.SearchViewModel.PageSizes, new {id = "page-size", @class = "form-control" })
                    <noscript>
                        <button class="button" name="SearchVacanciesAction" value="SearchVacancies">View</button>
                    </noscript>
                </div>

                <a href="@nextLink"
                   style="visibility: @(currentPage == totalNumberOfPages ? "hidden" : "visible"); width: 33.333333333%"
                   class="page-navigation__btn next grid column-one-third">
                    <i class="arrow-button fa fa-angle-right"></i>
                    <span class="description">Next <span class="sfa-hide-mobile">page</span></span>
                    <span class="counter">@(currentPage + 1) of @totalNumberOfPages</span>
                </a>

            </div>

        </div>
    }
}

<div class="sfa-saving-prompt toggle-content hide-nojs" id="ajaxLoading">
    Loading
</div>

@section scripts
{
    @Scripts.Render("~/bundles/candidates")
    <script>
        var searchUrl = '@Url.RouteUrl(ManagementRouteNames.SearchCandidates)';
    </script>
}