@model SFA.Apprenticeships.Web.Raa.Common.ViewModels.Vacancy.VacancySummaryViewModel
@using SFA.Apprenticeships.Domain.Entities.Vacancies.ProviderVacancies
@using SFA.Apprenticeships.Web.Common.Extensions
@using SFA.Apprenticeships.Web.Common.Validators.Extensions
@using SFA.Apprenticeships.Web.Manage.Constants
@using SFA.Apprenticeships.Web.Raa.Common.Constants.ViewModels
@using SFA.Apprenticeships.Web.Raa.Common.Extensions
@{
    ViewBag.Title = "Recruit an Apprentice - Enter vacancy summary";
}

<h1 class="heading-xlarge">
    Enter vacancy details
</h1>

@using (Html.BeginRouteForm(ManagementRouteNames.Summary, FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.Partial("ValidationSummary", ViewData.ModelState)

    @Html.HiddenFor(m => m.VacancyReferenceNumber)
    @Html.HiddenFor(m => m.AcceptWarnings)

    <section>
        <div class="form-group">
            <fieldset class="form-group inline-fixed">
                @Html.FormTextAreaFor(m => m.WorkingWeek, containerHtmlAttributes: new {@baseClassName = "working-week"}, controlHtmlAttributes: new {@class = "width-all-1-2", type = "text", size = 12})
                @Html.FormTextFor(m => m.HoursPerWeek, containerHtmlAttributes: new {@class = "form-group-compound"}, labelHtmlAttributes: new {style = "Display: none"}, controlHtmlAttributes: new {@class = "form-control-small", type = "tel", size = 12})@VacancyViewModelMessages.HoursPerWeek.LabelText
            </fieldset>
            <div class="form-group">@Html.EditorFor(m => m.WorkingWeekComment, "Comment", Html.GetLabelFor(m => m.WorkingWeekComment))</div>

                <div class="blocklabel-single-container">
                    <div class="form-group">
                        <a name="@Html.NameFor(m => m.WageType).ToString().ToLower()"></a>
                        <label class="form-label" for="weekly-wage">Wage</label>
                        <div class="form-group" data-editable-x="">
                            @* ReSharper disable once Html.IdNotResolved *@
                            <label for="custom-wage" class="block-label" data-target="custom-wage-panel">
                                @Html.RadioButtonFor(model => model.WageType, WageType.Custom, new { id = "custom-wage", aria_controls = "wage-type-panel" })
                                Custom wage
                            </label>
                            @* ReSharper disable once Html.IdNotResolved *@
                            <label for="national-minimum-wage" class="block-label">
                                @Html.RadioButtonFor(model => model.WageType, WageType.NationalMinimumWage, new { id = "national-minimum-wage", aria_controls = "wage-type-panel" })
                                National Minimum Wage
                            </label>
                            @* ReSharper disable once Html.IdNotResolved *@
                            <label for="apprenticeship-minimum-wage" class="block-label">
                                @Html.RadioButtonFor(model => model.WageType, WageType.ApprenticeshipMinimumWage, new { id = "apprenticeship-minimum-wage", aria_controls = "wage-type-panel" })
                                Apprentice National Minimum Wage
                            </label>
                        </div>
                        <div id="custom-wage-panel" class="toggle-content blocklabel-content">
                            <fieldset class="form-group inline-fixed">
                                £
                                @Html.FormTextFor(m => m.Wage, containerHtmlAttributes: new { @class = "form-group-compound" }, labelHtmlAttributes: new { style = "Display: none" }, controlHtmlAttributes: new { @class = "form-control-large", type = "tel", size = 12 })
                                @Html.DropDownListFor(m => m.WageUnit, Model.WageUnits)
                            </fieldset>
                        </div>
                    </div>
                    <div class="form-group">@Html.EditorFor(m => m.WageComment, "Comment", Html.GetLabelFor(m => m.WageComment))</div>
                </div>

                <fieldset class="form-group inline-fixed">
                    @Html.FormTextFor(m => m.Duration, containerHtmlAttributes: new { @class = "form-group-compound" }, controlHtmlAttributes: new { @class = "form-control-large", type = "tel", size = 12 })
                    @Html.DropDownListFor(m => m.DurationType, Model.DurationTypes)
                </fieldset>
                <fieldset class="form-group">
                    @Html.EditorFor(m => m.DurationComment, "Comment", Html.GetLabelFor(m => m.DurationComment))
                </fieldset>

                <fieldset class="form-group inline-fixed date-input @SFA.Apprenticeships.Web.Common.Framework.HtmlExtensions.GetValidationCssClass(Html.GetValidationType(m => m.VacancyDatesViewModel.ClosingDate))">
                    <a name="@Html.NameFor(m => m.VacancyDatesViewModel.ClosingDate).ToString().ToLower()"></a>
                    <legend class="form-label">@Model.GetMetadata(m => m.VacancyDatesViewModel.ClosingDate).DisplayName</legend>
                    @Html.EditorFor(m => m.VacancyDatesViewModel.ClosingDate)
                    @Html.ValidationMessageWithSeverityFor(m => m.VacancyDatesViewModel.ClosingDate, Html.GetValidationType(m => m.VacancyDatesViewModel.ClosingDate))
                </fieldset>
                <div class="form-group">@Html.EditorFor(m => m.VacancyDatesViewModel.ClosingDateComment, "Comment", Html.GetLabelFor(m => m.VacancyDatesViewModel.ClosingDateComment))</div>

                <fieldset class="form-group inline-fixed date-input @SFA.Apprenticeships.Web.Common.Framework.HtmlExtensions.GetValidationCssClass(Html.GetValidationType(m => m.VacancyDatesViewModel.PossibleStartDate))">
                    <a name="@Html.NameFor(m => m.VacancyDatesViewModel.PossibleStartDate).ToString().ToLower()"></a>
                    <legend class="form-label">@Model.GetMetadata(m => m.VacancyDatesViewModel.PossibleStartDate).DisplayName</legend>
                    @Html.EditorFor(m => m.VacancyDatesViewModel.PossibleStartDate)
                    @Html.ValidationMessageWithSeverityFor(m => m.VacancyDatesViewModel.PossibleStartDate, Html.GetValidationType(m => m.VacancyDatesViewModel.PossibleStartDate))
                </fieldset>
                <div class="form-group">@Html.EditorFor(m => m.VacancyDatesViewModel.PossibleStartDateComment, "Comment", Html.GetLabelFor(m => m.VacancyDatesViewModel.PossibleStartDateComment))</div>
                @Html.FormTextAreaFor(m => m.LongDescription, controlHtmlAttributes: new { @class = "width-all-1-1 form-textarea-large", type = "text", size = 12, rows = 22 })
                @Html.EditorFor(m => m.LongDescriptionComment, "Comment", Html.GetLabelFor(m => m.LongDescriptionComment))
            </div>
    </section>
    <div class="grid grid-1-2">
        <button type="submit" class="button">Save</button>
        @Html.RouteLink("Cancel", ManagementRouteNames.ReviewVacancy, new { vacancyReferenceNumber = Model.VacancyReferenceNumber })
    </div>
}