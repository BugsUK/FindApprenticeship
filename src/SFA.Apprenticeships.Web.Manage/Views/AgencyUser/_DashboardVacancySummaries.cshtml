@using SFA.Apprenticeships.Domain.Raa.Interfaces.Repositories.Models
@using SFA.Apprenticeships.Web.Manage.Constants
@using SFA.Apprenticeships.Web.Raa.Common.ViewModels
@using SFA.Apprenticeships.Web.Raa.Common.ViewModels.Vacancy
@model DashboardVacancySummariesViewModel

<div class="grid-wrapper">
    <div class="grid grid-1-1">
        <div class="inner-block-padr">
            <section>
                <div class="tabbed-element tab1 active width-all-1-1">
                    <table class="no-btm-margin reactive">
                        <colgroup>
                            <col>
                            <col>
                            <col>
                            <col>
                            <col>
                            <col>
                            <col>
                        </colgroup>
                        <thead>
                            <tr>
                                <th>
                                    @{
                                        var titleNewOrder = Model.SearchViewModel.Order == Order.Ascending ? Order.Descending : Order.Ascending;
                                        var titleSortClass = Model.SearchViewModel.OrderByField == DashboardVacancySummariesSearchViewModel.OrderByFieldTitle ?
                                            Model.SearchViewModel.Order == Order.Ascending ? "fa-sort-up" : "fa-sort-down" : "fa-sort";
                                    }
                                    <a href="@Url.RouteUrl(ManagementRouteNames.Dashboard, new DashboardVacancySummariesSearchViewModel(Model.SearchViewModel, DashboardVacancySummariesSearchViewModel.OrderByFieldTitle, titleNewOrder))">
                                        <span class="font-black">Title <i class="fa @titleSortClass" aria-hidden="true"></i></span>
                                    </a>
                                </th>
                                <th>Type</th>
                                <th>
                                    @{
                                        var providerNewOrder = Model.SearchViewModel.Order == Order.Ascending ? Order.Descending : Order.Ascending;
                                        var providerSortClass = Model.SearchViewModel.OrderByField == DashboardVacancySummariesSearchViewModel.OrderByFieldProvider ?
                                            Model.SearchViewModel.Order == Order.Ascending ? "fa-sort-up" : "fa-sort-down" : "fa-sort";
                                    }
                                    <a href="@Url.RouteUrl(ManagementRouteNames.Dashboard, new DashboardVacancySummariesSearchViewModel(Model.SearchViewModel, DashboardVacancySummariesSearchViewModel.OrderByFieldProvider, providerNewOrder))">
                                        <span class="font-black">Provider <i class="fa @providerSortClass" aria-hidden="true"></i></span>
                                    </a>
                                </th>
                                <th>
                                    @{
                                        var dateSubmittedNewOrder = Model.SearchViewModel.Order == Order.Ascending ? Order.Descending : Order.Ascending;
                                        var dateSubmittedSortClass = Model.SearchViewModel.OrderByField == DashboardVacancySummariesSearchViewModel.OrderByFieldDateSubmitted ?
                                            Model.SearchViewModel.Order == Order.Ascending ? "fa-sort-up" : "fa-sort-down" : "fa-sort";
                                    }
                                    <a href="@Url.RouteUrl(ManagementRouteNames.Dashboard, new DashboardVacancySummariesSearchViewModel(Model.SearchViewModel, DashboardVacancySummariesSearchViewModel.OrderByFieldDateSubmitted, dateSubmittedNewOrder))">
                                        <span class="font-black">Date submitted <i class="fa @dateSubmittedSortClass" aria-hidden="true"></i></span>
                                    </a>
                                </th>
                                <th>
                                    @{
                                        var closingDateNewOrder = Model.SearchViewModel.Order == Order.Ascending ? Order.Descending : Order.Ascending;
                                        var closingDateSortClass = Model.SearchViewModel.OrderByField == DashboardVacancySummariesSearchViewModel.OrderByFieldClosingDate ?
                                            Model.SearchViewModel.Order == Order.Ascending ? "fa-sort-up" : "fa-sort-down" : "fa-sort";
                                    }
                                    <a href="@Url.RouteUrl(ManagementRouteNames.Dashboard, new DashboardVacancySummariesSearchViewModel(Model.SearchViewModel, DashboardVacancySummariesSearchViewModel.OrderByFieldClosingDate, closingDateNewOrder))">
                                        <span class="font-black">Closing date <i class="fa @closingDateSortClass" aria-hidden="true"></i></span>
                                    </a>
                                </th>
                                <th>
                                    @{
                                        var submissionCountNewOrder = Model.SearchViewModel.Order == Order.Ascending ? Order.Descending : Order.Ascending;
                                        var submissionCountSortClass = Model.SearchViewModel.OrderByField == DashboardVacancySummariesSearchViewModel.OrderByFieldSubmissionCount ?
                                            Model.SearchViewModel.Order == Order.Ascending ? "fa-sort-up" : "fa-sort-down" : "fa-sort";
                                    }
                                    <a href="@Url.RouteUrl(ManagementRouteNames.Dashboard, new DashboardVacancySummariesSearchViewModel(Model.SearchViewModel, DashboardVacancySummariesSearchViewModel.OrderByFieldSubmissionCount, submissionCountNewOrder))">
                                        <span class="font-black">Submission count <i class="fa @submissionCountSortClass" aria-hidden="true"></i></span>
                                    </a>
                                </th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var vacancy in Model.Vacancies)
                            {
                                <tr>
                                    <td>
                                        <div class="reactive-title">@HtmlExtensions.EscapeHtmlEncoding(Html, vacancy.Title)</div>
                                    </td>
                                    <td>
                                        @vacancy.VacancyType.ToString()
                                    </td>
                                    <td class="reactive-header" data-label="Provider">
                                        @vacancy.ProviderName
                                    </td>
                                    <td class="reactive-header" data-label="Date submitted">
                                        @vacancy.DateSubmitted.ToGmtDate()
                                    </td>
                                    <td class="reactive-header" data-label="Closing date">
                                        @vacancy.ClosingDate.ToFriendlyClosingToday()
                                    </td>
                                    <td class="ta-center reactive-header" data-label="Submission count">
                                        @vacancy.SubmissionCount
                                    </td>
                                    <td>
                                        @if (vacancy.CanBeReservedForQaByCurrentUser)
                                        {
                                            <a href="@Url.RouteUrl(ManagementRouteNames.ReserveForQA, new {vacancyReferenceNumber = vacancy.VacancyReferenceNumber})" title="Review @vacancy.Title">Review vacancy</a>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </section>
        </div>
    </div>
</div>