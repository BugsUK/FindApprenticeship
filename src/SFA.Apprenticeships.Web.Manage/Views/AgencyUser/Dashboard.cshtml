@using SFA.Apprenticeships.Web.Manage.Constants
@using SFA.Apprenticeships.Web.Raa.Common.ViewModels.ProviderUser
@using SFA.Apprenticeships.Web.Raa.Common.ViewModels.Vacancy
@model SFA.Apprenticeships.Web.Manage.ViewModels.HomeViewModel

@{
    ViewBag.Title = "Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section metatags
{
    <meta name="DCS.dcsaut" content="@User.Identity.Name" />
    <meta name="WT.sp" content="Manage Apprenticeships" />
}
@using (Html.BeginForm(null, "AgencyUser", FormMethod.Post))
{
    <div class="grid-wrapper">
        <div class="grid grid-1-2">
            <div class="inner-block-padr">
                <h1 class="heading-xlarge">
                    Agency home
                </h1>
            </div>
        </div>
        <div class="grid grid-1-2">
            <h2 class="heading-small">Change role</h2>
            @Html.DropDownListFor(m => m.AgencyUser.RoleId, Model.AgencyUser.Roles, new { id = "role", @class = "chosen-select grid grid-1-1" })
            @if (Model.AgencyUser.RoleId != "QA_advisor")
            {
                @Html.HiddenFor(m => m.AgencyUser.RegionalTeam)
            }
            <noscript>
                <button class="button" name="DashboardAction" value="ChangeRole">Change role</button>
            </noscript>
        </div>
    </div>

    if (Model.AgencyUser.RoleId == "QA_advisor")
    {
        <div class="grid-wrapper">
            <div class="grid grid-1-2">
                <h2 class="heading-medium">
                    Review vacancies
                </h2>
            </div>
            <div class="grid grid-1-2">
                <h2 class="heading-small">Change team</h2>
                @Html.DropDownListFor(m => m.AgencyUser.RegionalTeam, Model.AgencyUser.RegionalTeams,
               new { id = "regional-team", @class = "chosen-select grid grid-1-1" })
                <noscript>
                    <button class="button" name="DashboardAction" value="ChangeTeam">Change team</button>
                </noscript>
            </div>
            <div class="grid grid-1-2">
                &nbsp;
            </div>
            <div class="grid grid-1-2">
                <div class="search-bar">
                    <label class="form-label" style="margin-top: 10px">Search your team's vacancies</label>
                    @Html.DropDownListFor(m => m.AgencyUser.SearchMode, Model.AgencyUser.SearchModes)                    
                    <div class="search-input-wrapper">
                        @Html.TextBoxFor(m => m.VacancySummaries.SearchViewModel.SearchString, new { title = "Search", placeholder = "Search vacancies", @class = "form-control", aria_label = "Search your vacancies" })
                    </div>
                    @Html.HiddenFor(m => m.VacancySummaries.SearchViewModel.SearchString)
                    <div>
                        <button id="search-vacancies-button" type="submit" class="button search-btn no-margins" name="SearchVacanciesAction" value="SearchVacancies">
                            <i class="fa fa-search"></i><span>Search</span>
                        </button>
                    </div>
                </div>
            </div>
        </div>             
        <div class="grid-wrapper">
            <div class="grid grid-1-1">
                <nav class="tabbed-nav">
                    @{
                        var dashboardVacancySummariesSearchViewModel = Model.VacancySummaries.SearchViewModel;
                        var reviewTabControlClass = dashboardVacancySummariesSearchViewModel.Mode == DashboardVacancySummariesMode.Review ? " active" : "";
                        var metricsTabControlClass = dashboardVacancySummariesSearchViewModel.Mode == DashboardVacancySummariesMode.Metrics ? " active" : "";
                        var reviewTitle = !string.IsNullOrEmpty(dashboardVacancySummariesSearchViewModel.Provider) ? dashboardVacancySummariesSearchViewModel.Provider + "'s" : Model.AgencyUser.RegionalTeam.GetTitle();
                    }

                    @Html.RouteLink(reviewTitle + " vacancies", ManagementRouteNames.Dashboard, new DashboardVacancySummariesSearchViewModel(dashboardVacancySummariesSearchViewModel, DashboardVacancySummariesMode.Review), new { @class = "tabbed-tab no-js" + reviewTabControlClass })
                    @Html.RouteLink("All teams", ManagementRouteNames.Dashboard, new DashboardVacancySummariesSearchViewModel(dashboardVacancySummariesSearchViewModel, DashboardVacancySummariesMode.Metrics), new { @class = "tabbed-tab no-js" + metricsTabControlClass })
                </nav>
            </div>
        </div>

            <div class="tabbed-content active width-all-1-1">
                @if (dashboardVacancySummariesSearchViewModel.Mode == DashboardVacancySummariesMode.Review)
                {
                    @Html.Partial("_DashboardVacancyCounts", Model.VacancySummaries)
                    @Html.Partial("_DashboardVacancySummaries", Model.VacancySummaries)
                }
                @if (dashboardVacancySummariesSearchViewModel.Mode == DashboardVacancySummariesMode.Metrics)
                {
                    @Html.Partial("_DashboardTeamMetrics", Model)
                }
            </div>
                        }

                        if (Model.AgencyUser.RoleId == "Helpdesk_advisor")
                        {
                            @Html.Partial("_DashboardHelpDesk")
                            }
                        }

<div class="saving-prompt toggle-content hide-nojs" id="ajaxLoading">
    Loading
</div>

@section scripts
{
    @Scripts.Render("~/bundles/dashboard")
    <script>
        var searchUrl = '@Url.RouteUrl(ManagementRouteNames.Dashboard)';
    </script>
}