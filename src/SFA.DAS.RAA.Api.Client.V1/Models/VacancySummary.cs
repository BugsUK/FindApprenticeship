// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace SFA.DAS.RAA.Api.Client.V1.Models
{
    using System.Linq;

    public partial class VacancySummary
    {
        /// <summary>
        /// Initializes a new instance of the VacancySummary class.
        /// </summary>
        public VacancySummary() { }

        /// <summary>
        /// Initializes a new instance of the VacancySummary class.
        /// </summary>
        /// <param name="durationType">Possible values include: 'Unknown',
        /// 'Weeks', 'Months', 'Years'</param>
        /// <param name="trainingType">Possible values include: 'Unknown',
        /// 'Frameworks', 'Standards', 'Sectors'</param>
        /// <param name="apprenticeshipLevel">Possible values include:
        /// 'Unknown', 'Intermediate', 'Advanced', 'Higher',
        /// 'FoundationDegree', 'Degree', 'Masters'</param>
        /// <param name="status">Possible values include: 'Unknown', 'Draft',
        /// 'Live', 'Referred', 'Deleted', 'Submitted', 'Closed',
        /// 'Withdrawn', 'Completed', 'PostedInError', 'ReservedForQA'</param>
        /// <param name="vacancyType">Possible values include: 'Unknown',
        /// 'Apprenticeship', 'Traineeship'</param>
        /// <param name="regionalTeam">Possible values include: 'Other',
        /// 'North', 'NorthWest', 'YorkshireAndHumberside', 'EastMidlands',
        /// 'WestMidlands', 'EastAnglia', 'SouthEast', 'SouthWest'</param>
        /// <param name="vacancyLocationType">Possible values include:
        /// 'Unknown', 'SpecificLocation', 'MultipleLocations',
        /// 'Nationwide'</param>
        public VacancySummary(int? vacancyId = default(int?), int? vacancyOwnerRelationshipId = default(int?), int? vacancyReferenceNumber = default(int?), System.Guid? vacancyGuid = default(System.Guid?), string title = default(string), string shortDescription = default(string), string workingWeek = default(string), string expectedDuration = default(string), string durationType = default(string), int? duration = default(int?), System.DateTime? closingDate = default(System.DateTime?), System.DateTime? possibleStartDate = default(System.DateTime?), bool? offlineVacancy = default(bool?), int? noOfOfflineApplicants = default(int?), System.DateTime? dateSubmitted = default(System.DateTime?), System.DateTime? dateFirstSubmitted = default(System.DateTime?), System.DateTime? dateStartedToQA = default(System.DateTime?), string qAUserName = default(string), System.DateTime? dateQAApproved = default(System.DateTime?), int? submissionCount = default(int?), int? vacancyManagerId = default(int?), int? deliveryOrganisationId = default(int?), int? parentVacancyId = default(int?), string trainingType = default(string), string apprenticeshipLevel = default(string), string frameworkCodeName = default(string), int? standardId = default(int?), string sectorCodeName = default(string), string status = default(string), string employerAnonymousName = default(string), string employerAnonymousReason = default(string), bool? isAnonymousEmployer = default(bool?), string anonymousAboutTheEmployer = default(string), int? numberOfPositions = default(int?), string vacancyType = default(string), System.DateTime? updatedDateTime = default(System.DateTime?), PostalAddress address = default(PostalAddress), int? contractOwnerId = default(int?), int? originalContractOwnerId = default(int?), string regionalTeam = default(string), string vacancyLocationType = default(string), int? employerId = default(int?), string employerName = default(string), string employerLocation = default(string), int? newApplicationCount = default(int?), int? applicantCount = default(int?), string providerTradingName = default(string), System.DateTime? createdDate = default(System.DateTime?), Wage wage = default(Wage), bool? isMultiLocation = default(bool?))
        {
            VacancyId = vacancyId;
            VacancyOwnerRelationshipId = vacancyOwnerRelationshipId;
            VacancyReferenceNumber = vacancyReferenceNumber;
            VacancyGuid = vacancyGuid;
            Title = title;
            ShortDescription = shortDescription;
            WorkingWeek = workingWeek;
            ExpectedDuration = expectedDuration;
            DurationType = durationType;
            Duration = duration;
            ClosingDate = closingDate;
            PossibleStartDate = possibleStartDate;
            OfflineVacancy = offlineVacancy;
            NoOfOfflineApplicants = noOfOfflineApplicants;
            DateSubmitted = dateSubmitted;
            DateFirstSubmitted = dateFirstSubmitted;
            DateStartedToQA = dateStartedToQA;
            QAUserName = qAUserName;
            DateQAApproved = dateQAApproved;
            SubmissionCount = submissionCount;
            VacancyManagerId = vacancyManagerId;
            DeliveryOrganisationId = deliveryOrganisationId;
            ParentVacancyId = parentVacancyId;
            TrainingType = trainingType;
            ApprenticeshipLevel = apprenticeshipLevel;
            FrameworkCodeName = frameworkCodeName;
            StandardId = standardId;
            SectorCodeName = sectorCodeName;
            Status = status;
            EmployerAnonymousName = employerAnonymousName;
            EmployerAnonymousReason = employerAnonymousReason;
            IsAnonymousEmployer = isAnonymousEmployer;
            AnonymousAboutTheEmployer = anonymousAboutTheEmployer;
            NumberOfPositions = numberOfPositions;
            VacancyType = vacancyType;
            UpdatedDateTime = updatedDateTime;
            Address = address;
            ContractOwnerId = contractOwnerId;
            OriginalContractOwnerId = originalContractOwnerId;
            RegionalTeam = regionalTeam;
            VacancyLocationType = vacancyLocationType;
            EmployerId = employerId;
            EmployerName = employerName;
            EmployerLocation = employerLocation;
            NewApplicationCount = newApplicationCount;
            ApplicantCount = applicantCount;
            ProviderTradingName = providerTradingName;
            CreatedDate = createdDate;
            Wage = wage;
            IsMultiLocation = isMultiLocation;
        }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "VacancyId")]
        public int? VacancyId { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "VacancyOwnerRelationshipId")]
        public int? VacancyOwnerRelationshipId { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "VacancyReferenceNumber")]
        public int? VacancyReferenceNumber { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "VacancyGuid")]
        public System.Guid? VacancyGuid { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Title")]
        public string Title { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ShortDescription")]
        public string ShortDescription { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "WorkingWeek")]
        public string WorkingWeek { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ExpectedDuration")]
        public string ExpectedDuration { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Unknown', 'Weeks',
        /// 'Months', 'Years'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "DurationType")]
        public string DurationType { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Duration")]
        public int? Duration { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ClosingDate")]
        public System.DateTime? ClosingDate { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "PossibleStartDate")]
        public System.DateTime? PossibleStartDate { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "OfflineVacancy")]
        public bool? OfflineVacancy { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "NoOfOfflineApplicants")]
        public int? NoOfOfflineApplicants { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "DateSubmitted")]
        public System.DateTime? DateSubmitted { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "DateFirstSubmitted")]
        public System.DateTime? DateFirstSubmitted { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "DateStartedToQA")]
        public System.DateTime? DateStartedToQA { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "QAUserName")]
        public string QAUserName { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "DateQAApproved")]
        public System.DateTime? DateQAApproved { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "SubmissionCount")]
        public int? SubmissionCount { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "VacancyManagerId")]
        public int? VacancyManagerId { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "DeliveryOrganisationId")]
        public int? DeliveryOrganisationId { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ParentVacancyId")]
        public int? ParentVacancyId { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Unknown', 'Frameworks',
        /// 'Standards', 'Sectors'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "TrainingType")]
        public string TrainingType { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Unknown', 'Intermediate',
        /// 'Advanced', 'Higher', 'FoundationDegree', 'Degree', 'Masters'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ApprenticeshipLevel")]
        public string ApprenticeshipLevel { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "FrameworkCodeName")]
        public string FrameworkCodeName { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "StandardId")]
        public int? StandardId { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "SectorCodeName")]
        public string SectorCodeName { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Unknown', 'Draft', 'Live',
        /// 'Referred', 'Deleted', 'Submitted', 'Closed', 'Withdrawn',
        /// 'Completed', 'PostedInError', 'ReservedForQA'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Status")]
        public string Status { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "EmployerAnonymousName")]
        public string EmployerAnonymousName { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "EmployerAnonymousReason")]
        public string EmployerAnonymousReason { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "IsAnonymousEmployer")]
        public bool? IsAnonymousEmployer { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "AnonymousAboutTheEmployer")]
        public string AnonymousAboutTheEmployer { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "NumberOfPositions")]
        public int? NumberOfPositions { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Unknown', 'Apprenticeship',
        /// 'Traineeship'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "VacancyType")]
        public string VacancyType { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "UpdatedDateTime")]
        public System.DateTime? UpdatedDateTime { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Address")]
        public PostalAddress Address { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ContractOwnerId")]
        public int? ContractOwnerId { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "OriginalContractOwnerId")]
        public int? OriginalContractOwnerId { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Other', 'North',
        /// 'NorthWest', 'YorkshireAndHumberside', 'EastMidlands',
        /// 'WestMidlands', 'EastAnglia', 'SouthEast', 'SouthWest'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "RegionalTeam")]
        public string RegionalTeam { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Unknown',
        /// 'SpecificLocation', 'MultipleLocations', 'Nationwide'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "VacancyLocationType")]
        public string VacancyLocationType { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "EmployerId")]
        public int? EmployerId { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "EmployerName")]
        public string EmployerName { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "EmployerLocation")]
        public string EmployerLocation { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "NewApplicationCount")]
        public int? NewApplicationCount { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ApplicantCount")]
        public int? ApplicantCount { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ProviderTradingName")]
        public string ProviderTradingName { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "CreatedDate")]
        public System.DateTime? CreatedDate { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Wage")]
        public Wage Wage { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "IsMultiLocation")]
        public bool? IsMultiLocation { get; set; }

    }
}
