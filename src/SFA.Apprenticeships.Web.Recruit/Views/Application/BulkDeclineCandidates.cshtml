@using System.Web.Mvc.Html
@using SFA.Apprenticeships.Domain.Raa.Interfaces.Repositories.Models
@using SFA.Apprenticeships.Web.Raa.Common.ViewModels.Application
@using SFA.Apprenticeships.Web.Raa.Common.ViewModels.Vacancy
@using SFA.Apprenticeships.Web.Recruit.Constants
@model BulkDeclineCandidatesViewModel

@{
    ViewBag.Title = "Recruit an Apprentice - Bulk decline candidates";
}
@Html.Partial("ValidationSummary", ViewData.ModelState)
@using (Html.BeginRouteForm(RecruitmentRouteNames.BulkDeclineCandidates, FormMethod.Post, new { id = "bulk-decline-candidates-form" }))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(m => m.VacancyApplicationsSearch.VacancyReferenceNumber)
    <input type="hidden" name="@Html.NameFor(m => m.VacancyApplicationsSearch.FilterType)" value="@Model.VacancyApplicationsSearch.FilterType" />
    <input type="hidden" name="@Html.NameFor(m => m.VacancyApplicationsSearch.OrderByField)" value="@Model.VacancyApplicationsSearch.OrderByField" />
    <input type="hidden" name="@Html.NameFor(m => m.VacancyApplicationsSearch.Order)" value="@Model.VacancyApplicationsSearch.Order" />

    foreach (var selectedApplicationId in Model.SelectedApplicationIds.Where(aid => Model.ApplicationSummaries.All(a => a.ApplicationId != aid)))
    {
        <input type="hidden" name="@Html.NameFor(m => m.SelectedApplicationIds)" value="@selectedApplicationId" />
    }

    <div class="grid-row">
        <section class="column-two-thirds">
                <h1 id="heading" class="heading-xlarge">Select the candidates you would like to make unsucessful</h1>
        </section>
        <section class="column-one-third gov-border grey-background">
            <br/>
            <div class="inner-block">
                <div class="hgroup-small">
                    <h2 class="heading-medium">
                        @Model.Title
                    </h2>
                    <p class="heading-secondary ">
                        @Model.EmployerName
                    </p>
                    <br/>
                    <p class="font-xsmall">
                        @Html.RouteLink("See full vacancy details", RecruitmentRouteNames.PreviewVacancy, new {vacancyReferenceNumber = Model.VacancyApplicationsSearch.VacancyReferenceNumber, mode = VacancyViewModel.BulkUploadMode }, new {@class = "account-link"})
                    </p>
                    <br/>
                </div>
            </div>
        </section>
        <section class="grid-row">
            <section class="sfa-no-bottom-margin" id="applicationsSection">
                @{
                    var filterType = Model.VacancyApplicationsSearch.FilterType;
                }
                <div class="hgroup-large">
                    <h2 class="heading-large">
                        Candidates
                        @if (filterType != VacancyApplicationsFilterTypes.All)
                        {
                            <span>&nbsp;<button class="vacancy-filter" name="BulkSearchApplicationsAction" value="BulkFilterApplicationsAll">Show all</button></span>
                        }
                    </h2>
                    <hr/>
                </div>
            </section>

            <ul class="applications-summary bulk-response">
                <li>
                    @if (filterType == VacancyApplicationsFilterTypes.New)
                    {
                        <figure class="data">
                            <p class="count">@Model.NewApplicationsCount</p>
                            <figcaption>
                                <h2>New</h2>
                            </figcaption>
                        </figure>
                    }
                    else
                    {
                        <button class="vacancy-filter" name="BulkSearchApplicationsAction" value="BulkFilterApplicationsNew">
                            <figure class="data">
                                <p class="count">@Model.NewApplicationsCount</p>
                                <figcaption>
                                    <h2>New</h2>
                                </figcaption>
                            </figure>
                        </button>
                    }
                </li>
                <li>
                    @if (filterType == VacancyApplicationsFilterTypes.InProgress)
                    {
                        <figure class="data">
                            <p class="count">@Model.InProgressApplicationsCount</p>
                            <figcaption>
                                <h2>In progress</h2>
                            </figcaption>
                        </figure>
                    }
                    else
                    {
                        <button class="vacancy-filter" name="BulkSearchApplicationsAction" value="BulkFilterApplicationsInProgress">
                            <figure class="data">
                                <p class="count">@Model.InProgressApplicationsCount</p>
                                <figcaption>
                                    <h2>In progress</h2>
                                </figcaption>
                            </figure>
                        </button>
                    }
                </li>
            </ul>
        </section>
        <hr/>
        <table class="vert-top" id="applicationTable">
            <colgroup>
                <col>
                <col>
                <col>
                <col>
                <col>
                <col>
                <col>
            </colgroup>
            <thead>
            <tr>
                <th>
                    @{
                        var surnameSortClass = Model.VacancyApplicationsSearch.OrderByField == VacancyApplicationsSearchViewModel.OrderByFieldLastName ?
                            Model.VacancyApplicationsSearch.Order == Order.Ascending ? "fa-sort-up" : "fa-sort-down" : "fa-sort";
                    }
                    <button class="vacancy-order font-black" name="BulkOrderApplicationsAction" value="BulkOrderApplicationsLastName">
                        <span class="font-black">Surname <i class="fa @surnameSortClass" aria-hidden="true"></i></span>
                    </button>
                </th>

                <th>
                    @{
                        var firstNameSortClass = Model.VacancyApplicationsSearch.OrderByField == VacancyApplicationsSearchViewModel.OrderByFieldFirstName ?
                            Model.VacancyApplicationsSearch.Order == Order.Ascending ? "fa-sort-up" : "fa-sort-down" : "fa-sort";
                    }
                    <button class="vacancy-order font-black" name="BulkOrderApplicationsAction" value="BulkOrderApplicationsFirstName">
                        <span class="font-black">First name <i class="fa @firstNameSortClass" aria-hidden="true"></i></span>
                    </button>
                </th>
                <th>
                    <span class="font-black">Applicant ID</span>
                </th>
                <th>
                    @{
                        var managerNotesSortClass = Model.VacancyApplicationsSearch.OrderByField == VacancyApplicationsSearchViewModel.OrderByFieldManagerNotes ?
                            Model.VacancyApplicationsSearch.Order == Order.Ascending ? "fa-sort-up" : "fa-sort-down" : "fa-sort";
                    }
                    <button class="vacancy-order font-black" name="BulkOrderApplicationsAction" value="BulkOrderApplicationsManagerNotes">
                        <span class="font-black">Vacancy manager notes <i class="fa @managerNotesSortClass" aria-hidden="true"></i></span>
                    </button>
                </th>

                <th>
                    @{
                        var submittedSortClass = Model.VacancyApplicationsSearch.OrderByField == VacancyApplicationsSearchViewModel.OrderByFieldSubmitted ?
                            Model.VacancyApplicationsSearch.Order == Order.Ascending ? "fa-sort-up" : "fa-sort-down" : "fa-sort";
                    }
                    <button class="vacancy-order font-black" name="BulkOrderApplicationsAction" value="BulkOrderApplicationsSubmitted">
                        <span class="font-black">Submitted <i class="fa @submittedSortClass" aria-hidden="true"></i></span>
                    </button>
                </th>
                <th>
                    @{
                        var statusSortClass = Model.VacancyApplicationsSearch.OrderByField == VacancyApplicationsSearchViewModel.OrderByFieldStatus ?
                            Model.VacancyApplicationsSearch.Order == Order.Ascending ? "fa-sort-up" : "fa-sort-down" : "fa-sort";
                    }
                    <button class="vacancy-order font-black" name="BulkOrderApplicationsAction" value="BulkOrderApplicationsStatus">
                        <span class="font-black">Status <i class="fa @statusSortClass" aria-hidden="true"></i></span>
                    </button>
                </th>
                <th>

                    <input type="checkbox" id="toggleAll"/>
                    <label for="toggleAll">Select All</label>
                </th>
            </tr>
            </thead>
            <tbody>
            @foreach (var applicationSummary in Model.ApplicationSummaries)
            {
                <tr class="applicant">
                    <td>
                        <h4 class="applicant-name">@applicationSummary.LastName</h4>
                    </td>
                    <td>
                        <h4 class="applicant-name">@applicationSummary.FirstName</h4>
                    </td>
                    <td>
                        @applicationSummary.ApplicantID
                    </td>
                    <td>
                        @{
                            var notes = applicationSummary.Notes;
                            if (notes != null && notes.Length > 20)
                            {
                                notes = notes.Substring(0, 20) + "...";
                            }
                        }
                        @notes
                    </td>
                    <td>@Html.DisplayFor(m => applicationSummary.DateApplied)</td>
                    <td>
                        @Html.Partial("_applicationStatus", applicationSummary.Status)
                    </td>
                    <td>
                        @{
                            var selected = Model.SelectedApplicationIds.Contains(applicationSummary.ApplicationId) ? "checked" : string.Empty;
                        }
                        <input type="checkbox" name="@Html.NameFor(m => m.SelectedApplicationIds)" value="@applicationSummary.ApplicationId" @selected />
                    </td>
                </tr>
            }
            </tbody>
        </table>
        <div class="form-group inline">
            <button type="submit" class="button" name="ConfirmBulkDeclineCandidatesAction" value="ConfirmBulkDeclineCandidates">Confirm and continue</button>
            <a id="dashboardLink" class="button sfa-button-secondary" href="@Url.RouteUrl(RecruitmentRouteNames.VacancyApplications, new {vacancyReferenceNumber = Model.VacancyApplicationsSearch.VacancyReferenceNumber})">Cancel</a>
        </div>
    </div>
}

@section scripts
{
    <script>
        $("#toggleAll").change(function () {  //"select all" change 
            var status = this.checked; // "select all" checked status
            $('input:checkbox').each(function () { //iterate all listed checkbox items
                this.checked = status; //change ".checkbox" checked status
            });
        });

        $('input:checkbox').change(function () { //".checkbox" change 
            //uncheck "select all", if one of the listed checkbox item is unchecked
            if (this.checked == false) { //if this item is unchecked
                $("#toggleAll")[0].checked = false; //change "select all" checked status to false
            }

            //check "select all" if all checkbox items are checked
            if (($('input:checkbox:checked').length+1) == $('input:checkbox').length) {
                $("#toggleAll")[0].checked = true; //change "select all" checked status to true
            }
        });
    </script>
}