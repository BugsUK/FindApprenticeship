@using SFA.Apprenticeships.Web.Recruit.Constants

@model SFA.Apprenticeships.Web.Raa.Common.ViewModels.Application.Apprenticeship.ApprenticeshipApplicationViewModel

@{
    ViewBag.Title = "Recruit an Apprentice - Send unsuccessful decision";
}

@using (Html.BeginRouteForm(RecruitmentRouteNames.ConfirmSuccessfulApprenticeshipApplication, FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.ApplicationSelection.ApplicationId)
    @Html.HiddenFor(m => m.ApplicationSelection.VacancyReferenceNumber)
    @Html.HiddenFor(m => m.ApplicationSelection.FilterType)
    @Html.HiddenFor(m => m.ApplicationSelection.PageSize)

    <div>
        <div class="hgroup">
            <h1 class="heading-xlarge med-btm-margin">Inform @Model.ApplicantDetails.Name of unsuccessful application</h1>
        </div>

        <p> You are about to inform this candidate that they have not been selected for the role of @Model.Vacancy.Title</p>
        <h2 class="heading-medium">@Html.DisplayNameFor(model => model.CandidateFeedback)</h2>
        @Html.TextAreaFor(m=>m.CandidateFeedback, new { @class = "width-all-1-1 form-textarea-medium", type = "text" })        
        <section>
            <div class="form-group">
                <br/>                
                <button type="submit" class="button" name="SendUnsuccessfulDecision" value="SendUnsuccessfulDecision">
                    Confirm and send
                </button>
                @Html.RouteLink("Cancel", RecruitmentRouteNames.ReviewApprenticeshipApplication, Model.ApplicationSelection.RouteValues)
            </div>
        </section>
    </div>
}
