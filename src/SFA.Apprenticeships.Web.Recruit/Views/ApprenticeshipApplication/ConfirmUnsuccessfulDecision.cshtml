@using SFA.Apprenticeships.Web.Recruit.Constants

@model SFA.Apprenticeships.Web.Raa.Common.ViewModels.Application.Apprenticeship.ApprenticeshipApplicationViewModel

@{
    ViewBag.Title = "Recruit an Apprentice - Send unsuccessful decision";
}

@using (Html.BeginRouteForm(RecruitmentRouteNames.ConfirmUnsuccessfulApprenticeshipApplication, FormMethod.Post, new { id = "confirm-unsuccessful-apprenticeship-application-form" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.ApplicationSelection.ApplicationId)
    @Html.HiddenFor(m => m.ApplicationSelection.VacancyReferenceNumber)
    @Html.HiddenFor(m => m.ApplicationSelection.FilterType)
    @Html.HiddenFor(m => m.ApplicationSelection.PageSize)

    <div>
        <div class="hgroup">
            <h1 class="heading-xlarge sfa-medium-bottom-margin">Inform @Model.ApplicantDetails.Name of unsuccessful application</h1>
        </div>

        <p> You are about to inform this candidate that they have not been selected for the role of @Model.Vacancy.Title</p>
        <h2 class="heading-medium">What feedback would you like to share with the candidate?</h2>        
        @Html.FormTextAreaFor(
            m => m.UnSuccessfulReason,
            containerHtmlAttributes: new { @class = "form-group-compound heading-small" },
            controlHtmlAttributes: new { @class = "form-control form-textarea-medium", type = "text", autofocus = "autofocus", spellcheck = "true" })

        <section>
            <div class="form-group inline">
                <button type="submit" class="button" name="SendUnsuccessfulDecision" value="SendUnsuccessfulDecision">
                    Confirm and send
                </button>
                @Html.RouteLink("Cancel", RecruitmentRouteNames.ReviewApprenticeshipApplication, Model.ApplicationSelection.RouteValues, new { @class = "button sfa-button-secondary" })
            </div>
        </section>
    </div>
}
