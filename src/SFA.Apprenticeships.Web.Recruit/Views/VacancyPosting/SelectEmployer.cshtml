@using SFA.Apprenticeships.Web.Recruit.Constants
@using SFA.Apprenticeships.Web.Recruit.ViewModels.VacancyPosting
@model EmployerSearchViewModel
@{
    ViewBag.Title = "Recruit an Apprentice - Select an employer for your vacancy";

    const string selected = "selected";

    var ernSearchSelected = Model.FilterType == EmployerFilterType.Ern ? selected : null;
    var nameAndLocationSearchSelected = Model.FilterType == EmployerFilterType.NameAndLocation ? selected : null;
}
<div class="grid-wrapper">
    <div class="hgroup">
        <h1 class="heading-xlarge">
            Select an employer for your vacancy
        </h1>
    </div>
    <section class="clearfix" id="providerSiteResults">
        <h2 class="heading-small">Your linked employers</h2>
        <details>
            <summary>Search your employers</summary>
            <div class="detail-content">
                <div class="blocklabel-single-container">
                    <div class="form-group inline clearfix blocklabel-single hide-nojs">
                        @* ReSharper disable once Html.IdNotResolved *@
                        <label data-target="name-location-search-panel" for="name-location-search" class="block-label @nameAndLocationSearchSelected">
                            @Html.RadioButtonFor(model => model.FilterType, EmployerFilterType.NameAndLocation, new { id = "name-location-search", aria_controls = "name-location-search-panel" })
                            Name and location
                        </label>
                        @* ReSharper disable once Html.IdNotResolved *@
                        <label data-target="ern-search-panel" for="ern-search" class="block-label @ernSearchSelected">
                            @Html.RadioButtonFor(model => model.FilterType, EmployerFilterType.Ern, new { id = "ern-search", aria_controls = "ern-search-panel" })
                            ERN
                        </label>
                    </div>

                    @using (Html.BeginRouteForm(RecruitmentRouteNames.SearchExistingEmployerByErn, FormMethod.Post, new { @id = "#ern-search-form" }))
                    {

                        @Html.Partial("ValidationSummary", ViewData.ModelState)
                        @Html.AntiForgeryToken()

                        <div id="ern-search-panel" class="toggle-content blocklabel-content">
                            @Html.HiddenFor(model => model.ProviderSiteErn)
                            @Html.FormTextFor(model => model.Ern)

                            <button id="ern-search-button" type="submit" name="SearchExistingEmployerByReferenceNumber" value="SearchExistingEmployerByReferenceNumber" class="button">
                                Find employer
                            </button>
                        </div>
                    }

                    @using (Html.BeginRouteForm(RecruitmentRouteNames.SearchExistingEmployerByNameAndOrLocation, FormMethod.Post, new { @id = "#name-location-search-form" }))
                    {

                        @Html.Partial("ValidationSummary", ViewData.ModelState)
                        @Html.AntiForgeryToken()

                        <div id="name-location-search-panel" class="toggle-content blocklabel-content">
                            @Html.HiddenFor(model => model.ProviderSiteErn)
                            @Html.FormTextFor(model => model.Name)
                            @Html.FormTextFor(model => model.Location)

                            <button id="name-location-search-button" type="submit" name="SearchExistingEmployerByNameAndOrLocation" value="SearchExistingEmployerByNameAndOrLocation" class="button">
                                Search
                            </button>
                        </div>
                    }
                </div>
            </div>
        </details>

        <div class="grid grid-3-3 scrolling-panel max-height-15">
            <table>
                <colgroup>
                    <col class="t30">
                    <col class="t40">
                    <col class="t15">
                    <col class="t15">
                    <col>
                </colgroup>
                <tbody>
                    <tr>
                        <th>Name</th>
                        <th>Address</th>
                        <th>ERN</th>
                        <th></th>
                    </tr>
                    @foreach (var employerResultsViewModel in @Model.EmployerResults)
                    {
                        <tr>
                            <th>
                                <h4 class="bold-small">@employerResultsViewModel.EmployerName</h4>
                            </th>
                            <td>
                                @employerResultsViewModel.Address.AddressLine1
                                <br />@employerResultsViewModel.Address.AddressLine2
                                <br />@employerResultsViewModel.Address.Postcode
                            </td>
                            <td>@employerResultsViewModel.Ern</td>
                            <td>
                                <a href="@Url.RouteUrl(RecruitmentRouteNames.ComfirmEmployer, new {providerSiteErn = Model.ProviderSiteErn, ern = employerResultsViewModel.Ern})">Select employer</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <a href="@Url.RouteUrl(RecruitmentRouteNames.SelectNewEmployer, new { providerSiteErn = Model.ProviderSiteErn })">Link to a new employer</a>
    </section>
</div>
