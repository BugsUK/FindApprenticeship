@model SFA.Apprenticeships.Web.Recruit.ViewModels.Vacancy.NewVacancyViewModel
@using SFA.Apprenticeships.Domain.Entities.Vacancies.Apprenticeships
@using SFA.Apprenticeships.Web.Recruit.Constants
@{
    ViewBag.Title = "Recruit an Apprentice - Create new vacancy";
}

<div class="progress-indicator progress-indicator-horizontal">
    <ul>
        <li class="active">
            <span class="hide-tablet">Page </span>1<span class="hide-tablet"> of 3</span>.
            Vacancy type and approver
        </li>
        <li>
            <span class="hide-tablet">Page </span>2<span class="hide-tablet"> of 3</span>.
            Vacancy details
        </li>
        <li>
            <span class="hide-tablet">Page </span>3<span class="hide-tablet"> of 3</span>.
            Vacancy submitted
        </li>
    </ul>
</div>
<h1 class="heading-xlarge">
    Create new vacancy
</h1>

@using (Html.BeginRouteForm(RecruitmentRouteNames.CreateVacancy, FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.Partial("ValidationSummary", ViewData.ModelState)

    <div class="form-group">
        <p class="form-label">Framework</p>

        <select id="@Html.IdFor(model => model.FrameworkCodeName)" name="@Html.NameFor(m => m.FrameworkCodeName)" class="para-btm-margin">
            <option value="" selected>Choose from a list of frameworks</option>

            @foreach (var sector in Model.Sectors)
            {
                <optgroup label="@sector.FullName">
                    @foreach (var framework in sector.Frameworks)
                    {
                        <option value="@framework.CodeName">@framework.FullName</option>
                    }
                </optgroup>
            }
        </select>
    </div>

    <div class="form-group inline clearfix">
        <p class="form-label" id="apprenticeship-level-label">Choose apprenticeship level</p>
        <label for="apprenticeship-level-intermediate" class="block-label">
            @Html.RadioButtonFor(model => model.ApprenticeshipLevel, @ApprenticeshipLevel.Intermediate, new { id = "apprenticeship-level-intermediate", aria_labelledby = "apprenticeship-level-label" }) Intermediate
        </label>

        <label for="apprenticeship-level-advanced" class="block-label">
            @Html.RadioButtonFor(model => model.ApprenticeshipLevel, @ApprenticeshipLevel.Advanced, new { id = "apprenticeship-level-advanced", aria_labelledby = "apprenticeship-level-label" }) Advanced
        </label>

        <label for="apprenticeship-level-higher" class="block-label">
            @Html.RadioButtonFor(model => model.ApprenticeshipLevel, @ApprenticeshipLevel.Higher, new { id = "apprenticeship-level-higher", aria_labelledby = "apprenticeship-level-label" }) Higher
        </label>
    </div>

    <div class="form-group">
        <p class="form-label">Choose training site</p>
        <!-- TODO: US811: provider sites width list. -->
        @Html.DropDownListFor(model => model.TrainingSiteErn, Model.ProviderSites, new { @class = "chosen-select width-all-1-1" })
    </div>

    <fieldset class="form-group">
        <button type="submit" class="button">Create vacancy</button>
    </fieldset>
}

@section scripts {
    <script>
        $(function () {
            $(".chosen-select").chosen();
        });
    </script>
}
