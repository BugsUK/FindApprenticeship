@model SFA.Apprenticeships.Web.Raa.Common.ViewModels.Vacancy.VacancySummaryViewModel
@using SFA.Apprenticeships.Domain.Entities.Vacancies.ProviderVacancies
@using SFA.Apprenticeships.Web.Recruit.Constants
@using SFA.Apprenticeships.Web.Common.Extensions
@using SFA.Apprenticeships.Web.Common.Validators.Extensions
@using SFA.Apprenticeships.Web.Raa.Common.Constants.ViewModels
@{
    ViewBag.Title = "Recruit an Apprentice - Enter vacancy summary";
}

<h1 class="heading-xlarge">
    Enter vacancy details
</h1>

@using (Html.BeginRouteForm(RecruitmentRouteNames.VacancySummary, FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.Partial("ValidationSummary", ViewData.ModelState)

    @Html.HiddenFor(m => m.VacancyReferenceNumber)
    
    <section>
        <div class="form-group">
            <fieldset class="form-group inline-fixed">
                @Html.FormTextAreaFor(m => m.WorkingWeek, containerHtmlAttributes: new {@baseClassName = "working-week"}, controlHtmlAttributes: new {@class = "width-all-1-1", type = "text", size = 12})
            </fieldset>

            <fieldset class="form-group inline-fixed">
                @Html.FormTextFor(m => m.HoursPerWeek, controlHtmlAttributes: new { @class = "form-control-small", type = "tel", size = 12 }, containerHtmlAttributes: new {style = "margin-bottom: 15px"})
            </fieldset>
            <div class="form-group">@Html.DisplayFor(m => m.WorkingWeekComment, "Comment")</div>
            <div class="blocklabel-single-container">
                <div class="form-group">
                    <a name="@Html.NameFor(m => m.WageType).ToString().ToLower()"></a>
                    <label class="form-label" for="weekly-wage">Wage</label>
                    <div class="form-group @(HtmlExtensions.GetValidationCssClass(Html.GetValidationType(m => m.WageType)))" data-editable-x="">
                        @* ReSharper disable once Html.IdNotResolved *@
                        <label for="custom-wage" class="block-label" data-target="custom-wage-panel">
                            @Html.RadioButtonFor(model => model.WageType, WageType.Custom, new {id = "custom-wage", aria_controls = "wage-type-panel"})
                            Custom wage
                        </label>
                        @* ReSharper disable once Html.IdNotResolved *@
                        <label for="national-minimum-wage" class="block-label">
                            @Html.RadioButtonFor(model => model.WageType, WageType.NationalMinimumWage, new {id = "national-minimum-wage", aria_controls = "wage-type-panel"})
                            National Minimum Wage
                        </label>
                        @* ReSharper disable once Html.IdNotResolved *@
                        <label for="apprenticeship-minimum-wage" class="block-label">
                            @Html.RadioButtonFor(model => model.WageType, WageType.ApprenticeshipMinimumWage, new {id = "apprenticeship-minimum-wage", aria_controls = "wage-type-panel"})
                            National Minimum Wage for apprentices
                        </label>
                        @Html.ValidationMessageFor(m => m.WageType)
                    </div>
                    <div id="custom-wage-panel" class="toggle-content blocklabel-content">
                        <fieldset class="form-group inline-fixed">
                            £
                            @Html.FormTextFor(m => m.Wage, containerHtmlAttributes: new {@class = "form-group-compound"}, labelHtmlAttributes: new {style = "Display: none"}, controlHtmlAttributes: new {@class = "form-control-large", type = "tel", size = 12})
                            @Html.DropDownListFor(m => m.WageUnit, Model.WageUnits)
                        </fieldset>
                    </div>
                </div>
                <div class="form-group">@Html.DisplayFor(m => m.WageComment, "Comment")</div>
            </div>

            <fieldset class="form-group">
                <div class="form-group @(HtmlExtensions.GetValidationCssClass(Html.GetValidationType(m => m.Duration)))">
                    <a name="@Html.NameFor(m => m.Duration).ToString().ToLower()"></a>
                    @Html.LabelFor(m => m.Duration, new {@class = "form-label"})
                    @Html.TextBoxFor(m => m.Duration, new {@class = "form-control-large form-control", type = "tel", size = 12})
                    @Html.DropDownListFor(m => m.DurationType, Model.DurationTypes)
                    @Html.ValidationMessageWithSeverityFor(m => m.Duration, Html.GetValidationType(m => m.Duration))
                </div>
            </fieldset>
            <fieldset class="form-group">
                @Html.DisplayFor(m => m.DurationComment, "Comment")
            </fieldset>

            <fieldset class="form-group inline-fixed date-input @(HtmlExtensions.GetValidationCssClass(Html.GetValidationType(m => m.ClosingDate)))">
                <a name="@Html.NameFor(m => m.ClosingDate).ToString().ToLower()"></a>
                <legend class="form-label">@Model.GetMetadata(m => m.ClosingDate).DisplayName</legend>
                @Html.EditorFor(m => m.ClosingDate)
                @Html.ValidationMessageWithSeverityFor(m => m.ClosingDate, Html.GetValidationType(m => m.ClosingDate))
            </fieldset>
            <div class="form-group">@Html.DisplayFor(m => m.ClosingDateComment, "Comment")</div>
            <fieldset class="form-group inline-fixed date-input @(HtmlExtensions.GetValidationCssClass(Html.GetValidationType(m => m.PossibleStartDate)))">
                <a name="@Html.NameFor(m => m.PossibleStartDate).ToString().ToLower()"></a>
                <legend class="form-label">@Model.GetMetadata(m => m.PossibleStartDate).DisplayName</legend>
                @Html.EditorFor(m => m.PossibleStartDate)
                @Html.ValidationMessageWithSeverityFor(m => m.PossibleStartDate, Html.GetValidationType(m => m.PossibleStartDate))
            </fieldset>
            <div class="form-group">@Html.DisplayFor(m => m.PossibleStartDateComment, "Comment")</div>
            @Html.FormTextAreaFor(m => m.LongDescription, controlHtmlAttributes: new {@class = "width-all-1-1 form-textarea-large", type = "text", size = 12, rows = 22})
            @Html.DisplayFor(m => m.LongDescriptionComment, "Comment")
        </div>
    </section>
    <div class="grid grid-1-2">
        <button type="submit" class="button" name="VacancySummary" value="VacancySummary">Save and continue</button>
        <button id="vacancySummaryAndExit" type="submit" class="button-link" name="VacancySummary" value="VacancySummaryAndExit">Save and exit</button>
    </div>
}