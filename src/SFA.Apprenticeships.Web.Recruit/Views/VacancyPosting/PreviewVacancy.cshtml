@model VacancyViewModel
@using SFA.Apprenticeships.Domain.Entities.Raa.Vacancies
@using SFA.Apprenticeships.Web.Raa.Common.ViewModels.Vacancy
@using SFA.Apprenticeships.Web.Recruit.Constants
@{
    ViewBag.Title = "Recruit an Apprentice - Preview vacancy";
}

@Html.Partial("ValidationSummary", ViewData.ModelState)

<div>
    @Html.DisplayFor(m => m, VacancyViewModel.PartialView)

    @if (Model.Status.IsStateReadOnly())
    {
        <a id="dashboardLink" href="@Url.RouteUrl(RecruitmentRouteNames.RecruitmentHome)">Return to recruitment home</a>
    }
    else
    {
        using (Html.BeginRouteForm(RecruitmentRouteNames.SubmitVacancy, FormMethod.Post))
        {
            @Html.HiddenFor(m => m.VacancyReferenceNumber)

            if (Model.Status == VacancyStatus.RejectedByQA)
            {
                Model.ResubmitOption = false;
                @Html.FormCheckBoxFor(model => model.ResubmitOption, labelHtmlAttributes: new { @class = "block-label para-btm-margin" })
            }
            else
            {
                Model.ResubmitOption = true;
                @Html.HiddenFor(model => model.ResubmitOption)
            }

            <section>
                <div class="form-group">
                    @if (Model.Status == VacancyStatus.RejectedByQA)
                    {
                        <button type="submit" class="button">Resubmit vacancy</button>
                    }
                    else
                    {
                        <button type="submit" class="button">Submit for approval</button>
                    }
                    <a id="dashboardLink" href="@Url.RouteUrl(RecruitmentRouteNames.RecruitmentHome)">Save and exit</a>
                </div>
            </section>
        }
    }
</div>