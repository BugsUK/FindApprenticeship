@model VacancyQuestionsViewModel
@using SFA.Apprenticeships.Domain.Entities.Raa.Vacancies
@using SFA.Apprenticeships.Web.Raa.Common.ViewModels.Vacancy
@using SFA.Apprenticeships.Web.Recruit.Constants

@using (Html.BeginRouteForm(RecruitmentRouteNames.VacancyQuestions, FormMethod.Post, new { id = "vacancy-questions-form" }))
{
    @Html.HiddenFor(m => m.AutoSaveTimeoutInSeconds)
    @Html.DisplayFor(m => m, VacancyQuestionsViewModel.PartialView)

    var saveButtonText = (Model.Status == VacancyStatus.Referred || Model.ComeFromPreview) ? "Save and return to Preview" : "Save and preview " + (Model.VacancyType == VacancyType.Traineeship ? "opportunity" : "vacancy");

    <div class="column-two-thirds sfa-xlarge-top-margin inline">
        <button type="submit" class="button no-autosave" name="VacancyQuestions" value="VacancyQuestions">@saveButtonText</button>
        <button id="VacancyQuestionsAndExit" type="submit" class="button sfa-button-secondary no-autosave" name="VacancyQuestions" value="VacancyQuestionsAndExit">Save and exit</button>
        @if (Model.ComeFromPreview)
        {
            @Html.RouteLink("Cancel", RecruitmentRouteNames.PreviewVacancy, new { vacancyReferenceNumber = Model.VacancyReferenceNumber }, new {@class = "no-autosave button sfa-button-secondary" })
        }
    </div>
}

@section scripts
{
    @Scripts.Render("~/bundles/autosave")

    <script>
        var autoSaveTimeout = @Html.Raw(Json.Encode(Model.AutoSaveTimeoutInSeconds)) * 1000;

        $(window).on('load', function() {
            autoSave.initialise({
                formSelector: "form",
                timeout: autoSaveTimeout,
                postUrl: '@Url.RouteUrl(RecruitmentRouteNames.AutoSaveVacancyQuestions)'
            });
        });
    </script>
}