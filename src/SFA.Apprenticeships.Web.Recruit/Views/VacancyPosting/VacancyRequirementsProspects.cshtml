@model VacancyRequirementsProspectsViewModel
@using System.Web.Mvc.Html
@using SFA.Apprenticeships.Domain.Entities.Raa.Vacancies
@using SFA.Apprenticeships.Web.Raa.Common.ViewModels.Vacancy
@using SFA.Apprenticeships.Web.Recruit.Constants

@using (Html.BeginRouteForm(RecruitmentRouteNames.VacancyRequirementsProspects, FormMethod.Post))
{
    @Html.HiddenFor(m => m.AutoSaveTimeoutInSeconds)
    @Html.DisplayFor(m => m, VacancyRequirementsProspectsViewModel.PartialView)

    var saveButtonText = (Model.Status == VacancyStatus.Referred || Model.ComeFromPreview) ? "Save and return to Preview" : "Save and continue";

    <div class="grid grid-1-2">
        <button id="VacancyRequirementsProspectsButton" type="submit" class="button" name="VacancyRequirementsProspects" value="VacancyRequirementsProspects">@saveButtonText</button>
        <button id="VacancyRequirementsProspectsAndExit" type="submit" class="button-link" name="VacancyRequirementsProspects" value="VacancyRequirementsProspectsAndExit">Save and exit</button>
        @if (Model.ComeFromPreview)
        {
            @Html.RouteLink("Cancel", RecruitmentRouteNames.PreviewVacancy, new { vacancyReferenceNumber = Model.VacancyReferenceNumber })
        }
    </div>
}

@section scripts
{
    @Scripts.Render("~/bundles/autosave")

    <script>
        var autoSaveTimeout = @Html.Raw(Json.Encode(Model.AutoSaveTimeoutInSeconds)) * 1000;

        $(window).on('load', function() {
            autoSave.initialise({
                formSelector: "form",
                timeout: autoSaveTimeout,
                postUrl: '@Url.RouteUrl(RecruitmentRouteNames.AutoSaveRequirementsProspects)'
            });
        });
    </script>
}