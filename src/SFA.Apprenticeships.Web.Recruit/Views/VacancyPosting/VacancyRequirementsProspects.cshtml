@model VacancyRequirementsProspectsViewModel
@using System.Web.Mvc.Html
@using SFA.Apprenticeships.Domain.Entities.Raa.Vacancies
@using SFA.Apprenticeships.Web.Raa.Common.ViewModels.Vacancy
@using SFA.Apprenticeships.Web.Recruit.Constants

@using (Html.BeginRouteForm(RecruitmentRouteNames.VacancyRequirementsProspects, FormMethod.Post))
{
    @Html.HiddenFor(m => m.AutoSaveTimeoutInSeconds)
    @Html.DisplayFor(m => m, VacancyRequirementsProspectsViewModel.PartialView)

    var saveButtonText = (Model.Status == VacancyStatus.Referred || Model.ComeFromPreview) ? "Save and return to Preview" : "Save and continue";

    <div class="grid grid-1-2">
        <button id="VacancyRequirementsProspectsButton" type="submit" class="button no-autosave" name="VacancyRequirementsProspects" value="VacancyRequirementsProspects">@saveButtonText</button>
        <button id="VacancyRequirementsProspectsAndExit" type="submit" class="button-link no-autosave" name="VacancyRequirementsProspects" value="VacancyRequirementsProspectsAndExit">Save and exit</button>
        @if (Model.ComeFromPreview)
        {
            @Html.RouteLink("Cancel", RecruitmentRouteNames.PreviewVacancy, new { vacancyReferenceNumber = Model.VacancyReferenceNumber }, new {@class = "no-autosave" })
        }
    </div>
}

@section scripts
{
    @Scripts.Render("~/bundles/autosave")

    <script>
        var autoSaveTimeout = @Html.Raw(Json.Encode(Model.AutoSaveTimeoutInSeconds)) * 1000;

        $(window).on('load', function() {
            autoSave.initialise({
                formSelector: "form",
                timeout: autoSaveTimeout,
                postUrl: '@Url.RouteUrl(RecruitmentRouteNames.AutoSaveRequirementsProspects)'
            });
        });
    </script>

    <script src="https://cdn.ckeditor.com/4.5.10/standard/ckeditor.js"></script>
    <script src="https://cdn.ckeditor.com/4.5.10/standard/adapters/jquery.js"></script>
    <script>
        if (typeof CKEDITOR == 'undefined') {
            document.write(unescape("%3Cscript src='/Content/_assets/js/vendor/ckeditor/ckeditor.js' type='text/javascript'%3E%3C/script%3E"));
            document.write(unescape("%3Cscript src='/Content/_assets/js/vendor/ckeditor/adapters/jquery.js' type='text/javascript'%3E%3C/script%3E"));
        }
    </script>

    <script src="~/Content/_assets/js/vendor/nanospell/autoload.js"></script>
    <script>

        var isApprenticeship;
        isApprenticeship = "@(Model.VacancyType == VacancyType.Apprenticeship)";

        CKEDITOR.replace('DesiredSkills',
        {
            customConfig: '/Content/_assets/js/vendor/ckeditor/config.js',
            contentsCss: '/Content/_assets/js/vendor/ckeditor/contents.css'
        });

        if (isApprenticeship === "True"){
	        CKEDITOR.replace('DesiredQualifications',
	        {
	            customConfig: '/Content/_assets/js/vendor/ckeditor/config.js',
	            contentsCss: '/Content/_assets/js/vendor/ckeditor/contents.css'
	        });
        }

        CKEDITOR.replace('PersonalQualities',
        {
            customConfig: '/Content/_assets/js/vendor/ckeditor/config.js',
            contentsCss: '/Content/_assets/js/vendor/ckeditor/contents.css'
        });

        nanospell.ckeditor('all',
        {
            dictionary: "en_uk", // 24 free international dictionaries
            server: "asp.net" // can be php, asp, asp.net or java
        });
    </script>
}