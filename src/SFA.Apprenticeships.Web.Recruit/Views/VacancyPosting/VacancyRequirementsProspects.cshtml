@model SFA.Apprenticeships.Web.Raa.Common.ViewModels.Vacancy.VacancyRequirementsProspectsViewModel
@using SFA.Apprenticeships.Domain.Entities.Vacancies.ProviderVacancies
@using SFA.Apprenticeships.Web.Recruit.Constants
@{
    ViewBag.Title = "Recruit an Apprentice - Enter vacancy requirements and prospects";

    var saveButtonText = ( Model.Status == ProviderVacancyStatuses.RejectedByQA || Model.ComeFromPreview ) ? "Save and return to Preview" : "Save and continue";
}

<h1 class="heading-xlarge">
    Requirements and prospects
</h1>

@using (Html.BeginRouteForm(RecruitmentRouteNames.VacancyRequirementsProspects, FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.Partial("ValidationSummary", ViewData.ModelState)

    @Html.HiddenFor(m => m.VacancyReferenceNumber)
    @Html.HiddenFor(m => m.Status)
    @Html.HiddenFor(m => m.ComeFromPreview)

    <section>
        <div class="form-group">
            @Html.FormTextAreaFor(m => m.DesiredSkills, controlHtmlAttributes: new { @class = "width-all-1-1 form-textarea-medium", type = "text" })
            @Html.DisplayFor(m => m.DesiredSkillsComment, "Comment")
            @Html.FormTextAreaFor(m => m.PersonalQualities, controlHtmlAttributes: new { @class = "width-all-1-1 form-textarea-medium", type = "text" })
            @Html.DisplayFor(m => m.PersonalQualitiesComment, "Comment")
            @Html.FormTextAreaFor(m => m.DesiredQualifications, controlHtmlAttributes: new { @class = "width-all-1-1 form-textarea-medium", type = "text" })
            @Html.DisplayFor(m => m.DesiredQualificationsComment, "Comment")
            @Html.FormTextAreaFor(m => m.FutureProspects, controlHtmlAttributes: new { @class = "width-all-1-1 form-textarea-medium", type = "text" })
            @Html.DisplayFor(m => m.FutureProspectsComment, "Comment")
            @Html.FormTextAreaFor(m => m.ThingsToConsider, controlHtmlAttributes: new { @class = "width-all-1-1 form-textarea-medium", type = "text" })
            @Html.DisplayFor(m => m.ThingsToConsiderComment, "Comment")
        </div>
    </section>
    <div class="grid grid-1-2">
        <button id="VacancyRequirementsProspectsButton" type="submit" class="button" name="VacancyRequirementsProspects" value="VacancyRequirementsProspects">@saveButtonText</button>
        <button id="VacancyRequirementsProspectsAndExit" type="submit" class="button-link" name="VacancyRequirementsProspects" value="VacancyRequirementsProspectsAndExit">Save and exit</button>
        @if (Model.ComeFromPreview)
        {
            @Html.RouteLink("Cancel", RecruitmentRouteNames.PreviewVacancy, new { vacancyReferenceNumber = Model.VacancyReferenceNumber })
        }
    </div>
}
