@model SFA.Apprenticeships.Web.Recruit.ViewModels.Vacancy.NewVacancyViewModel
@using SFA.Apprenticeships.Domain.Entities.Vacancies.Apprenticeships
@using SFA.Apprenticeships.Web.Recruit.Constants
@{
    ViewBag.Title = "Recruit an Apprentice - Select framework and level";
}

<h1 class="heading-xlarge">
    Select framework and level
</h1>

@using (Html.BeginRouteForm(RecruitmentRouteNames.CreateVacancy, FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.Partial("ValidationSummary", ViewData.ModelState)

    @Html.FormTextFor(m => m.Title, controlHtmlAttributes: new { type = "text" }, labelHtmlAttributes: new { @class = "bold-small" })

    <!--TODO: Why is 4000 characters remaining appearing?-->
    @Html.FormTextAreaFor(m => m.ShortDescription, controlHtmlAttributes: new { type = "text", size = 12 }, labelHtmlAttributes: new { @class = "bold-small" })

    <div class="form-group">
        <p class="form-label">Apprenticeship framework</p>

        <select id="@Html.IdFor(model => model.FrameworkCodeName)" name="@Html.NameFor(m => m.FrameworkCodeName)" class="para-btm-margin">
            <option value="" selected>Choose from a list of frameworks</option>

            @foreach (var sector in Model.SectorsAndFrameworks)
            {
                <optgroup label="@sector.FullName">
                    @foreach (var framework in sector.Frameworks)
                    {
                        <option value="@framework.CodeName">@framework.FullName</option>
                    }
                </optgroup>
            }
        </select>
    </div>

    <div class="form-group inline clearfix">
        <p class="form-label" id="apprenticeship-level-label">Apprenticeship level</p>

        @* ReSharper disable once Html.IdNotResolved *@
        <label for="apprenticeship-level-intermediate" class="block-label">
            @Html.RadioButtonFor(model => model.ApprenticeshipLevel, ApprenticeshipLevel.Intermediate, new {id = "apprenticeship-level-intermediate", aria_labelledby = "apprenticeship-level-label"}) Intermediate
        </label>

        @* ReSharper disable once Html.IdNotResolved *@
        <label for="apprenticeship-level-advanced" class="block-label">
            @Html.RadioButtonFor(model => model.ApprenticeshipLevel, ApprenticeshipLevel.Advanced, new {id = "apprenticeship-level-advanced", aria_labelledby = "apprenticeship-level-label"}) Advanced
        </label>

        @* ReSharper disable once Html.IdNotResolved *@
        <label for="apprenticeship-level-higher" class="block-label">
            @Html.RadioButtonFor(model => model.ApprenticeshipLevel, ApprenticeshipLevel.Higher, new {id = "apprenticeship-level-higher", aria_labelledby = "apprenticeship-level-label"}) Higher
        </label>
    </div>

    @Html.HiddenFor(model => model.Ukprn)
    @Html.HiddenFor(model => model.ProviderSiteEmployerLink.ProviderSiteErn)
    @Html.HiddenFor(model => model.ProviderSiteEmployerLink.Employer.Ern);

    <div class="form-group">
        <button type="submit" class="button">Save and continue</button>
    </div>
}
