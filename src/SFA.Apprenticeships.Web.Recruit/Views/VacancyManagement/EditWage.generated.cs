#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SFA.Apprenticeships.Web.Recruit.Views.VacancyManagement
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    #line 1 "..\..\Views\VacancyManagement\EditWage.cshtml"
    using SFA.Apprenticeships.Domain.Entities.Vacancies;
    
    #line default
    #line hidden
    using SFA.Apprenticeships.Infrastructure.Presentation;
    using SFA.Apprenticeships.Web.Common.Constants;
    using SFA.Apprenticeships.Web.Common.Framework;
    using SFA.Apprenticeships.Web.Common.Models.Common;
    
    #line 2 "..\..\Views\VacancyManagement\EditWage.cshtml"
    using SFA.Apprenticeships.Web.Common.ViewModels;
    
    #line default
    #line hidden
    
    #line 3 "..\..\Views\VacancyManagement\EditWage.cshtml"
    using SFA.Apprenticeships.Web.Raa.Common.ViewModels.Vacancy;
    
    #line default
    #line hidden
    using SFA.Apprenticeships.Web.Raa.Common.Views.Shared.DisplayTemplates;
    using SFA.Apprenticeships.Web.Recruit;
    
    #line 4 "..\..\Views\VacancyManagement\EditWage.cshtml"
    using SFA.Apprenticeships.Web.Recruit.Constants;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/VacancyManagement/EditWage.cshtml")]
    public partial class EditWage : System.Web.Mvc.WebViewPage<SFA.Apprenticeships.Web.Raa.Common.ViewModels.VacancyManagement.EditWageViewModel>
    {
        public EditWage()
        {
        }
        public override void Execute()
        {
            
            #line 7 "..\..\Views\VacancyManagement\EditWage.cshtml"
  
    ViewBag.Title = "Recruit an Apprentice - Increase vacancy wage";

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n<h1");

WriteLiteral(" class=\"heading-xlarge\"");

WriteLiteral(">\r\n    Increase vacancy wage\r\n</h1>\r\n\r\n");

            
            #line 15 "..\..\Views\VacancyManagement\EditWage.cshtml"
 using (Html.BeginRouteForm(RecruitmentRouteNames.EditWage, new { vacancyReferenceNumber = Model.VacancyReferenceNumber }, FormMethod.Post, new { id = "edit-wage-form" }))
{

            
            #line default
            #line hidden
WriteLiteral("    <div>\r\n");

            
            #line 18 "..\..\Views\VacancyManagement\EditWage.cshtml"
        
            
            #line default
            #line hidden
            
            #line 18 "..\..\Views\VacancyManagement\EditWage.cshtml"
         if (Model.ExistingWage.Type != WageType.Custom && Model.ExistingWage.Type != WageType.CustomRange)
        {

            
            #line default
            #line hidden
WriteLiteral("            <h3");

WriteLiteral(" id=\"current-wage-header\"");

WriteLiteral(" class=\"bold-small\"");

WriteLiteral(">Current wage</h3>\r\n");

            
            #line 21 "..\..\Views\VacancyManagement\EditWage.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 23 "..\..\Views\VacancyManagement\EditWage.cshtml"
        
            
            #line default
            #line hidden
            
            #line 23 "..\..\Views\VacancyManagement\EditWage.cshtml"
         if (Model.ExistingWage.Type == WageType.ApprenticeshipMinimum)
        {

            
            #line default
            #line hidden
WriteLiteral("            <p");

WriteLiteral(" id=\"current-wage-name\"");

WriteLiteral(">National minimum wage for apprentices</p>\r\n");

            
            #line 26 "..\..\Views\VacancyManagement\EditWage.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 28 "..\..\Views\VacancyManagement\EditWage.cshtml"
        
            
            #line default
            #line hidden
            
            #line 28 "..\..\Views\VacancyManagement\EditWage.cshtml"
         if (Model.ExistingWage.Type == WageType.NationalMinimum)
        {

            
            #line default
            #line hidden
WriteLiteral("            <p");

WriteLiteral(" id=\"current-wage-name\"");

WriteLiteral(">National Minimum Wage</p>\r\n");

            
            #line 31 "..\..\Views\VacancyManagement\EditWage.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 33 "..\..\Views\VacancyManagement\EditWage.cshtml"
        
            
            #line default
            #line hidden
            
            #line 33 "..\..\Views\VacancyManagement\EditWage.cshtml"
         if (Model.ExistingWage.Type == WageType.Unwaged)
        {

            
            #line default
            #line hidden
WriteLiteral("            <p");

WriteLiteral(" id=\"current-wage-name\"");

WriteLiteral(">Unwaged</p>\r\n");

            
            #line 36 "..\..\Views\VacancyManagement\EditWage.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 38 "..\..\Views\VacancyManagement\EditWage.cshtml"
        
            
            #line default
            #line hidden
            
            #line 38 "..\..\Views\VacancyManagement\EditWage.cshtml"
         if (Model.ExistingWage.Type == WageType.ApprenticeshipMinimum || Model.ExistingWage.Type == WageType.NationalMinimum)
        {

            
            #line default
            #line hidden
WriteLiteral("            <h3");

WriteLiteral(" id=\"vacancy-wage-header\"");

WriteLiteral(" class=\"bold-small\"");

WriteLiteral(">Wage displayed</h3>\r\n");

WriteLiteral("            <p");

WriteLiteral(" id=\"vacancy-wage\"");

WriteLiteral(">\r\n");

WriteLiteral("                ");

            
            #line 42 "..\..\Views\VacancyManagement\EditWage.cshtml"
           Write(WagePresenter.GetDisplayAmount(Model.ExistingWage.Type, Model.ExistingWage.Amount, Model.ExistingWage.AmountLowerBound, Model.ExistingWage.AmountUpperBound, Model.ExistingWage.Text, Model.ExistingWage.HoursPerWeek, Model.PossibleStartDate));

            
            #line default
            #line hidden
WriteLiteral(" (based on ");

            
            #line 42 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                                                                                                                                                                                                                                                      Write(Model.ExistingWage.HoursPerWeek);

            
            #line default
            #line hidden
WriteLiteral(" paid hours per week)\r\n\r\n");

            
            #line 44 "..\..\Views\VacancyManagement\EditWage.cshtml"
                
            
            #line default
            #line hidden
            
            #line 44 "..\..\Views\VacancyManagement\EditWage.cshtml"
                 if (Model.ExistingWage.Type == WageType.ApprenticeshipMinimum)
                {
                    
            
            #line default
            #line hidden
            
            #line 46 "..\..\Views\VacancyManagement\EditWage.cshtml"
               Write(Html.Partial("_ApprenticeMinimumWageExplained", Model.PossibleStartDate));

            
            #line default
            #line hidden
            
            #line 46 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                                                                             
                }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 49 "..\..\Views\VacancyManagement\EditWage.cshtml"
                
            
            #line default
            #line hidden
            
            #line 49 "..\..\Views\VacancyManagement\EditWage.cshtml"
                 if (Model.ExistingWage.Type == WageType.NationalMinimum)
                {
                    
            
            #line default
            #line hidden
            
            #line 51 "..\..\Views\VacancyManagement\EditWage.cshtml"
               Write(Html.Partial("_NationalMinimumWageExplained", Model.PossibleStartDate));

            
            #line default
            #line hidden
            
            #line 51 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                                                                           
                }

            
            #line default
            #line hidden
WriteLiteral("            </p>\r\n");

            
            #line 54 "..\..\Views\VacancyManagement\EditWage.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("\r\n        <div");

WriteLiteral(" class=\"blocklabel-single-container\"");

WriteLiteral(">\r\n            <a");

WriteAttribute("name", Tuple.Create(" name=\"", 2416), Tuple.Create("\"", 2470)
            
            #line 57 "..\..\Views\VacancyManagement\EditWage.cshtml"
, Tuple.Create(Tuple.Create("", 2423), Tuple.Create<System.Object, System.Int32>(Html.NameFor(m => m.Type).ToString().ToLower()
            
            #line default
            #line hidden
, 2423), false)
);

WriteLiteral("></a>\r\n");

            
            #line 58 "..\..\Views\VacancyManagement\EditWage.cshtml"
            
            
            #line default
            #line hidden
            
            #line 58 "..\..\Views\VacancyManagement\EditWage.cshtml"
             if (Model.ExistingWage.Type == WageType.ApprenticeshipMinimum || Model.ExistingWage.Type == WageType.Unwaged)
            {

            
            #line default
            #line hidden
WriteLiteral("                <label");

WriteLiteral(" id=\"wage-type-label\"");

WriteLiteral(" class=\"form-label-bold\"");

WriteLiteral(">Change wage type</label>\r\n");

            
            #line 61 "..\..\Views\VacancyManagement\EditWage.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("            <div");

WriteAttribute("class", Tuple.Create(" class=\"", 2742), Tuple.Create("\"", 2835)
, Tuple.Create(Tuple.Create("", 2750), Tuple.Create("form-group", 2750), true)
            
            #line 62 "..\..\Views\VacancyManagement\EditWage.cshtml"
, Tuple.Create(Tuple.Create(" ", 2760), Tuple.Create<System.Object, System.Int32>(HtmlExtensions.GetValidationCssClass(Html.GetValidationType(m => m.Type))
            
            #line default
            #line hidden
, 2761), false)
);

WriteLiteral(">\r\n                ");

WriteLiteral("\r\n                <label");

WriteLiteral(" id=\"national-minimum-wage-radio-label\"");

WriteLiteral(" for=\"national-minimum-wage\"");

WriteAttribute("class", Tuple.Create(" class=\"", 2993), Tuple.Create("\"", 3159)
, Tuple.Create(Tuple.Create("", 3001), Tuple.Create("block-label", 3001), true)
, Tuple.Create(Tuple.Create(" ", 3012), Tuple.Create("selection-button-radio", 3013), true)
            
            #line 64 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                                    , Tuple.Create(Tuple.Create(" ", 3035), Tuple.Create<System.Object, System.Int32>(Model.ExistingWage.Type == WageType.ApprenticeshipMinimum || Model.ExistingWage.Type == WageType.Unwaged ? "" : "hidden"
            
            #line default
            #line hidden
, 3036), false)
);

WriteLiteral(">\r\n");

WriteLiteral("                    ");

            
            #line 65 "..\..\Views\VacancyManagement\EditWage.cshtml"
               Write(Html.RadioButtonFor(model => model.Classification, WageClassification.NationalMinimum, new {id = "national-minimum-wage", aria_controls = "wage-type-panel"}));

            
            #line default
            #line hidden
WriteLiteral("\r\n                    National Minimum Wage\r\n                </label>\r\n          " +
"      ");

WriteLiteral("\r\n                <label");

WriteLiteral(" id=\"apprenticeship-minimum-wage-radio-label\"");

WriteLiteral(" for=\"apprenticeship-minimum-wage\"");

WriteAttribute("class", Tuple.Create(" class=\"", 3578), Tuple.Create("\"", 3683)
, Tuple.Create(Tuple.Create("", 3586), Tuple.Create("block-label", 3586), true)
, Tuple.Create(Tuple.Create(" ", 3597), Tuple.Create("selection-button-radio", 3598), true)
            
            #line 69 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                                                , Tuple.Create(Tuple.Create(" ", 3620), Tuple.Create<System.Object, System.Int32>(Model.ExistingWage.Type == WageType.Unwaged ? "" : "hidden"
            
            #line default
            #line hidden
, 3621), false)
);

WriteLiteral(">\r\n");

WriteLiteral("                    ");

            
            #line 70 "..\..\Views\VacancyManagement\EditWage.cshtml"
               Write(Html.RadioButtonFor(model => model.Classification, WageClassification.ApprenticeshipMinimum, new {id = "apprenticeship-minimum-wage", aria_controls = "wage-type-panel"}));

            
            #line default
            #line hidden
WriteLiteral("\r\n                    National Minimum Wage for apprentices\r\n                </la" +
"bel>\r\n                ");

WriteLiteral("\r\n                <label");

WriteLiteral(" id=\"custom-wage-radio-label\"");

WriteLiteral(" for=\"custom-wage\"");

WriteAttribute("class", Tuple.Create(" class=\"", 4098), Tuple.Create("\"", 4264)
, Tuple.Create(Tuple.Create("", 4106), Tuple.Create("block-label", 4106), true)
, Tuple.Create(Tuple.Create(" ", 4117), Tuple.Create("selection-button-radio", 4118), true)
            
            #line 74 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                , Tuple.Create(Tuple.Create(" ", 4140), Tuple.Create<System.Object, System.Int32>(Model.ExistingWage.Type == WageType.ApprenticeshipMinimum || Model.ExistingWage.Type == WageType.Unwaged ? "" : "hidden"
            
            #line default
            #line hidden
, 4141), false)
);

WriteLiteral(" data-target=\"custom-wage-panel\"");

WriteLiteral(">\r\n");

WriteLiteral("                    ");

            
            #line 75 "..\..\Views\VacancyManagement\EditWage.cshtml"
               Write(Html.RadioButtonFor(model => model.Classification, WageClassification.Custom, new {id = "custom-wage", aria_controls = "wage-type-panel"}));

            
            #line default
            #line hidden
WriteLiteral("\r\n                    Custom wage\r\n                </label>\r\n                <div" +
"");

WriteLiteral(" id=\"custom-wage-panel\"");

WriteLiteral(" class=\"toggle-content blocklabel-content nested-panel-1 clearfix\"");

WriteLiteral(">\r\n                    <div");

WriteLiteral(" class=\"panel panel-border-narrow\"");

WriteLiteral(">\r\n                        <fieldset");

WriteLiteral(" class=\"form-group inline-fixed\"");

WriteLiteral(">\r\n");

            
            #line 81 "..\..\Views\VacancyManagement\EditWage.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 81 "..\..\Views\VacancyManagement\EditWage.cshtml"
                             if (Model.ExistingWage.Type == WageType.NationalMinimum || Model.ExistingWage.Type == WageType.ApprenticeshipMinimum || Model.ExistingWage.Type == WageType.Unwaged)
                            {
                                if (Model.ExistingWage.Type == WageType.NationalMinimum)
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <span");

WriteLiteral(" id=\"custom-wage-label\"");

WriteLiteral(" class=\"clearfix\"");

WriteLiteral(">Select a custom wage option</span>\r\n");

            
            #line 86 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                }
                                else if (Model.ExistingWage.Type == WageType.ApprenticeshipMinimum || Model.ExistingWage.Type == WageType.Unwaged)
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <span");

WriteLiteral(" id=\"custom-wage-label\"");

WriteLiteral(" class=\"clearfix\"");

WriteLiteral(">Select an option</span>\r\n");

            
            #line 90 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                }
                                
            
            #line default
            #line hidden
            
            #line 91 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                                                               

            
            #line default
            #line hidden
WriteLiteral("                                <label");

WriteLiteral(" id=\"custom-wage-fixed-label\"");

WriteLiteral(" for=\"custom-wage-fixed\"");

WriteLiteral(" class=\"block-label selection-button-radio\"");

WriteLiteral(" data-target=\"custom-wage-fixed-panel\"");

WriteLiteral(">\r\n");

WriteLiteral("                                    ");

            
            #line 93 "..\..\Views\VacancyManagement\EditWage.cshtml"
                               Write(Html.RadioButtonFor(model => model.CustomType, CustomWageType.Fixed, new {id = "custom-wage-fixed", aria_controls = "custom-wage-panel"}));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                    <span");

WriteLiteral(" id=\"custom-wage-fixed-label-text\"");

WriteLiteral(">Fixed wage</span>\r\n                                </label>\r\n");

            
            #line 96 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 96 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                                                               

            
            #line default
            #line hidden
WriteLiteral("                                <label");

WriteLiteral(" id=\"custom-wage-range-label\"");

WriteLiteral(" for=\"custom-wage-range\"");

WriteLiteral(" class=\"block-label selection-button-radio\"");

WriteLiteral(" data-target=\"custom-wage-range-panel\"");

WriteLiteral(">\r\n");

WriteLiteral("                                    ");

            
            #line 98 "..\..\Views\VacancyManagement\EditWage.cshtml"
                               Write(Html.RadioButtonFor(model => model.CustomType, CustomWageType.Ranged, new {id = "custom-wage-range", aria_controls = "custom-wage-panel"}));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                    <span");

WriteLiteral(" id=\"custom-wage-range-label-text\"");

WriteLiteral(">Wage range</span>\r\n                                </label>\r\n");

            
            #line 101 "..\..\Views\VacancyManagement\EditWage.cshtml"
                            }

            
            #line default
            #line hidden
WriteLiteral("                            ");

            
            #line 102 "..\..\Views\VacancyManagement\EditWage.cshtml"
                             if (Model.ExistingWage.Type == WageType.Custom)
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <span");

WriteLiteral(" id=\"custom-wage-label\"");

WriteLiteral(" class=\"clearfix\"");

WriteLiteral(">Keep as fixed wage?</span>\r\n");

            
            #line 105 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 105 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                                                               

            
            #line default
            #line hidden
WriteLiteral("                                <label");

WriteLiteral(" id=\"custom-wage-fixed-label\"");

WriteLiteral(" for=\"custom-wage-fixed\"");

WriteLiteral(" class=\"block-label selection-button-radio\"");

WriteLiteral(" data-target=\"custom-wage-fixed-panel\"");

WriteLiteral(">\r\n");

WriteLiteral("                                    ");

            
            #line 107 "..\..\Views\VacancyManagement\EditWage.cshtml"
                               Write(Html.RadioButtonFor(model => model.CustomType, CustomWageType.Fixed, new {id = "custom-wage-fixed", aria_controls = "custom-wage-panel"}));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                    <span");

WriteLiteral(" id=\"custom-wage-fixed-label-text\"");

WriteLiteral(">Yes</span>\r\n                                </label>\r\n");

            
            #line 110 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 110 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                                                               

            
            #line default
            #line hidden
WriteLiteral("                                <label");

WriteLiteral(" id=\"custom-wage-range-label\"");

WriteLiteral(" for=\"custom-wage-range\"");

WriteLiteral(" class=\"block-label selection-button-radio\"");

WriteLiteral(" data-target=\"custom-wage-range-panel\"");

WriteLiteral(">\r\n");

WriteLiteral("                                    ");

            
            #line 112 "..\..\Views\VacancyManagement\EditWage.cshtml"
                               Write(Html.RadioButtonFor(model => model.CustomType, CustomWageType.Ranged, new {id = "custom-wage-range", aria_controls = "custom-wage-panel"}));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                    <span");

WriteLiteral(" id=\"custom-wage-range-label-text\"");

WriteLiteral(">No, change to wage range</span>\r\n                                </label>\r\n");

            
            #line 115 "..\..\Views\VacancyManagement\EditWage.cshtml"
                            }

            
            #line default
            #line hidden
WriteLiteral("                            ");

            
            #line 116 "..\..\Views\VacancyManagement\EditWage.cshtml"
                             if (Model.ExistingWage.Type == WageType.CustomRange)
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <span");

WriteLiteral(" id=\"custom-wage-label\"");

WriteLiteral(" class=\"clearfix\"");

WriteLiteral(">Keep as wage range?</span>\r\n");

            
            #line 119 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 119 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                                                               

            
            #line default
            #line hidden
WriteLiteral("                                <label");

WriteLiteral(" id=\"custom-wage-range-label\"");

WriteLiteral(" for=\"custom-wage-range\"");

WriteLiteral(" class=\"block-label selection-button-radio\"");

WriteLiteral(" data-target=\"custom-wage-range-panel\"");

WriteLiteral(">\r\n");

WriteLiteral("                                    ");

            
            #line 121 "..\..\Views\VacancyManagement\EditWage.cshtml"
                               Write(Html.RadioButtonFor(model => model.CustomType, CustomWageType.Ranged, new {id = "custom-wage-range", aria_controls = "custom-wage-panel"}));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                    <span");

WriteLiteral(" id=\"custom-wage-range-label-text\"");

WriteLiteral(">Yes</span>\r\n                                </label>\r\n");

            
            #line 124 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 124 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                                                               

            
            #line default
            #line hidden
WriteLiteral("                                <label");

WriteLiteral(" id=\"custom-wage-fixed-label\"");

WriteLiteral(" for=\"custom-wage-fixed\"");

WriteLiteral(" class=\"block-label selection-button-radio\"");

WriteLiteral(" data-target=\"custom-wage-fixed-panel\"");

WriteLiteral(">\r\n");

WriteLiteral("                                    ");

            
            #line 126 "..\..\Views\VacancyManagement\EditWage.cshtml"
                               Write(Html.RadioButtonFor(model => model.CustomType, CustomWageType.Fixed, new {id = "custom-wage-fixed", aria_controls = "custom-wage-panel"}));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                    <span");

WriteLiteral(" id=\"custom-wage-fixed-label-text\"");

WriteLiteral(">No, change to fixed wage</span>\r\n                                </label>\r\n");

            
            #line 129 "..\..\Views\VacancyManagement\EditWage.cshtml"
                            }

            
            #line default
            #line hidden
WriteLiteral("                            ");

            
            #line 130 "..\..\Views\VacancyManagement\EditWage.cshtml"
                       Write(Html.ValidationMessageFor(m => m.CustomType));

            
            #line default
            #line hidden
WriteLiteral("\r\n                        </fieldset>\r\n                        <div");

WriteLiteral(" id=\"custom-wage-fixed-panel\"");

WriteLiteral(" class=\"toggle-content blocklabel-content\"");

WriteLiteral(">\r\n                            <fieldset");

WriteLiteral(" class=\"nested-panel-2 form-group inline-fixed\"");

WriteLiteral(">\r\n");

            
            #line 134 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 134 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                 if (Model.ExistingWage.Type == WageType.Custom)
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <span");

WriteLiteral(" id=\"custom-wage-fixed-help-text\"");

WriteLiteral(" class=\"clearfix\"");

WriteLiteral(">Enter a new increased wage</span>\r\n");

            
            #line 137 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                                ");

            
            #line 138 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                 if (Model.ExistingWage.Type == WageType.CustomRange)
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <span");

WriteLiteral(" id=\"custom-wage-fixed-hint-text\"");

WriteLiteral(" class=\"clearfix form-hint\"");

WriteLiteral(">The wage must not be less than the minimum amount set in the original wage range" +
"</span>\r\n");

            
            #line 141 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                                ");

            
            #line 142 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                 if (Model.ExistingWage.HoursPerWeek.HasValue)
                                {
                                    if (Model.ExistingWage.Type == WageType.NationalMinimum)
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                        <span");

WriteLiteral(" id=\"custom-wage-fixed-hint-text\"");

WriteLiteral(" class=\"clearfix form-hint\"");

WriteLiteral(">The new increased wage must be more than ");

            
            #line 146 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                                                                                                                              Write(WagePresenter.GetWeeklyNationalMinimumWageMaximum(Model.ExistingWage.HoursPerWeek.Value, Model.PossibleStartDate));

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n");

            
            #line 147 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                    }
                                    else if (Model.ExistingWage.Type == WageType.ApprenticeshipMinimum || Model.ExistingWage.Type == WageType.Unwaged)
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                        <span");

WriteLiteral(" id=\"custom-wage-fixed-hint-text\"");

WriteLiteral(" class=\"clearfix form-hint\"");

WriteLiteral(">The new increased wage must be more than ");

            
            #line 150 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                                                                                                                              Write(WagePresenter.GetWeeklyApprenticeshipMinimumWage(Model.ExistingWage.HoursPerWeek.Value, Model.PossibleStartDate));

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n");

            
            #line 151 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                    }
                                }

            
            #line default
            #line hidden
WriteLiteral("                                £\r\n");

WriteLiteral("                                ");

            
            #line 154 "..\..\Views\VacancyManagement\EditWage.cshtml"
                           Write(Html.FormTextFor(m => m.Amount, containerHtmlAttributes: new {@class = "form-group-compound"}, labelHtmlAttributes: new {style = "Display: none"}, controlHtmlAttributes: new {@class = "form-control-large", type = "tel", size = 12}));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                ");

            
            #line 155 "..\..\Views\VacancyManagement\EditWage.cshtml"
                           Write(Html.DropDownListFor(m => m.Unit, Model.WageUnits, new {@class = "form-control"}));

            
            #line default
            #line hidden
WriteLiteral("\r\n                            </fieldset>\r\n                        </div>\r\n      " +
"                  <div");

WriteLiteral(" id=\"custom-wage-range-panel\"");

WriteLiteral(" class=\"toggle-content blocklabel-content\"");

WriteLiteral(">\r\n                            <fieldset");

WriteAttribute("class", Tuple.Create(" class=\"", 12197), Tuple.Create("\"", 12417)
, Tuple.Create(Tuple.Create("", 12205), Tuple.Create("nested-panel-2", 12205), true)
, Tuple.Create(Tuple.Create(" ", 12219), Tuple.Create("form-group", 12220), true)
, Tuple.Create(Tuple.Create(" ", 12230), Tuple.Create("inline-fixed", 12231), true)
            
            #line 159 "..\..\Views\VacancyManagement\EditWage.cshtml"
  , Tuple.Create(Tuple.Create(" ", 12243), Tuple.Create<System.Object, System.Int32>(HtmlExtensions.GetValidationCssClass(Html.GetValidationType(m => m.AmountLowerBound))
            
            #line default
            #line hidden
, 12244), false)
            
            #line 159 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                                                                         , Tuple.Create(Tuple.Create(" ", 12330), Tuple.Create<System.Object, System.Int32>(HtmlExtensions.GetValidationCssClass(Html.GetValidationType(m => m.AmountUpperBound))
            
            #line default
            #line hidden
, 12331), false)
);

WriteLiteral(">\r\n");

            
            #line 160 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 160 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                 if (Model.ExistingWage.Type == WageType.Custom)
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <span");

WriteLiteral(" id=\"custom-wage-range-hint-text\"");

WriteLiteral(" class=\"clearfix form-hint\"");

WriteLiteral(">The minimum amount in the wage range must not be less than the original fixed wa" +
"ge</span>\r\n");

            
            #line 163 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                                ");

            
            #line 164 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                 if (Model.ExistingWage.Type == WageType.CustomRange)
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <span");

WriteLiteral(" id=\"custom-wage-range-help-text\"");

WriteLiteral(" class=\"clearfix\"");

WriteLiteral(">Enter increased wage range</span>\r\n");

WriteLiteral("                                    <span");

WriteLiteral(" id=\"custom-wage-range-hint-text\"");

WriteLiteral(" class=\"clearfix form-hint\"");

WriteLiteral(">You can increase one or both of these figures</span>\r\n");

            
            #line 168 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                                ");

            
            #line 169 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                 if (Model.ExistingWage.HoursPerWeek.HasValue)
                                {
                                    if (Model.ExistingWage.Type == WageType.NationalMinimum)
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                        <span");

WriteLiteral(" id=\"custom-wage-range-hint-text\"");

WriteLiteral(" class=\"clearfix form-hint\"");

WriteLiteral(">The minimum amount in the wage range must be more than ");

            
            #line 173 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                                                                                                                                            Write(WagePresenter.GetWeeklyNationalMinimumWageMaximum(Model.ExistingWage.HoursPerWeek.Value, Model.PossibleStartDate));

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n");

            
            #line 174 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                    }
                                    else if (Model.ExistingWage.Type == WageType.ApprenticeshipMinimum || Model.ExistingWage.Type == WageType.Unwaged)
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                        <span");

WriteLiteral(" id=\"custom-wage-range-hint-text\"");

WriteLiteral(" class=\"clearfix form-hint\"");

WriteLiteral(">The minimum amount in the wage range must be more than ");

            
            #line 177 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                                                                                                                                            Write(WagePresenter.GetWeeklyApprenticeshipMinimumWage(Model.ExistingWage.HoursPerWeek.Value, Model.PossibleStartDate));

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n");

            
            #line 178 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                    }
                                }

            
            #line default
            #line hidden
WriteLiteral("                                £\r\n");

WriteLiteral("                                ");

            
            #line 181 "..\..\Views\VacancyManagement\EditWage.cshtml"
                           Write(Html.FormTextFor(m => m.AmountLowerBound, containerHtmlAttributes: new {@class = "form-group-compound"}, labelHtmlAttributes: new {style = "Display: none"}, controlHtmlAttributes: new {@class = "form-control-large", type = "tel", size = 12, placeholder = "min"}));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                &nbsp;to&nbsp;£\r\n");

WriteLiteral("                                ");

            
            #line 183 "..\..\Views\VacancyManagement\EditWage.cshtml"
                           Write(Html.FormTextFor(m => m.AmountUpperBound, containerHtmlAttributes: new {@class = "form-group-compound"}, labelHtmlAttributes: new {style = "Display: none"}, controlHtmlAttributes: new {@class = "form-control-large", type = "tel", size = 12, placeholder = "max"}));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                ");

            
            #line 184 "..\..\Views\VacancyManagement\EditWage.cshtml"
                           Write(Html.DropDownListFor(m => m.RangeUnit, Model.WageUnits, new {@class = "form-control"}));

            
            #line default
            #line hidden
WriteLiteral("\r\n                            </fieldset>\r\n                        </div>\r\n      " +
"              </div>\r\n                </div>\r\n            </div>\r\n");

WriteLiteral("            ");

            
            #line 190 "..\..\Views\VacancyManagement\EditWage.cshtml"
       Write(Html.ValidationMessageFor(m => m.Type));

            
            #line default
            #line hidden
WriteLiteral("\r\n        </div>\r\n\r\n        <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(">\r\n            <button");

WriteLiteral(" class=\"button\"");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" id=\"editWageButton\"");

WriteLiteral(" name=\"EditWage\"");

WriteLiteral(" value=\"EditWage\"");

WriteLiteral(">Save and return</button>\r\n\r\n");

            
            #line 196 "..\..\Views\VacancyManagement\EditWage.cshtml"
            
            
            #line default
            #line hidden
            
            #line 196 "..\..\Views\VacancyManagement\EditWage.cshtml"
              
                var routeName = Model.VacancyApplicationsState == VacancyApplicationsState.HasApplications ?
                    RecruitmentRouteNames.VacancyApplications :
                    RecruitmentRouteNames.PreviewVacancy;

                
            
            #line default
            #line hidden
            
            #line 201 "..\..\Views\VacancyManagement\EditWage.cshtml"
           Write(Html.RouteLink("Cancel", routeName, new {vacancyReferenceNumber = Model.VacancyReferenceNumber}));

            
            #line default
            #line hidden
            
            #line 201 "..\..\Views\VacancyManagement\EditWage.cshtml"
                                                                                                                 
            
            
            #line default
            #line hidden
WriteLiteral("\r\n        </div>\r\n    </div>\r\n");

            
            #line 205 "..\..\Views\VacancyManagement\EditWage.cshtml"
}
            
            #line default
            #line hidden
        }
    }
}
#pragma warning restore 1591
