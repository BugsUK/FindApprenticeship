@using SFA.Apprenticeships.Web.Recruit.Constants
@model SFA.Apprenticeships.Web.Recruit.ViewModels.Provider.ProviderSiteViewModel
@{
    ViewBag.Title = "Recruit an Apprentice - Edit Site";
}

<div class="grid-wrapper">
    <div class="hgroup">
        <h1 class="heading-xlarge">
            Edit training site
        </h1>
    </div>
    <div class="text">
        <p>These contact details will be used on the vacancy advert.</p>
    </div>
    <h2 class="heading-medium">Contact details</h2>

@using (Html.BeginRouteForm(RecruitmentRouteNames.EditProviderSite, FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.Partial("ValidationSummary", ViewData.ModelState)

    @Html.FormTextFor(
            m => m.Name,
            controlHtmlAttributes: new { type = "text", autofocus = "autofocus", spellcheck = "false" })

    @Html.FormTextFor(
            m => m.EmailAddress,
            controlHtmlAttributes: new { type = "email", spellcheck = "false" })

    @Html.FormTextFor(
            m => m.PhoneNumber,
            controlHtmlAttributes: new { @class = "form-label", type = "tel", spellcheck = "false" })
    
    <div class="form-group form-group-compound" id="addressInputWrapper">
        <label for="pca-addressInput" class="form-label">Find training site address</label>
        <span class="form-hint">Enter postcode or start typing address</span>
        <input id="pca-addressInput" type="text" class="form-control form-control-1-3"
               autocapitalize="characters" autocorrect="off" value="">
        <span class="visuallyhidden" id="ariaAddressEntered" aria-live="polite"></span>
    </div>
    <div class="form-group form-group-compound">
        <a href="#" class="copy-19" id="enterAddressManually">Or enter address manually</a>
        <span class="toggle-content loading-text" id="addressLoading">Loading address...</span>
    </div>
    <div id="manualAddressWrapper" class="clearfix form-group-compound">
        <div class="address-manual-input" id="addressManualInput">
            <div class="form-group form-group-compound">
                <label for="pca-address1" class="form-label">Training site address</label>
                <input id="pca-address1" type="text" class="form-control" autocorrect="off" value="Basing View">
            </div>
            <div class="form-group form-group-compound">
                <label for="pca-address2" class="form-label visuallyhidden">Second line (optional)</label>
                <input id="pca-address2" type="text" class="form-control" autocorrect="off" value="Basingstoke">
            </div>
            <div class="form-group form-group-compound">
                <label for="pca-address3" class="form-label visuallyhidden">Third line (optional)</label>
                <input id="pca-address3" type="text" class="form-control" autocorrect="off" value="Hampshire">
            </div>
            <div class="form-group form-group-compound">
                <label for="pca-address4" class="form-label visuallyhidden">Fourth line (optional)</label>
                <input id="pca-address4" type="text" class="form-control" autocorrect="off" value="">
            </div>
            <div class="form-group">
                <label for="pca-postcode" class="form-label">Postcode</label>
                <input id="pca-postcode" type="text" class="form-control form-control-large" autocapitalize="characters"
                       autocorrect="off" value="RG21 4RG">
            </div>
        </div>
    </div>

    @Html.HiddenFor(m => m.Ern);

    <div class="form-group">
        <button class="button">Save to sites</button>
    </div>
}
</div>
